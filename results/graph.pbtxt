node {
  name: "Input_Video"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 80
        }
        dim {
          size: 4096
        }
      }
    }
  }
}
node {
  name: "GT_Caption"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 80
        }
      }
    }
  }
}
node {
  name: "Caption_Mask"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 80
        }
      }
    }
  }
}
node {
  name: "Dropout_Keep_Probability"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07999999821186066
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07999999821186066
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Im2Cap/W_im2cap/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Im2Cap/W_im2cap/Initializer/random_uniform/max"
  input: "Im2Cap/W_im2cap/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Im2Cap/W_im2cap/Initializer/random_uniform/RandomUniform"
  input: "Im2Cap/W_im2cap/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Initializer/random_uniform"
  op: "AddV2"
  input: "Im2Cap/W_im2cap/Initializer/random_uniform/mul"
  input: "Im2Cap/W_im2cap/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Im2Cap/W_im2cap"
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Im2Cap/W_im2cap"
}
node {
  name: "Im2Cap/W_im2cap/Assign"
  op: "AssignVariableOp"
  input: "Im2Cap/W_im2cap"
  input: "Im2Cap/W_im2cap/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Im2Cap/W_im2cap"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/b_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 500
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Im2Cap/b_im2cap"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/b_im2cap"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Im2Cap/b_im2cap"
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Im2Cap/b_im2cap"
}
node {
  name: "Im2Cap/b_im2cap/Assign"
  op: "AssignVariableOp"
  input: "Im2Cap/b_im2cap"
  input: "Im2Cap/b_im2cap/Initializer/Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Im2Cap/b_im2cap"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\364\001\000\00021\000\000"
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07999999821186066
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07999999821186066
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/max"
  input: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/RandomUniform"
  input: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Initializer/random_uniform"
  op: "AddV2"
  input: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/mul"
  input: "Hid2Vocab/W_H2vocab/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 500
        }
        dim {
          size: 12594
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Hid2Vocab/W_H2vocab"
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Hid2Vocab/W_H2vocab"
}
node {
  name: "Hid2Vocab/W_H2vocab/Assign"
  op: "AssignVariableOp"
  input: "Hid2Vocab/W_H2vocab"
  input: "Hid2Vocab/W_H2vocab/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Hid2Vocab/W_H2vocab"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12594
          }
        }
        tensor_content: "\325H\345\275\000\000\000\000\302\017\327\300\353W5\277\273\371z\300\3359\020\301\"\t\022\300S>\221\300[e\214\300\273\"\005\301\325H\345\275gN\361\300\230\354\031\301\030\203\372\300\272\003%\301\037\251\006\301o\370\214\300\247\255\241\300\220F\336\300b\255\020\300\222\374O\300\203\200+\301\360\203c\300\301\211\211\300\255\243\220\277\344K\375\300\213\313\313\300\325T\344\300\250}\315\300\244\2276\301\025r\277\300Y\r\317\300ZO\256\277\275\306\034\300\014\036m\300c\364\327\300ai \301\003j&\300pl\321\300c\364\327\300\017p,\300\"o\211\300\3270\335\300\005\252\213\300\025\005\337\300k\265\230\300\354c<\3005\363\354\300\263Y\366\300zv\002\301\253\273\215\300\3359\020\301gN\361\300\035\222\250\300\256&P\300\256X\010\301\020^\014\301\314\007\213\300>|\237\300A\300\021\301\037\251\006\301\037\251\006\301`\216\224\300\272\321\331\300\364\016\315\300\256X\010\301O\240\274\300$h*\300\220\230V\300\345y\251\300R\326\334\300R\326\334\3008{\007\301\025\005\337\300q\242\346\300D \260\300\361~\245\300\263Y\366\300\256X\010\301\230\354\031\301,\320^\300\244\2276\301\263Y\366\300\203\200+\301w\325\016\301\272\003%\301\213\261\320\300\205Y\242\300\230\354\031\301@\313\332\300\234z\303\300?\217\243\300D \260\300\244\2276\301\025\005\337\300\244\2276\3011u\027\301\305|x\300b\327\034\301\234\215\r\301\203\200+\301\232_\354\300\234\215\r\301A\300\021\301\272\003%\301\372\265\263\300\264@\324\300[\221\241\300[\225\230\300\272\003%\301B\272\277\300\341\231\311\300zv\002\301\234\215\r\301\255h\311\300\266\031\350\300\336\027\243\300\234\343\276\300\273\"\005\301e\324\223\300j\214\261\300\263\020]\300\220\352l\300[\2338\300\244\2276\301\263Y\366\300\213\313\313\300\325T\344\3002\267\000\301\213\346\241\300n\220\330\300\344K\375\300\356F\001\301\263Y\366\300A\300\021\301\244\2276\301\021P\204\300\306\246\310\300\210q\300\300ai \301;N\277\300=q\243\300ai \301\231\276\253\300\240D\236\300G\341\005\301\007o\250\300\203\200+\301\231h\265\300\244\2276\301@R\025\301-\310\370\300\3575\314\300xC\013\301ai \301\304]\357\300~\036\236\300p\216\231\300\036F\315\3002\267\000\301\244\2276\301@R\025\301\203\200+\301\317z\326\300\243\177\264\300\020\231\256\300X\240\325\300\244\2276\301\203\200+\301s\202\221\300\244\2276\301U\276\003\301D\236\255\300\250\016L\300/\210u\3008{\007\301\256!\\\300\tL\206\300\203\200+\301\203\200+\301\244\2276\301\377\006\277\300\261\276\356\300\244\2276\301\272\003%\301\267\315\013\300\274\255\322\300A\300\021\301\220;\220\300\255h\311\300i*\352\300\272\003%\301\363\362\202\300\212d\272\300j:\263\300\345\251\266\300\210\323\364\300\340\262\255\300H\330\241\300\377\324x\300\341\355\315\300\203\200+\301\317o\023\301U\276\003\301\244\2276\3010\275\273\300\317o\023\301\3057\311\300\322\021\236\300\nB\330\300\027N\270\300X\240\325\300\244\2276\301\372\314\226\300\252\363\234\300\345F\261\300\216\314\264\300\3359\020\301\365\001\261\300\250\206\226\300Bn\234\300}\256\271\300\317o\023\301\356F\001\301\3525\230\300\325\205\324\300\241D\257\300[\336\225\300\203\200+\301xC\013\301\235E\216\300\300`\255\300\301\335\257\300\352\276S\300\203\200+\301\355\010\207\300\373#\367\300\352\231\342\300\242{\240\300\317o\023\301\272\003%\301b\327\034\301ai \301\374.\257\3008{\007\301*\270\323\3003\027\364\300\342j\270\300\230\354\031\301ai \301\355Bm\300\356F\001\301\341\231\311\300\030\203\372\300\306\333\231\300\330\261\211\300\244\2276\3011u\027\301G\341\005\301F{\235\300\244\2276\301 \027\003\301\020^\014\301\337\372\361\300J\235\276\300*\270\323\300\272\003%\301G\037\304\300\336\203\256\300\266\261\257\300@R\025\301\356\351\243\300\036;\n\301\244\2276\301ai \301\244\2276\301\337i\373\300\203\200+\301xC\013\301\014\232\225\300\203\200+\301\256X\010\301V,\000\301j\235\223\300A|\"\300m\202\206\300\272\003%\301zv\002\301+\005\236\300\263Y\366\300\244\2276\301b\327\034\301\344K\375\300\244\2276\301\317o\023\301@\335\273\300\234\314\333\300\244\2276\301\203\200+\301\337i\373\300\246\"\356\300_\214\335\300\203\200+\301\000-\301\300\020^\014\301\272\003%\301\246\"\356\300b\327\034\301\246\"\356\300\272\003%\301\244\2276\301b\327\034\301@\235\273\300b\327\034\301\316U\251\3001u\027\301\241\035\347\300f\031\257\300\211\357\322\300 \027\003\301s\007\247\300#\242\272\300\254\007\266\300\203\200+\301\233\316\353\300\244\2276\301\203\200+\301b\327\034\301\203\200+\3011u\027\301@R\025\301\244\2276\301_\214\335\300\210\323\364\300\203\200+\301@R\025\301\347\211\275\300\244\2276\301\017L\377\300\244\2276\301\027N\270\300\234\215\r\301-\310\370\300-\375\311\300Ox\213\300Y\236\305\300\"@\353\300\244\2276\301\234\215\r\301\r\253\362\300\"@\353\300K\224\365\300_`\240\3001u\027\301\032\016\251\300:$\334\300\250l\004\301\316\373\225\300w\325\016\301V,\000\301 \027\003\301ai \301\244\2276\301\203\200+\301\263\232\347\300`\300\276\300EC\252\300[\351\307\300\326\343\343\3001u\027\301E\245\336\300\334\354\301\300\322C\251\300VW\374\3002\325\306\300u7\201\300\273\"\005\301\371G\376\300\326\262\264\300b\327\034\301pl\321\300\273\036\273\300h\307\344\300k\006\343\300K\224\365\300\205\350\325\3002\267\000\301A\300\021\301xC\013\301\203\200+\301\312|\334\300\244\2276\301vl\322\300\356F\001\3012\267\000\301ai \301\315B\t\301\271\232\350\300\256X\010\301\230\354\031\301\272\003%\301VW\374\300\314\276\317\300p\260j\300G\341\005\301\002\274\300\300\020^\014\301\203\200+\301ai \301\210\323\364\300A\300\021\301@\310Q\300nD\243\300\244\2276\301L\010\232\300}\245\360\300\301$\253\300U\276\003\301ai \301@\335\273\300\242\030\233\300\024/\241\300h\307\344\300VW\374\300\241/\256\300\203\200+\301\000^\261\300\201.\313\300V,\000\301\017$\332\300\030\203\372\300\001\243\351\300\234\215\r\301k\243\267\300\356F\001\301\372R\263\300_\214\335\300\250l\004\301\367\365\305\300r\347z\300\314\035\351\300\347\330\252\300zv\002\301\037\305\341\300b\327\034\301\037\305\341\300\203\200+\301\263Y\366\300n\220\330\300\263Y\366\300Q\005\241\300\217\250\262\300\250\034\305\300\203\200+\301\244\2276\301\244\2276\301i*\352\300\272\003%\301\244\2276\3011u\027\301ai \301\244\2276\301\273\"\005\301\272\003%\301\360\350\335\300\336r\304\300n\220\330\300\337i\373\300\255\272\307\300X\203\244\300\037h\275\300\272\003%\301\230\354\031\301ai \301\247k\314\300\322C\251\300\325\301\247\300\337\021\325\300\336r\304\300\264@\324\300\373#\367\300\234\215\r\301w\325\016\301xC\013\301\244\2276\301\244\2276\301\337i\373\300C[\327\300\271\232\350\300\244\2276\301\234\215\r\301zv\002\301H/\312\300\244\2276\301\"@\353\300\032_\363\300ai \301\362\304\326\300\244\2276\301b\363\367\300\256X\010\301U\276\003\301C[\327\300\272\003%\301\263+\322\300\3359\020\3011u\027\301\036;\n\301\020^\014\301J\235\276\300\272\241\314\300\314\035\351\300_\342\274\300zv\002\301\275\033\177\300\344\246\206\300\324.\342\300zv\002\301w\325\016\301\317o\023\301\210\323\364\3002\325\306\300\203\200+\301\244\2276\301K\224\365\300W1\326\300\3359\020\301\203\200+\301\234\215\r\301A\300\021\301X\240\325\3005\242\242\300@R\025\3018{\007\301 \"\306\3001u\027\301\270\365\340\300 \027\003\3012\267\000\301Y\r\317\300\3270\335\300b\327\034\301\246\"\356\300b\327\034\301VW\374\300\272\003%\301\203\200+\301\325T\344\3001u\027\301b\327\034\301\036F\315\300ai \301\201.\313\300\256\314\211\300.t\320\3001u\027\301ai \301\345\333\001\301#\201\233\300\210\322\261\300\377\006\277\300j\346}\300$\310\337\300\244\242\371\300\023)\346\300\236k\263\300\3575\314\300\334\354\301\300\3361\323\300\373#\367\300\325T\344\300\244\2276\301@R\025\301\3270\335\300\323\253\275\300\252-\321\300\204b\313\300\373#\367\300ai \301zv\002\301\257:\250\300E\245\336\300\356F\001\301\244\2276\301VW\374\300\017L\377\300\347\211\275\300Y\r\317\300at\343\300\272\003%\301VW\374\3001u\027\301xC\013\301y\177\274\300\365\370\236\300\001\243\351\300ai \301W1\326\300\3057\311\300\037\251\006\301K\224\365\300\317o\023\301\r\253\362\3001u\027\301ai \301\037\251\006\301\3057\311\300\337i\373\3008{\007\301\352\231\342\300\337i\373\300A\300\021\301\352\316\263\300\244\2276\301\244\2276\301\244\2276\301\036;\n\301ai \301\244\2276\3011u\027\301\244\2276\301@R\025\301\273\"\005\301\367\365\305\300\036;\n\301\256X\010\301\337i\373\300\203\200+\301\244\2276\301\272\003%\301\255\272\307\300\001\243\351\300\341\231\311\300G\341\005\301\014=\241\300\344K\375\300w\325\016\301b\363\367\300\210\323\364\300\006)\247\300\037\305\341\300P\207\267\300xC\013\301X\240\325\300\203\200+\301K\224\365\300\272\003%\301\356F\001\301\244\2276\301-\310\370\300\244\2276\301\203\200+\301VW\374\300\222&\316\3001u\027\301\250l\004\301\201.\313\300\213\261\320\300i*\352\3005\363\354\300\364\217\340\300\017L\377\300-\310\370\300\325T\344\300\036;\n\301\254\203\216\300\304]\357\300ai \3015\363\354\3008{\007\301\347\302\234\300\341\361\304\300\025\005\337\300\356F\001\301\250l\004\301-\375\311\300_\214\335\300b\327\034\301\337i\373\300\276t\323\300w\325\016\301ai \301\250l\004\301\244\2276\301\244\2276\301\261\276\356\300\356F\001\301\244\2276\301\244\2276\301\037\251\006\301\315B\t\301c\364\327\300\345\333\001\301@R\025\3015 \246\300\302\017\327\3008{\007\301\001\243\351\300\247k\314\300\317o\023\301\037\251\006\301\272\003%\301\030\203\372\300H/\312\300ai \301\375\377\357\300\256X\010\301\371G\376\300M\030\310\300\334\354\301\300\020^\014\301}\245\360\300\3359\020\301@R\025\301gN\361\300\034^\307\300\203\200+\301\345\333\001\301\3359\020\301\317o\023\301\244\2276\301\315B\t\301%+\220\300\250l\004\301ai \301\234\215\r\301\244\2276\301\230\354\031\301\244\2276\301xC\013\301\203\200+\301ai \3012\267\000\301n\220\330\300gN\361\300\345\333\001\301K\224\365\3005\363\354\300\272\003%\301\244\2276\301\261\276\356\300\244\2276\301G\341\005\301\020^\014\3018{\007\301ai \301\244\2276\301\304]\357\300\210q\300\300\246\"\356\3008{\007\301\272\003%\301@R\025\301@R\025\301\033^\253\300q\242\346\300\317o\023\301\203\200+\301\272\003%\301ai \301b\363\367\300\252-\321\300b\327\034\3011u\027\301\217\025\223\300\244\2276\301\017L\377\300\030\264\352\300\203\200+\301\272\003%\301\244\2276\301\345\333\001\301\037\251\006\301G\037\304\300\037\251\006\301b\327\034\301\244\2276\301\244\2276\301V,\000\301\344K\375\300\032_\363\300\276t\323\300\030\264\352\300\221\000\314\300V,\000\301\345\333\001\301\244\2276\3012\267\000\301xC\013\301ai \301\272\003%\301\244\2276\301w\325\016\301q\242\346\300\273\"\005\301@R\025\301A\300\021\301xC\013\301W1\326\300\201/\331\300b\327\034\301\317o\023\301\230\354\031\301q\242\346\300\244\2276\301\223\237\301\300\037\251\006\3011u\027\301@\313\332\300\030\360\275\300eO\267\300\244\2276\301G\341\005\301\344K\375\300\244\2276\301\203\200+\301\030\203\372\300\036F\315\300\364\217\340\300\317o\023\301\036;\n\301\244\2276\301\317o\023\301\203\200+\301S\307\304\300(u\241\300@R\025\301k\224\312\300\362\304\326\300@R\025\301\354u\333\300\234\314\333\300\317o\023\301A\300\021\301\203\200+\301\203\200+\301\247k\314\300G\341\005\301b\327\034\301w\325\016\301\271\232\350\300\203\200+\301\203\200+\301\272\003%\301\020^\014\301U\276\003\301ai \301\337\030\261\300b\327\034\3011u\027\301\244\2276\3011u\027\301\314X\325\300 \027\003\301A\300\021\301\244\2276\301\213\261\320\300Y\265\250\300R\337\245\300C\310\232\300\244\2276\301b\327\034\301\203\200+\301b\327\034\301\244\2276\301\3359\020\301@R\025\301\345\333\001\301@\313\332\300\244\2276\301\364\217\340\300K\224\365\300\272\003%\301j:\263\300\337\372\361\300A\300\021\3012\267\000\301\020^\014\301\3270\335\300\344K\375\300B\272\277\300\203\200+\301w\325\016\301\206\211\355\300\030\264\352\300\010f\337\300\272\003%\301b\327\034\301 \306\301\300\036;\n\301\203\200+\301\272\003%\301-\310\370\300\3359\020\301\304\\\341\300\177\341\300\300\266\304\246\300:w\332\300\200\220\262\300\371G\376\300}\245\360\300\304]\357\300\317o\023\301\233\316\353\300b\327\034\301\246\"\356\300\230\354\031\301k\243\267\300ai \301\205\350\325\300\337\372\361\3001u\027\301\3359\020\301w\325\016\301\244\2276\301\244\2276\301\244\2276\301w\325\016\301\244\2276\301\266\243\250\300:w\332\300\203\200+\301Ok\267\300\337\372\361\300\203\200+\301b\363\367\300:$\334\300\340\262\255\300ai \301h\307\344\300A\300\021\301VW\374\300\317o\023\301ai \301\002w\310\3001u\027\301\030\203\372\300\002\274\300\300d=\266\300\273\"\005\3018{\007\301\203\200+\301V,\000\301\244\2276\301\203\200+\3011u\027\301A\300\021\3013\027\364\300ai \301\244\2276\301\024\003\300\300ai \301\266\031\350\300\244\2276\301\244\2276\301\371G\376\300\025\005\337\300\032_\363\300\004S\301\300E\245\336\3001u\027\301\244\2276\301\017L\377\300\256X\010\301N\322\265\300ai \301\304\\\341\300\246\"\356\300\244\2276\301\250l\004\301\244\2276\301\206\211\355\300V,\000\301U\276\003\301\261\340\266\3002\267\000\301\373\321\236\300\017$\332\300\274\255\322\3001u\027\301*\034j\3001u\027\301\371G\376\300\371G\376\300\304\\\341\300\326\343\343\300E7\320\300\317z\326\300\266\261\257\300\230\354\031\301\263\253\321\300\234\314\333\300\246\"\356\300\337i\373\300\304]\357\300\244\2276\301\252-\321\300k\006\343\300VW\374\300\244\2276\301\244\2276\301\337i\373\300\036;\n\3011u\027\3018{\007\301n\220\330\300\233\316\353\300\325\214\233\300\364\336\236\300\250l\004\301@R\025\301*\007\301\300\244\2276\301\r\253\362\300\344K\375\300\203\200+\301\272\003%\301}\245\360\300\203\200+\3015\363\354\300\373#\367\300C[\327\300\203\200+\301\214L\300\300\244\2276\301\3359\020\301\261\276\356\3005\363\354\300\246\211\302\300\230\354\031\301\250l\004\301\3359\020\301b\327\034\301\017L\377\300\263+\322\300xC\013\301\036;\n\301$\310\337\300\030\264\352\300\354\252\254\300@R\025\301\244\2276\301\250l\004\301\270\365\340\300\036;\n\301w\325\016\301\251_\316\300\256X\010\301\007o\250\300\233\003\275\300\244\2276\301\345\333\001\301\036;\n\301{\261\345\300\021,\231\300\0100d\300D\236\255\300\244\2276\301U\276\003\301b\327\034\301\345\333\001\3011u\027\301\274\255\322\300\356F\001\301\276t\323\300\222&\316\300\244\242\371\300^\357\320\300\241\035\347\300$\310\337\300k\224\312\300\207N\306\300\037\251\006\301\344K\375\300b\363\367\3001u\027\301\271\232\350\300\317o\023\301\230\354\031\301\317z\326\300A\300\021\301ai \301@R\025\301\345\333\001\301}\245\360\300$ \333\300\244\2276\301ai \301xC\013\301xC\013\301w\325\016\301n\220\330\300(\330\314\300b\327\034\301\337i\373\300\244\2276\301\230\354\031\301\251_\316\300$\375\231\300\304]\357\300\203\200+\301@R\025\3012\267\000\301\247k\314\300\203\200+\301\244\2276\301\367H\304\300\234\215\r\301\337\372\361\300b\327\034\301\3359\020\301\360\350\335\300\203\200+\301\020^\014\301\244\2276\301gN\361\3008{\007\301\317o\023\301\372R\263\300\3359\020\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\246\"\356\300\272\003%\301\244\2276\301\272\003%\301\037\251\006\301K\224\365\300\373#\367\300\232_\354\300\203\200+\301\203\200+\301\230\354\031\301ai \3012\267\000\301\020^\014\301\234\215\r\301\341\361\304\300k\006\343\300\030\203\372\300\203\200+\301A\300\021\301\244\2276\301\244\2276\301\234\215\r\301\244\2276\301\334\226\313\300\3359\020\301[\351\307\300\203\200+\301\230\354\031\301\3270\335\300\244\2276\301\230\354\031\301\010f\337\300\3359\020\301\244\2276\3011u\027\301\263Y\366\300w\325\016\301\230\354\031\301\037\251\006\301b\327\034\301\272\003%\301\t\n\260\300\230\354\031\301\213\313\313\300:$\334\300\272\003%\301-\310\370\300vl\322\300\234\215\r\301c\364\327\300\203\200+\301\3457\236\300\234\215\r\301\r\253\362\300\244\2276\301{\261\345\300M\030\310\300\244\2276\301K\224\365\300\203\200+\301\244\2276\3011u\027\301f\031\257\300K\224\365\3003>\274\300\364Q\303\300\203\200+\301@\235\273\300\315B\t\301\203\200+\301ai \301G\341\005\301\3359\020\301\020^\014\301\244\2276\301\010f\337\300b\363\367\300w\325\016\301R\326\334\300\244\2276\3011u\027\301K\224\365\300\244\242\371\300K\224\365\300\272\003%\301\244\2276\301ai \301\272\003%\301\020^\014\301\210\323\364\300\244\2276\301\256X\010\301\234\215\r\301\272\003%\301\203\200+\301\3359\020\301\244\2276\301\272\003%\301\005o\237\300\244\2276\301A\300\021\301\203\200+\301 \"\306\300\203\200+\3018{\007\301\375\377\357\300\201/\331\300xC\013\301K\224\365\300\317o\023\3011u\027\301\317o\023\301@R\025\3011u\027\301xC\013\301ai \301\314X\325\300\356F\001\301A\300\021\301b\363\367\300\r\253\362\300\244\2276\301A\300\021\301xC\013\3011u\027\301\"@\353\300\371G\376\300}\245\360\300\336r\304\3001u\027\301\244\2276\301b\327\034\301p+\340\300@R\025\301\244\2276\301\272\003%\301\256X\010\301vl\322\300\337i\373\300\261\276\356\300\364Q\303\300\r\253\362\300\321\372\312\300\364\217\340\300Y\r\317\300\304]\357\300@R\025\301\272\003%\301\244\2276\301\210\323\364\300\244\2276\301zv\002\301\344\330\262\300\234\215\r\301\364Q\303\300\032_\363\300w\325\016\301xC\013\301w\325\016\3011u\027\3012\325\306\300\244\2276\301\244\2276\301%\231\316\300 \027\003\301\244\2276\301\244\2276\301\030\264\352\300\244\2276\301\326\343\343\300\234\215\r\301U\276\003\301\250l\004\301w\325\016\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\234\215\r\301b\327\034\301\315B\t\301 \027\003\301\273\"\005\3015\363\354\300ai \301\344K\375\300\244\2276\301ai \301\244\2276\301\272\003%\301}\245\360\300\244\2276\301\250l\004\301q\242\346\300\203\200+\301}\245\360\300\203\200+\301\3359\020\301\244\2276\301\373#\367\3008{\007\301\307\023\302\300\203\200+\301b\363\367\300\337\372\361\300\315B\t\301\244\2276\301\203\200+\301\317z\326\300\344K\375\300-\310\370\3001u\027\301\207\314\303\300\266\031\350\300V,\000\301x\247\327\300A\300\021\301xC\013\301\244\2276\301h\307\344\300\203\200+\301\203\200+\301\203\200+\301\244\2276\301@R\025\301\304]\357\300\315B\t\301\244\2276\301@R\025\301\317o\023\301\017L\377\300U\276\003\301\244\2276\301\036;\n\301ai \301\244\2276\301\272\003%\301V,\000\301\203\200+\301\230\354\031\301\272\003%\301b\327\034\301\244\2276\301vl\322\300\263\232\347\300G\341\005\301\326\343\343\300U\276\003\301\347\211\275\300\203\200+\301\256X\010\301_\214\335\300\203\200+\301\244\2276\301\203\200+\301G\341\005\3012\267\000\301\"@\353\300\221\010S\300\200)\303\300\000-\301\300H/\312\300\317o\023\301\032_\363\300\022H\317\300\234\215\r\301A\300\021\301\337i\373\300\273\"\005\301\230\354\031\301\356F\001\301\020^\014\3018{\007\301zv\002\301\244\2276\301\244\2276\301b\363\367\300@R\025\301\203\200+\301G\341\005\301\251G\305\300@R\025\301A\300\021\301\223\237\301\300E7\320\300\244\2276\301@R\025\301\244\2276\301\317o\023\301\315B\t\3011u\027\301\272\003%\301\3359\020\301xC\013\301\3270\335\300\3359\020\301b\327\034\301ai \301\203x\262\300\365T\271\300\244\2276\301\230\354\031\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\234\215\r\301\244\2276\3011u\027\301\244\2276\301\272\003%\301\222W\276\300\317z\326\3003\027\364\300\244\2276\301\244\2276\301U\276\003\301\234\215\r\301\234\215\r\301\373#\367\300\230\354\031\301\244\2276\3013\027\364\300^\357\320\300\315B\t\301xC\013\3012\267\000\301\203\200+\301\244\2276\301b\327\034\301\244\2276\301x\247\327\300-\310\370\300\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301-\310\370\300\244\2276\301q\242\346\3001u\027\301\244\2276\301\244\2276\301b\327\034\301\272\003%\301A\300\021\301\230\354\031\301b\327\034\301@R\025\301\203\200+\301\203\200+\301zv\002\301ai \301\272\003%\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\371G\376\3001u\027\301ai \301VW\374\300b\327\034\301@R\025\301\244\2276\301\244\242\371\300\037\251\006\301\371G\376\300A4\265\300\375\377\357\300\244\2276\301\276t\323\300\345\333\001\301ai \301 \027\003\3011u\027\301w\325\016\301-\310\370\300ai \301\251_\316\300G\341\005\301\020^\014\301\030\203\372\300\270\365\340\300\201.\313\300ai \301\266\031\350\300\250l\004\301\203\200+\301ai \301\020^\014\301\264@\324\300`\300\276\300\365\001\261\300\203\200+\301\244\2276\301\017L\377\300\230\354\031\301\244\2276\301\201/\331\300\341\355\315\300\315B\t\301\317o\023\301V,\000\301w\325\016\301\203\200+\301\250}\315\300G\341\005\301\272\003%\301\244\2276\301\302\017\327\300\244\2276\301\344K\375\300\273\"\005\301\356F\001\301^\357\320\300\037\251\006\301\220F\336\300\304]\357\300\232_\354\300b\327\034\301\244\2276\301\272\003%\301\261\276\356\300\317o\023\301\203\200+\301\244\2276\301\230\354\031\301\030\203\372\3002\267\000\301P\207\267\300\002w\310\300\017$\332\300R\326\334\300\272\003%\301\037\251\006\301VW\374\300\030\264\352\300G\341\005\3011u\027\301\n\323\316\300\256X\010\301\244\2276\301\244\2276\301\037\251\006\301\230\354\031\301K\224\365\300vl\322\300\244\2276\301\203\200+\301zv\002\301\344K\375\300\037\251\006\301\"@\353\300\261\276\356\300@R\025\301\203\200+\301A\300\021\301zv\002\301\272\003%\3011u\027\301\272\003%\301\244\2276\301pl\321\300A\300\021\301\203\200+\3012\340\272\300A\300\021\301}\245\360\300\203\200+\301\205\350\325\300\272\003%\301\203\200+\301\244\2276\301\304]\357\300\037\251\006\301U\276\003\301\263Y\366\300@R\025\301\244\2276\301E\245\336\3003\027\364\300\373#\367\3001u\027\3018{\007\301\247k\314\300\272\003%\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\030\203\372\300U\276\003\301ai \301A\300\021\301\244\2276\301\244\2276\301\203\200+\301G\341\005\301\244\2276\301}\245\360\300\244\2276\301\244\2276\301\250l\004\301\233\316\353\300i*\352\300\315B\t\301\337i\373\300U\276\003\301zv\002\301\203\200+\301\273\"\005\301\220F\336\300b\327\034\3011u\027\301\244\242\371\300G\341\005\301\272\003%\301\244\2276\301\244\2276\301\356F\001\3018{\007\301\317o\023\301\203\200+\301\234\215\r\301b\327\034\301\244\2276\301\017L\377\300\272\003%\301\020^\014\301-\310\370\300\373\330\256\300gN\361\300\244\2276\301\271\232\350\300\263Y\366\300b\327\034\301\244\2276\301xC\013\301\272\003%\301\244\2276\301\304]\357\300K\224\365\300b\327\034\301b\327\034\301\203\200+\301b\327\034\301b\327\034\301\272\003%\301ai \301b\327\034\3011u\027\301\036;\n\301\315B\t\301\017L\377\300\244\2276\3011u\027\301b\327\034\301\244\2276\301\274\255\322\300\244\2276\301\244\2276\301\234\215\r\301\3359\020\301\315B\t\301\203\200+\301\273\"\005\301\203\200+\301\230\354\031\301\315B\t\301ai \301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\272\003%\301S\307\304\300\230\354\031\301\244\2276\301\244\2276\301{F\275\300xC\013\301b\327\034\301\244\2276\301A\300\021\301\234\215\r\301\215\313\324\300\256X\010\301xC\013\301w\325\016\301\037\251\006\301b\327\034\301b\363\367\300\256X\010\301\337i\373\300\272\003%\301 \027\003\301G\341\005\301b\327\034\301\244\2276\301}\245\360\300\211*\277\3002\340\272\300b\363\367\300\246\"\356\300\317o\023\301G\341\005\301\230\354\031\3011u\027\301\317o\023\301\3359\020\301q\242\346\300\203\200+\301U\220\260\300\272\003%\301b\327\034\301\030\203\372\300\337i\373\300\203\200+\301\036F\315\300E7\320\300\251_\316\3001u\027\301\334\226\313\300\3359\020\301\230\354\031\301\337\372\361\300\203\200+\301\020^\014\301U\276\003\301\244\2276\301\244\2276\301\272\003%\301V,\000\301xC\013\301\371G\376\300\250l\004\301b\327\034\301\244\2276\301xC\013\301\032_\363\300[\351\307\300\325T\344\300\315B\t\301w\325\016\301ai \3013\027\364\300b\327\034\301\203\200+\301\203\200+\301\215\302\251\300\203\200+\301 \027\003\301\234\215\r\301ai \301\273\"\005\301\272\003%\301ai \3018{\007\301ai \301\273\"\005\301\244\2276\301\364\217\340\300\356F\001\301xC\013\301\256X\010\301xC\013\301b\327\034\301ai \301\272\003%\301\272\003%\301\272\003%\301ai \301ai \301\272\003%\301\272\003%\301b\327\034\301\203\200+\301\250l\004\301\244\2276\301\244\2276\301q\242\346\300\203\200+\301\315B\t\301\317o\023\301\203\200+\301\203\200+\301b\327\034\301ai \301\272\003%\301\r\253\362\300\020^\014\3011u\027\301ai \301@R\025\301A\300\021\301A\300\021\301\345\333\001\301ai \301\317o\023\301\244\2276\301\244\2276\301\030\264\352\3008{\007\301ai \301\371G\376\300 \027\003\301\317o\023\301gN\361\300\244\2276\301\315B\t\301\272\003%\301xC\013\301\244\2276\301\233\316\353\300n\220\330\300R\261\302\300U\276\003\301\036;\n\301-\310\370\300\256X\010\301\203\200+\301\244\2276\301\250l\004\301x\240\252\300w\325\016\301\234\215\r\301@R\025\301\241\035\347\300}\245\360\300\317o\023\301\315B\t\3011u\027\301\203\200+\301\244\2276\301\272\003%\301\3359\020\301\244\2276\301xC\013\301\364Q\303\300\3359\020\301\3359\020\301\317o\023\301ai \301\244\2276\301\272\003%\301\244\2276\301\272\003%\301-\310\370\300\203\200+\301\203\200+\301\244\2276\301ai \301\244\2276\301\272\003%\301ai \301\244\2276\301\234\215\r\301\036;\n\301\203\200+\301+b\302\300w\325\016\301b\327\034\301\244\2276\301ai \301ai \301\244\2276\301\036;\n\301\244\2276\301\244\2276\301\006)\247\300-\375\311\300\315B\t\301\030\264\352\300\203\200+\301\256X\010\3011u\027\301\273\"\005\301\315B\t\301ai \301ai \301\244\2276\301G\341\005\301@R\025\301\203\200+\301\244\2276\301\244\2276\301\020^\014\301\203\200+\3012\340\272\300\3359\020\301\337i\373\300\272\321\331\300\231h\265\300\036;\n\301\3359\020\301\234;\345\300\244\2276\301\272\003%\301A\300\021\301ai \301b\327\034\301ai \301\244\2276\301\244\2276\3017\200\331\300\032_\363\300u\307\312\300\234\215\r\301H/\312\300\203\200+\301K\224\365\300ai \301G\341\005\301\203\200+\301W1\326\300\203\200+\301A\300\021\301\272\003%\301\244\2276\301-\310\370\300\037\347\251\300\203\200+\301\244\242\371\300[\351\307\300\263\232\347\300\273\"\005\301\360\350\335\300\203\200+\301\337i\373\300\244\2276\301\326\343\343\300K\224\365\300\203\200+\301\347\211\275\300\037\251\006\301\317o\023\301\036;\n\3011u\027\3018{\007\301\230\354\031\301\273\"\005\301\230\354\031\301\001\243\351\300\230\354\031\301\3270\335\300w\325\016\3013\027\364\300\244\2276\301\3359\020\301\271\232\350\300V,\000\301@R\025\301\244\2276\301ai \301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\020^\014\301G\341\005\301\244\2276\301\030\264\352\300\273\"\005\301zv\002\3011u\027\301w\325\016\301\244\2276\301\263Y\366\300\272\321\331\300\220F\336\300\345\333\001\301\371G\376\300VW\374\300\036;\n\301@R\025\301\226\336\277\300\272\003%\301A\300\021\301b\327\034\301\036;\n\301\203\200+\301}\245\360\300\315B\t\3018{\007\301\317z\326\300\334\226\313\300xC\013\301\234\215\r\301\203\200+\301b\327\034\301A\300\021\301ai \301\244\2276\301~\224\201\300\037\251\006\301\371G\376\300\017L\377\300\244\2276\301\037\251\006\301\244\2276\301ai \301\215\314\271\300ai \3013>\274\300ai \301\036;\n\301&\374\323\300\244\2276\301V,\000\301\234\215\r\301ai \301\244\2276\301V,\000\301\244\2276\301b\363\367\300\203\200+\301\203\200+\301b\327\034\3011u\027\301\244\2276\301U\276\003\301\261a\312\300A\300\021\301V,\000\301\345\333\001\301w\325\016\301A\300\021\301\345\251\266\300\n\323\316\3003\027\364\300A\300\021\301}\245\360\300\244\2276\301\244\2276\301A\300\021\301\203\200+\301\230\354\031\301\244\2276\301U\276\003\301\017\250\306\300\244\2276\301ai \301\220F\336\300\037\251\006\301\234\215\r\301\356F\001\301-\310\370\3002\267\000\301\203\200+\301\244\2276\301\244\2276\301b\327\034\301w\325\016\301@R\025\301\244\2276\301\256X\010\301VW\374\300xC\013\301\272\003%\301\324.\342\300b\327\034\301\312|\334\300\030\264\352\30080\307\300\020^\014\301ai \301-\375\311\300 \027\003\301ai \301\315B\t\301\244\2276\301\244\2276\301\230\354\031\301\030\264\352\300 \027\003\301\263\232\347\300\251_\316\300\022H\317\300\036;\n\301\263Y\366\300\317o\023\301_\214\335\300\344K\375\300\272\003%\301\371G\376\300\376\352\233\300E\245\336\300\317o\023\301\317o\023\301@R\025\301\337i\373\300\244\2276\301\314\035\351\300:$\334\300\3361\323\3008{\007\301\203\200+\301\273\"\005\301\244\2276\301\371G\376\300\256X\010\301\356F\001\301\230\354\031\30180\307\300\261\276\356\300\315B\t\301\n\352\261\300A\300\021\301\317o\023\301\375\377\357\300\230\354\031\301\203\200+\301\317o\023\301\244\2276\301R\326\334\300b\327\034\301\364\217\340\300b\327\034\301\r\253\362\300\244\2276\301b\327\034\301V,\000\301\244\242\371\300\244\2276\301V,\000\3011u\027\3013\027\364\300\244\2276\301U\276\003\301\244\2276\301\272\003%\301\244\2276\301VW\374\300\230\354\031\301ai \301\244\2276\301\244\2276\301\203\200+\301\300`\255\300\244\2276\301\317o\023\301A\300\021\301ai \301\356F\001\3018{\007\301\203\200+\301@R\025\301\272\003%\301\3270\335\300ai \301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301@R\025\301}\245\360\300\222W\276\300\315B\t\301\3359\020\301\244\2276\3013\027\364\300\244\2276\301\234\215\r\301\030\264\352\300ai \301G\341\005\301\244\2276\3018{\007\301\244\2276\301\230\354\031\301b\327\034\301_\214\335\300\250l\004\301U\276\003\301\203\200+\301\325T\344\300\315B\t\301\203\200+\301\020^\014\301\244\2276\301\244\2276\301w\325\016\301\244\2276\301\317o\023\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\272\003%\301G\341\005\301xC\013\301\203\200+\301\317o\023\301 \027\003\301\317o\023\301\203\200+\301G\341\005\301gN\361\300\203\200+\301n\220\330\300h\307\344\300zv\002\3013\027\364\300\244\2276\301\030\264\352\300\272\003%\301\244\2276\301_\342\274\300\272\003%\301ai \301\256X\010\301\244\2276\301 \027\003\301@R\025\301A\300\021\301@R\025\301\203\200+\301xC\013\301\244\2276\301\270\365\340\300\203\200+\301\244\2276\301\272\003%\301@R\025\301\r\253\362\300\326\343\343\3001u\027\301\020^\014\301\203\200+\301\230\354\031\301G\341\005\301\244\2276\301\230\354\031\301\244\2276\301\230\354\031\301\230\354\031\301\203\200+\301b\327\034\301ai \301\244\2276\301\244\2276\301\020^\014\301ai \301\213\261\320\300\272\003%\301\244\2276\301b\327\034\3011u\027\301\203\200+\301\036;\n\301\354u\333\300\272\003%\301\337i\373\300\020^\014\301\272\003%\301\244\2276\301ai \301\315B\t\301\317o\023\301\037\251\006\301\222&\316\300\234\314\333\300ai \301b\327\034\3011u\027\301\001\243\351\300\272\003%\301\203\200+\301\315B\t\3013\027\364\300\315B\t\301\203\200+\301\244\2276\301A\300\021\301\317o\023\301\244\2276\301b\327\034\301q\242\346\300\201/\331\300\250}\315\300ai \301\203\200+\301ai \301\230\354\031\301zv\002\301:w\332\300\244\2276\301G\341\005\301-\310\370\300\244\2276\301\317o\023\301\256X\010\301\244\2276\301\244\2276\301\244\2276\301A\300\021\3011u\027\301\244\2276\301 \027\003\301\317o\023\301b\327\034\301\203\200+\301\250l\004\301\317o\023\301\364\217\340\300\203\200+\301h\307\344\300\036;\n\301\317o\023\301\315B\t\3011u\027\301\244\2276\301 \027\003\301\234\215\r\301\254\007\266\300@\313\332\300\037\251\006\301W1\326\300\261\276\356\300$\236\251\300\030\264\352\300ai \301\210\323\364\300\251_\316\300\023)\346\300\337i\373\300ai \301\263Y\366\300ai \301\244\2276\301\203\200+\301k\006\343\300\317o\023\301\241\035\347\300\020^\014\301\315B\t\301\272\003%\301\247k\314\300\244\2276\301b\327\034\301\203\200+\301\344K\375\300b\327\034\301\272\003%\301\272\003%\301U\276\003\301\203\200+\301@R\025\301ai \301\272\003%\3012\267\000\301A\300\021\301ai \301\337\372\361\300\244\2276\301\272\003%\301w\325\016\301B\221\177\300\203\200+\301\3359\020\301A\300\021\3011u\027\3018{\007\301\230\354\031\301\270\365\340\300\203\200+\301\272\003%\301\272\003%\301\020^\014\301\3359\020\301b\327\034\301ai \301\230\354\031\301gN\361\300\203\200+\301\244\2276\301V,\000\301.t\320\300\272\003%\301\273\"\005\3018{\007\301\345\333\001\3011u\027\301\244\2276\301\244\2276\301G\341\005\301\230\354\031\301\244\2276\301\036;\n\301\364\016\315\300\272\003%\3011u\027\301\317o\023\301\325T\344\300@R\025\301\203\200+\301\375\377\357\300\244\2276\301\344K\375\300\317o\023\301\3359\020\301\317o\023\301ai \3011u\027\301\272\003%\301\373#\367\300\032_\363\300\244\2276\301\232_\354\300b\327\034\301\234\215\r\301b\327\034\301\244\2276\301b\327\034\301}\245\360\300\037\305\341\300\244\2276\301G\341\005\301\234\215\r\301\302\017\327\300b\363\367\300\272\003%\301\3359\020\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\3018{\007\301\344K\375\300\312|\334\300\211\357\322\300x\247\327\300\272\003%\301\317o\023\301\203\200+\301gN\361\300ai \301ai \301\272\003%\301ai \301\203\200+\301@R\025\301b\327\034\3017\200\331\300\3359\020\301W1\326\300\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\020^\014\301w\325\016\301\3359\020\301\203\200+\301\244\2276\301\272\003%\301ai \301xC\013\301b\363\367\300b\327\034\301\234\215\r\301\203\200+\301 \027\003\301\244\2276\301ai \301\030\203\372\300\234\215\r\301\037\251\006\301M\030\310\300\272\003%\301\272\003%\301\020^\014\3011u\027\301\244\2276\301\230\354\031\301zv\002\301\244\2276\301\244\2276\3011u\027\301\273\"\005\301\037\305\341\300\244\2276\301\3359\020\301\244\2276\301b\327\034\301\244\2276\301bX\266\300\001\243\351\300\263\253\321\300\272\003%\3011u\027\301b\327\034\301-\310\370\300\244\2276\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\234\215\r\301\244\2276\301zv\002\301@R\025\301\213\313\313\300\037\305\341\300\272\003%\301\203\200+\301\317o\023\301\244\2276\301\244\2276\3011u\027\301ai \301\244\2276\301\230\354\031\301\203\200+\3012\267\000\301\337\372\361\300\203\200+\301\037\251\006\301\230\354\031\3012\267\000\3012\267\000\301\230\354\031\301G\341\005\301p+\340\300\315B\t\301b\363\367\300b\327\034\301ai \301xC\013\301\256X\010\3011u\027\301\203\200+\301\324.\342\300 \027\003\301b\327\034\301\272\003%\3018{\007\301\020^\014\301\225\337\330\300\203\200+\301\244\2276\301\337i\373\300\030\264\352\300\244\2276\3012\267\000\301\323\253\275\300\203\200+\301ai \301\244\2276\301\317o\023\301\244\2276\301\244\2276\3018{\007\301\244\2276\301\362\354\265\300\020^\014\301\203\200+\301\203\200+\301\206\211\355\300\337\372\361\300\337i\373\300\356F\001\301\203\200+\301\272\003%\301\3359\020\301\023)\346\300ai \301\203\200+\301\337i\373\300\203\200+\301b\327\034\301\272\003%\301h\307\344\300\272\003%\301\356F\001\301A\300\021\301\234\215\r\301\364\217\340\300\317z\326\300\364\016\315\300\203\200+\301 \027\003\301\315B\t\301\244\242\371\300\244\2276\301ai \301ai \301ai \301\203\200+\301\020^\014\301\203\200+\301\234\215\r\301VW\374\300zv\002\301w\325\016\301\030\203\372\300@R\025\301b\327\034\3011u\027\301\203\200+\301s\353\321\300b\363\367\300\371G\376\300\317o\023\301\037\305\341\300\317o\023\301\356F\001\301\036;\n\301\256X\010\301@R\025\301\244\2276\301\337i\373\300\317z\326\300\244\2276\301\244\2276\301b\327\034\301\234\215\r\301\244\2276\301\337i\373\300\244\2276\301\203\200+\301\3359\020\3013\027\364\300ai \301\230\354\031\301\203\200+\301@R\025\301\210\323\364\300\244\2276\301\373#\367\300w\325\016\301\315B\t\301\244\2276\301\315B\t\301\210\323\364\300A\300\021\301\337i\373\300\203\200+\301\371G\376\300\244\2276\301\244\2276\301\373#\367\300\203\200+\301\234\215\r\301\315B\t\301\315B\t\3018{\007\301\272\003%\301\203\200+\301ai \301\234\215\r\301\244\2276\301\246\211\302\300\244\2276\301\230\354\031\301\244\2276\301@R\025\301\244\2276\301\036;\n\301\244\2276\301\203\200+\301\273\"\005\301K\224\365\300\244\2276\301\244\2276\301\272\003%\301\203\200+\301ai \301\244\242\371\300.t\320\300@R\025\301:w\332\300\317o\023\301\203\200+\301\337\021\325\300\244\2276\301-\310\370\300 \027\003\301ai \301b\327\034\301\315B\t\301\230\354\031\3018{\007\301@R\025\301\373#\367\300\244\2276\301\244\2276\301@R\025\301\230\354\031\301w\325\016\301\203\200+\301b\327\034\301\3359\020\301\244\2276\3011u\027\301\244\2276\3012\267\000\301ai \301\230\354\031\301A\300\021\301\036;\n\301\203\200+\301\203\200+\301\203\200+\301\r\253\362\300\315B\t\301\244\2276\301\203\200+\301\244\2276\301U\276\003\301\244\2276\301\272\003%\301U\276\003\301\356F\001\3011u\027\301\244\2276\301\036;\n\301\213\261\320\300at\343\300\256X\010\301\203\200+\301b\327\034\301\203\200+\3018{\007\301\244\2276\301K\224\365\300w\325\016\301ai \301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\315B\t\301\234\215\r\301A\300\021\301\"@\353\300\036;\n\301A\300\021\301zv\002\301\272\003%\301xC\013\301ai \301\230\354\031\301S\307\304\300G\341\005\301\203\200+\301\203\200+\301ai \301\234\215\r\3012\267\000\301\244\2276\301K\224\365\300\203\200+\3018{\007\301\250l\004\3012\267\000\301\356F\001\301\244\2276\3012\267\000\301\036;\n\301\244\2276\301 \027\003\301\315B\t\301\317o\023\301\352\231\342\300\373#\367\300\244\2276\301\3359\020\301\272\003%\301\036;\n\301*\270\323\300@R\025\301\272\003%\301\203\200+\301\244\2276\301ai \301\233\316\353\300\037\251\006\301R\326\334\300\244\2276\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\304]\357\3001u\027\301\244\2276\301@R\025\301\203\200+\301\234\314\333\300\244\2276\301\230\354\031\301\272\003%\301\244\2276\3011u\027\301\244\2276\301\203\200+\301\203\200+\301\371G\376\300\261\276\356\300\360\350\335\300\001\243\351\300\3359\020\301A\300\021\301\244\2276\301\244\2276\301\244\2276\301\266\031\350\300\244\2276\301@R\025\301\244\2276\301\272\003%\301\244\2276\301\020^\014\301w\325\016\301\203\200+\301=q\243\300\337\021\325\300\244\2276\301\244\2276\301\244\2276\301h\307\344\3001u\027\301\213\313\313\300ai \301\203\200+\301\3359\020\301\244\2276\301\244\2276\301\244\2276\301@R\025\301\244\2276\301_`\240\300A\300\021\301\244\2276\301\037\251\006\301\373#\367\300w\325\016\301\3270\335\300C[\327\300\203\200+\301\272\003%\301\037\251\006\301\356F\001\301A\300\021\301\234\215\r\301\247k\314\300\244\2276\301\263Y\366\300@R\025\301\244\2276\301ai \301U\276\003\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301b\327\034\301\272\003%\301\244\2276\301\263Y\366\300\244\2276\301\203\200+\301\244\2276\301\315B\t\301\345\333\001\301w\325\016\301\317o\023\301\272\003%\301\230\354\031\301A\300\021\301\244\2276\301\203\200+\301xC\013\301\272\003%\301\256X\010\301\304]\357\300\326\343\343\300ai \301\317o\023\301\244\2276\301\272\003%\301\263Y\366\300\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\3011u\027\301\3359\020\301A\300\021\301xC\013\301\3359\020\301\325T\344\300\317o\023\301\203\200+\301A\300\021\301\272\003%\301\272\003%\301ai \301\037\251\006\301\244\2276\301\244\2276\301\020^\014\301ai \301\203\200+\301\230\354\031\301xC\013\301@R\025\301G\341\005\301\230\354\031\301\244\2276\301_\214\335\300xC\013\301\244\2276\301\234\215\r\301\244\2276\301ai \301\3359\020\301\230\354\031\301\244\2276\301\203\200+\301A\300\021\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\315B\t\301\3359\020\301\230\354\031\301\244\2276\301\272\003%\301\3359\020\301\272\003%\301ai \301\203\200+\301p+\340\300@R\025\301A\300\021\301\371G\376\300\272\003%\301\244\2276\301\244\2276\301\r\253\362\300b\327\034\301\244\2276\301xC\013\301\001\243\351\300\244\2276\301\244\2276\301\244\2276\301b\363\367\300\312|\334\300ai \301\230\354\031\301xC\013\301\037\251\006\301\230\354\031\301\234\215\r\3011u\027\301@R\025\3018{\007\301\244\2276\301\256X\010\301\037\251\006\301\203\200+\301\203\200+\301\272\003%\3011u\027\301\230\354\031\301\244\2276\301\250l\004\301\203\200+\301\244\2276\301G\341\005\3018{\007\301\244\2276\301\244\2276\301q\242\346\300\244\2276\301\276t\323\300\203\200+\301\272\003%\301\203\200+\301\373#\367\300\317o\023\3011u\027\301\241\035\347\300\203\200+\301\244\2276\301\244\2276\301w\243\303\300\345\333\001\301\203\200+\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301VW\374\300ai \301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301 \027\003\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\244\2276\301\030\203\372\300%\231\316\3008{\007\301\203\200+\301\272\003%\301-\310\370\300\203\200+\301h\307\344\300ai \301\272\003%\301\3359\020\301\3575\314\300\272\003%\301ai \301\230\354\031\301\234\215\r\301\244\2276\301\244\2276\301$\310\337\300\272\003%\301@R\025\301\244\2276\301b\327\034\301\203\200+\301@R\025\301\203\200+\301\203\200+\301\272\003%\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301w\325\016\301b\327\034\301\244\2276\301ai \301ai \301-\310\370\300\244\2276\301\203\200+\301\244\2276\301\272\003%\301\272\003%\301\337i\373\300 \027\003\301\244\2276\301i*\352\300\234\215\r\3011u\027\301@R\025\301\272\003%\301\317o\023\301\244\2276\301\036;\n\301b\327\034\301\244\2276\301\032_\363\300@R\025\301\203\200+\301\203\200+\301\230\354\031\301b\327\034\301\230\354\031\301\210\323\364\300\272\003%\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301ai \301\244\2276\301\203\200+\301\020^\014\301A\300\021\301\203\200+\301zv\002\301\017L\377\3001u\027\301A\300\021\301b\327\034\301\230\354\031\301\203\200+\301\210\323\364\300i*\352\300\312\340\244\300\364\217\340\300$ \333\300w\325\016\301\3359\020\301\203\200+\301ai \301\244\2276\301\203\200+\301\230\354\031\301xC\013\301:w\332\300\317o\023\301\315B\t\301\272\003%\301ai \301\337i\373\300\203\200+\301\244\2276\301w\325\016\301\272\003%\301\272\003%\301\272\003%\301\203\200+\301G\341\005\301A\300\021\301\344K\375\300VW\374\300\230\354\031\301\203\200+\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\3359\020\301\203\200+\301\314\035\351\300\226\336\277\300\272\003%\301\037\251\006\301@R\025\301w\325\016\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301A\300\021\301\203\200+\301\020^\014\301\244\2276\301\203\200+\301\3359\020\301\244\2276\301\317o\023\301G\341\005\301@R\025\301\315B\t\301\317o\023\301A\300\021\301\272\003%\301\244\2276\301\244\2276\301\344K\375\300\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\017L\377\300\272\003%\301\325T\344\3008{\007\301\020^\014\301ai \301\272\003%\3011u\027\301\315B\t\301zv\002\301\203\200+\301\244\2276\301\244\2276\301G\341\005\301b\327\034\301\272\003%\301\244\2276\301\272\003%\301\256X\010\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\315B\t\301\256X\010\301\3359\020\301ai \3013\027\364\300\036;\n\301\244\2276\301@R\025\301q\242\346\300\203\200+\301b\327\034\301\272\003%\301\317o\023\301xC\013\301\272\003%\301\203\200+\301\371G\376\300ai \301A\300\021\301\203\200+\301\244\2276\301\244\2276\301\203\200+\3011u\027\301\203\200+\301k\006\343\300xC\013\301\244\2276\301\203\200+\301ai \301V,\000\301\256X\010\301G\341\005\3015\363\354\300\272\003%\301$\310\337\300\244\2276\301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301@R\025\301\314\035\351\300\030\203\372\300\234\215\r\301b\327\034\301\244\2276\3011u\027\301ai \301\037\251\006\301\203\200+\301\036;\n\301\244\2276\301\233\316\353\300\230\354\031\301\244\2276\301:w\332\300\272\003%\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301ai \301\315B\t\301\256X\010\301\244\2276\301\337\372\361\300\272\003%\301\315B\t\3011u\027\301\203\200+\301\244\2276\301@R\025\301\203\200+\301\272\003%\301\017L\377\300@R\025\301\230\354\031\301\244\2276\3011u\027\301\203\200+\301G\341\005\301\344K\375\300\244\2276\301ai \301\244\2276\301\244\2276\301\317o\023\301G\341\005\301\244\242\371\300\272\003%\301\315B\t\301\256X\010\301\234\215\r\301\037\251\006\301\030\264\352\300ai \301\244\2276\301\315B\t\301\3359\020\301ai \3018{\007\301\244\2276\301ai \301\244\2276\301\203\200+\301\020^\014\301\203\200+\301\230\354\031\301\230\354\031\301x\021\242\300\3361\323\300\315B\t\301\036;\n\301\230\354\031\301b\327\034\301ai \301\244\2276\301\272\003%\301\244\2276\301\244\2276\3011u\027\301ai \301b\327\034\301\203\200+\301\244\2276\301\3359\020\301G\341\005\301\272\003%\301\272\003%\3013\027\364\300\244\2276\301ai \301\244\2276\301\036;\n\301\230\354\031\301@R\025\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301A\300\021\301A\300\021\301\203\200+\301\234\215\r\301\250l\004\301b\327\034\301@R\025\301ai \301ai \3011u\027\3018{\007\301\250l\004\301\325\205\324\300\273\"\005\301\203\200+\301\203\200+\301\203\200+\301A\300\021\301ai \301\272\003%\301\244\2276\301A\300\021\301\244\2276\3011u\027\301b\327\034\301A\300\021\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\3359\020\3011u\027\301\203\200+\301\203\200+\301@R\025\301\244\2276\301\203\200+\301at\343\300xC\013\301\244\2276\301\203\200+\301\234\215\r\301i*\352\300\244\2276\301w\325\016\301\203\200+\301\203\200+\301G\341\005\301\230\354\031\301\3359\020\301\203\200+\301\244\2276\301\273\"\005\301\244\2276\301\244\2276\301\203\200+\301ai \301G\341\005\301\230\354\031\301\244\2276\301\256X\010\301\345\333\001\301b\363\367\300\244\2276\301\203\200+\301A\300\021\301@R\025\301\023)\346\300b\327\034\301\244\2276\301ai \301\3057\311\300b\327\034\3018{\007\3018{\007\301b\327\034\301\371G\376\300\203\200+\301\n\352\261\300p+\340\300\244\2276\301\244\2276\301\203\200+\301\273\"\005\301\244\2276\301\230\354\031\301\272\003%\301b\327\034\301b\327\034\301\315B\t\301U\276\003\301\203\200+\301\317o\023\301\244\2276\301\244\2276\301\020^\014\301b\327\034\301\244\2276\301w\325\016\301\272\003%\3011u\027\301\273\"\005\301\261\276\356\300\244\2276\301A\300\021\301\244\2276\301\244\2276\301\344K\375\300\244\2276\301A\300\021\3018{\007\301ai \301b\327\034\301\244\2276\301ai \301\272\003%\301\020^\014\301\020^\014\301\230\354\031\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\234\215\r\3011u\027\301}\245\360\300\244\2276\301@R\025\3013\027\364\3001u\027\301\017L\377\300\244\2276\301\036;\n\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\032_\363\300\230\354\031\301b\327\034\301\250l\004\301E\245\336\300\315B\t\301\244\2276\301b\327\034\301@R\025\301\244\2276\301\272\003%\301\230\354\031\301@R\025\301b\327\034\301\317o\023\301ai \301w\325\016\301\244\2276\301\203\200+\301ai \3011u\027\301\244\2276\301\020^\014\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\023)\346\300\373#\367\300\203\200+\301\203\200+\3011u\027\301\244\2276\301b\327\034\301\272\003%\301A\300\021\301\272\003%\301ai \301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301U\276\003\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301zv\002\301ai \301\244\2276\301\317o\023\301\203\200+\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301b\327\034\3011u\027\301b\327\034\301\203\200+\3011u\027\301\203\200+\301\272\003%\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301ai \301\203\200+\301\244\2276\301U\276\003\301\244\2276\301U\276\003\301\203\200+\3011u\027\301\203\200+\301b\327\034\301\272\003%\301\203\200+\301\036;\n\301A\300\021\3011u\027\301\244\2276\301\344K\375\300\244\2276\301zv\002\301\244\2276\301\312|\334\300\356F\001\301\203\200+\301\244\2276\301\373#\367\300@R\025\301\272\003%\3011u\027\301\203\200+\301\203\200+\301\244\2276\301\272\003%\301w\325\016\301\256X\010\301\246\"\356\300\244\2276\3012\267\000\301\3359\020\301\230\354\031\3015\363\354\3001u\027\301\244\2276\301ai \301\234\314\333\300xC\013\301-\310\370\300xC\013\301w\325\016\301G\341\005\301\356F\001\301zv\002\301\244\2276\301\203\200+\301ai \301\203\200+\301\317o\023\3011u\027\301ai \3011u\027\301\203\200+\301b\327\034\301ai \301b\327\034\301\360\350\335\300\230\354\031\301@R\025\301\356F\001\301\203\200+\301\273\"\005\301\272\003%\301\3359\020\301\304]\357\300b\327\034\301xC\013\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301ai \301\244\2276\301\244\2276\301\230\354\031\301\203\200+\301\203\200+\301\036;\n\301\020^\014\301\020^\014\301b\327\034\301\344K\375\300\244\2276\301\250l\004\301 \027\003\301\030\203\372\3001u\027\301ai \301\317o\023\301\244\2276\301\244\2276\301A\300\021\3011u\027\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\203\200+\301A\300\021\301\230\354\031\301\203\200+\301\244\2276\301\244\2276\301w\325\016\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301gN\361\3008{\007\301\244\2276\301\244\2276\301\246\"\356\300\203\200+\301ai \301\244\2276\301\234\215\r\301\244\2276\301\305^\274\300b\327\034\301b\327\034\301\244\2276\3012\267\000\301\272\003%\3018{\007\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\037\251\006\301@R\025\301\244\242\371\300\272\003%\301k\006\343\300\230\354\031\301\272\003%\301\244\2276\301ai \301\317o\023\301\203\200+\301\230\354\031\301zv\002\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\230\354\031\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\3359\020\301@R\025\301\244\2276\301\315B\t\301\272\003%\301\244\2276\301\203\200+\301\036;\n\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301VW\374\300\025\005\337\300\205\350\325\300b\327\034\3011u\027\301\272\003%\301ai \301\001\243\351\300\220F\336\300\317o\023\301\203\200+\301\244\2276\301\203\200+\301\272\003%\301\037\251\006\301@R\025\301\244\2276\3018{\007\301\244\2276\301\244\2276\301\272\003%\301b\363\367\300\315B\t\301\037\251\006\301w\325\016\301\203\200+\301\3359\020\301\244\2276\301\272\003%\301\230\354\031\301\203\200+\301\272\003%\3011u\027\301\203\200+\301\203\200+\301\272\003%\301\020^\014\301\203\200+\301@R\025\301\244\2276\301ai \301\203\200+\301\203\200+\301\230\354\031\301@R\025\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301@R\025\301\244\2276\301\244\2276\301b\363\367\300\244\2276\301n\220\330\300\036;\n\301\203\200+\301\203\200+\301\203\200+\301\304]\357\300\244\2276\301A\300\021\301\244\2276\301xC\013\301\203\200+\301\244\2276\301\272\003%\301\273\"\005\301b\327\034\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301w\325\016\3018{\007\301\272\003%\301\244\2276\301w\325\016\301\244\2276\301\203\200+\301\230\354\031\301\230\354\031\301\203\200+\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\304\\\341\300U\276\003\301\263+\322\300\263Y\366\300\373#\367\300\203\200+\301\304]\357\300\230\354\031\3011u\027\301\203\200+\3011u\027\301\356F\001\301\203\200+\301-\310\370\300\036;\n\3011u\027\301\230\354\031\301\203\200+\301\244\2276\301\272\003%\301\317o\023\3011u\027\301b\327\034\301\244\2276\301\244\2276\3011u\027\301\256X\010\301\272\003%\301\244\2276\301\272\003%\301\250l\004\301A\300\021\301ai \301\272\003%\301\272\003%\301\244\2276\301\244\2276\301b\327\034\301ai \301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301b\327\034\301ai \301\203\200+\301\036;\n\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301ai \301\272\003%\301\272\003%\301\244\2276\301\203\200+\301\272\003%\301\203\200+\301\203\200+\301\244\2276\301A\300\021\301\272\003%\301\203\200+\301\036;\n\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\315B\t\301ai \301\244\2276\301\203\200+\301\244\2276\301b\327\034\301 \027\003\301\344K\375\300ai \301\3359\020\301ai \301\244\2276\301\020^\014\301\234\215\r\301ai \301\272\003%\301\244\2276\301\244\2276\301\315B\t\301\317o\023\301\273\"\005\301b\327\034\301\244\2276\301(\330\314\300@R\025\3011u\027\301\244\2276\301\244\2276\301\244\2276\3011u\027\301b\327\034\301\244\2276\301\302\017\327\300A\300\021\301\373#\367\300\244\2276\301\272\003%\301\317o\023\301\272\003%\301ai \301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\256X\010\301\344K\375\300\3359\020\301w\325\016\301\203\200+\301\272\003%\301\272\003%\301b\327\034\301\203\200+\301\203\200+\301V,\000\301\272\003%\301\230\354\031\301*\361\262\300\244\2276\301\203\200+\301 \027\003\301@R\025\301\203\200+\301A\300\021\301\244\2276\301\230\354\031\301\272\003%\301\203\200+\301\244\2276\301\203\200+\301ai \301\230\354\031\3011u\027\301 \027\003\301\244\2276\301\017L\377\300\272\003%\301b\327\034\301\244\2276\301A\300\021\301@R\025\301\244\2276\301\203\200+\3011u\027\301\272\003%\301\244\2276\301\244\2276\301ai \301\272\003%\301\3359\020\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301-\310\370\3001u\027\3011u\027\301\244\2276\301\020^\014\301q\242\346\300\244\2276\301\244\2276\301\203\200+\301\203\200+\301@R\025\301\244\2276\301\036;\n\301\3359\020\301\203\200+\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301b\327\034\301\203\200+\301\203\200+\301@R\025\301ai \301\261\276\356\300A\300\021\301\203\200+\301\244\2276\301w\325\016\301\371G\376\300\244\2276\301\3270\335\300\204b\313\300\203\200+\301ai \301\207N\306\300\273\"\005\301\3359\020\301\244\2276\301\244\2276\301\244\2276\301ai \301\315B\t\301\036;\n\301\023)\346\300\244\2276\301\244\2276\301@R\025\301\244\2276\301\230\354\031\301\315B\t\301ai \301\244\2276\301\345\333\001\301\203\200+\301G\341\005\301\244\2276\301\020^\014\301b\327\034\301\203\200+\301\272\003%\301\272\003%\301\244\2276\301h\307\344\300\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\036;\n\301\244\2276\301\020^\014\3011u\027\301\230\354\031\301\203\200+\301ai \301ai \301\272\003%\3011u\027\301A\300\021\301\244\2276\301\272\003%\301\244\2276\301\315B\t\301\317o\023\301\203\200+\3011u\027\301\244\2276\301V,\000\301\203\200+\301ai \301ai \301\272\003%\301A\300\021\301\203\200+\301@R\025\301\203\200+\301\317o\023\301ai \301\244\2276\301\317o\023\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301A\300\021\301\272\003%\301\230\354\031\301A\300\021\301b\327\034\301\234\215\r\301\244\2276\301\244\2276\301\232_\354\300ai \301\230\354\031\301\345\333\001\301\203\200+\301\203\200+\301\244\2276\301\244\2276\3011u\027\301b\327\034\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301-\310\370\300\337\372\361\300\244\2276\301\272\003%\3015\363\354\300\244\2276\301\244\2276\301\203\200+\301\230\354\031\301b\327\034\301ai \301\244\2276\301\230\354\031\301\272\003%\3011u\027\301\230\354\031\301ai \301\244\2276\301\244\2276\301@\335\273\300U\276\003\301\272\003%\301\230\354\031\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\315B\t\301\244\2276\301\203\200+\301\315B\t\301\234\215\r\301\244\2276\301b\327\034\301A\300\021\301w\325\016\301\203\200+\301\r\253\362\300\244\2276\3011u\027\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\3011u\027\301\272\003%\301\244\2276\301\203\200+\301\261\276\356\300\203\200+\301\272\003%\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\255h\311\300\203\200+\301xC\013\301\020^\014\301\3359\020\301-\310\370\300\232_\354\300b\327\034\301\203\200+\301\244\2276\301\r\253\362\300\344K\375\300\304]\357\300\315B\t\301\203\200+\301\244\2276\301\244\2276\301\344K\375\300\244\2276\301xC\013\301\244\2276\301\234\215\r\301\244\2276\301\244\2276\301\037\251\006\301\020^\014\301\317o\023\301\317o\023\301\315B\t\301\230\354\031\301w\325\016\301\036;\n\301\234\215\r\301ai \301xC\013\301b\327\034\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\230\354\031\301\203\200+\301ai \301\244\2276\301\272\003%\301\244\2276\301\324.\342\300ai \301\244\2276\301k\006\343\300\317o\023\301\317o\023\3012\325\306\300\272\003%\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\3359\020\301b\327\034\301\230\354\031\301w\325\016\301\230\354\031\301\203\200+\301\244\2276\301\244\242\371\300\317o\023\301ai \301\203\200+\301\272\003%\3011u\027\301\244\2276\301\244\2276\301xC\013\301\203\200+\301\244\2276\301\244\2276\301\230\354\031\301\037\251\006\301\"@\353\300\272\003%\301\203\200+\301w\325\016\301\020^\014\301ai \301U\276\003\301\020^\014\301\234\215\r\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\3359\020\301@R\025\3011u\027\301\203\200+\301\272\003%\301@R\025\301@R\025\301\244\2276\301\244\2276\301\037\251\006\301ai \301\244\2276\301\272\003%\301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\315B\t\301\203\200+\301\244\2276\301\317o\023\301\234\215\r\301\345\333\001\3011u\027\301\244\2276\301\244\2276\301\203\200+\301ai \301\244\2276\301\203\200+\301U\276\003\301\272\003%\301\272\003%\301\nB\330\300\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\036;\n\301\317o\023\301b\327\034\301\317o\023\301ai \301\037\251\006\3011u\027\301ai \301ai \301\273\"\005\301ai \301\030\203\372\300b\327\034\301\244\2276\301\315B\t\301\244\2276\301\3359\020\301w\325\016\301\203\200+\301\203\200+\301\3359\020\301\203\200+\301\272\003%\301\203\200+\301\244\2276\301\203\200+\301\r\253\362\300w\325\016\301@R\025\301\244\2276\301\244\2276\301\317o\023\301ai \301\203\200+\301w\325\016\301\230\354\031\301\036;\n\301\345\333\001\3011u\027\301\036;\n\301ai \3011u\027\301\273\"\005\301\017L\377\300\244\2276\301\244\2276\301\036;\n\301\244\2276\301\244\2276\301\272\003%\301A\300\021\301\244\2276\301\315B\t\301\244\2276\301\244\2276\301 \027\003\301\230\354\031\301\244\2276\301\244\2276\301\271\232\350\300\244\242\371\300@R\025\301\234\215\r\301\244\2276\301\272\003%\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\272\003%\301ai \301\037\251\006\301b\327\034\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\315B\t\301\244\2276\301\244\2276\301A\300\021\301\272\003%\301\244\2276\301\244\2276\301\3359\020\301\304\\\341\300ai \301\244\2276\301xC\013\301\230\354\031\301\244\2276\301\244\2276\301ai \301\272\003%\301G\341\005\301\250l\004\301b\327\034\301b\327\034\301\244\242\371\300\230\354\031\301\036;\n\301\203\200+\301\317o\023\301\244\2276\301k\006\343\300\272\003%\301\203\200+\301\244\2276\301b\363\367\300b\327\034\301\244\2276\301\272\003%\301\272\003%\301\244\2276\301ai \3012\267\000\301\244\2276\301\020^\014\301-\310\370\300U\276\003\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\230\354\031\301\244\2276\301\203\200+\301A\300\021\301\020^\014\301\244\2276\3018{\007\3011u\027\301\230\354\031\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301@R\025\301\272\003%\301\272\003%\301\203\200+\301\244\2276\301\317o\023\301w\325\016\301\203\200+\301\234\215\r\301\203\200+\301\244\2276\301\244\2276\301\230\354\031\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\036;\n\301\203\200+\301\272\003%\301\244\2276\301A\300\021\301\244\2276\301\272\003%\3011u\027\301@R\025\301\203\200+\301\244\2276\301\203\200+\301 \027\003\301\203\200+\301\244\2276\301b\327\034\301\272\003%\301ai \301\244\2276\301\244\2276\301\203\200+\301w\325\016\301\244\2276\301\230\354\031\301\244\2276\301b\327\034\301\203\200+\301\244\2276\301\317o\023\301\203\200+\301\230\354\031\301\203\200+\301\244\2276\3011u\027\301\244\2276\301\230\354\031\301\3359\020\301\203\200+\301\244\2276\301\203\200+\301\337\372\361\300\244\2276\301\272\003%\3011u\027\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\3011u\027\301\244\2276\301\304]\357\300\203\200+\301ai \301\244\2276\301\203\200+\301\020^\014\301\244\2276\301\203\200+\301\203\200+\301\272\003%\301\317o\023\3011u\027\3011u\027\301\272\003%\3011u\027\301@R\025\301\244\2276\301\020^\014\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\230\354\031\301@R\025\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301ai \301\203\200+\301\272\003%\301\244\2276\301U\276\003\301\272\003%\301\244\2276\301\203\200+\301b\327\034\301\203\200+\301\244\2276\301\244\2276\301\337\021\325\300A\300\021\301\244\2276\301ai \301\272\003%\301\272\003%\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\263Y\366\300xC\013\301ai \301\203\200+\301\230\354\031\301\020^\014\301\272\003%\301\244\2276\301@R\025\301ai \301\272\003%\301ai \301\244\2276\301\341\355\315\300\272\003%\301\244\2276\301\244\2276\301\203\200+\301\344K\375\300\244\2276\301\244\2276\301\272\003%\301\244\2276\301\037\251\006\301\203\200+\301\244\2276\301\036;\n\301at\343\300\203\200+\301@R\025\301b\327\034\301\244\2276\301\203\200+\301A\300\021\301\244\2276\301\3359\020\301ai \301\244\2276\301\234\215\r\301\020^\014\301\230\354\031\301\210\323\364\300\345\333\001\301\272\003%\301w\325\016\301\244\2276\301@R\025\301\203\200+\301@R\025\301\203\200+\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301\244\2276\301ai \301\272\003%\301b\327\034\301\244\2276\301\203\200+\301\203\200+\301\337\372\361\300\3359\020\301\203\200+\301\203\200+\301\244\2276\301\020^\014\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\272\003%\301\203\200+\301 \027\003\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301ai \3011u\027\301b\327\034\301\317o\023\3012\267\000\301\203\200+\301b\327\034\301A\300\021\301xC\013\301\244\2276\301\244\2276\301\345\333\001\301\036;\n\301G\341\005\301\244\2276\301\230\354\031\301\320\372\317\300\315B\t\301\037\251\006\3011u\027\301 \027\003\301\203\200+\301\326\343\343\300\244\2276\301@R\025\301\020^\014\3011u\027\301ai \3011u\027\301\244\2276\301\244\2276\301b\327\034\301G\341\005\301\244\2276\301\244\2276\301\3359\020\301ai \301\244\2276\301@R\025\301\3359\020\301\244\2276\301ai \301\037\251\006\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\317o\023\301\244\2276\301\244\2276\301\203\200+\301w\325\016\301\272\003%\301\203\200+\301\234\215\r\301\272\003%\301@R\025\301\244\2276\301\244\2276\301ai \301\203\200+\301\244\2276\301\001\243\351\300\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\272\003%\301\244\2276\3011u\027\301\037\251\006\301ai \301xC\013\301\337i\373\300\272\003%\301\345\333\001\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301G\341\005\301\244\2276\301\203\200+\301G\341\005\301\244\2276\301\244\2276\301@R\025\301\203\200+\301w\325\016\301\244\2276\301\244\2276\301\203\200+\301\230\354\031\301\201/\331\300\203\200+\301\272\003%\301\244\2276\301\203\200+\301\272\003%\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\244\2276\301b\327\034\301\244\2276\301\203\200+\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301V,\000\301\272\003%\301ai \301b\327\034\3011u\027\301\037\251\006\3018{\007\301\244\2276\301\272\003%\301\244\2276\301G\341\005\301\373#\367\300\244\2276\3018{\007\301b\327\034\301\244\2276\301\315B\t\301\272\003%\301\244\2276\301\230\354\031\301\203\200+\301\373#\367\300\244\2276\301\244\2276\301\230\354\031\301@R\025\301\244\2276\301\244\2276\301\3359\020\301\244\2276\301ai \301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301ai \301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301w\325\016\301\203\200+\301b\327\034\301\272\003%\301\244\2276\301ai \301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301xC\013\301\244\2276\301ai \301\244\2276\301ai \301U\276\003\301@R\025\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\203\200+\301\244\2276\301ai \301\203\200+\301\263\232\347\300\3359\020\301ai \301w\325\016\301ai \301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\3359\020\301\203\200+\301w\325\016\301\272\003%\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\020^\014\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\234\215\r\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\234\215\r\301\244\2276\301\244\2276\301\203\200+\301ai \301\244\2276\301\020^\014\301\203\200+\301\244\2276\3011u\027\301\203\200+\301\203\200+\301\337i\373\300\244\2276\301\317o\023\3011u\027\301\272\003%\301\244\2276\301\203\200+\301\315B\t\301\230\354\031\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\317o\023\301ai \301\272\003%\301b\327\034\301\023)\346\300\244\2276\301\272\003%\301\203\200+\301\203\200+\301ai \301\244\2276\3011u\027\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301\244\2276\301b\327\034\301\272\003%\301ai \301ai \301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301ai \301A\300\021\301b\327\034\301\244\2276\301gN\361\300\230\354\031\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\3359\020\301\203\200+\301\3359\020\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301@R\025\301\244\2276\301\036;\n\301\263Y\366\300\244\2276\301\244\2276\301\244\2276\301\244\2276\3018{\007\301@R\025\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\246\"\356\300\345\333\001\301b\327\034\3011u\027\301\203\200+\301\244\2276\301ai \301\244\2276\301ai \301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\203\200+\301\317o\023\301\244\2276\301\272\003%\301\244\2276\301\203\200+\3011u\027\301ai \301\3359\020\301b\327\034\301\230\354\031\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\317o\023\301w\325\016\301b\327\034\301w\325\016\301w\325\016\301\230\354\031\301\210\323\364\300\315B\t\301A\300\021\301\244\2276\301\036;\n\301\356F\001\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\3359\020\301\244\2276\301\375\377\357\300ai \301\244\2276\3018{\007\301U\276\003\301\244\2276\3011u\027\301\244\2276\301\272\003%\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\203\200+\301\230\354\031\301\244\2276\301\373#\367\300\317o\023\301ai \301\017L\377\300w\325\016\301\272\003%\301\272\003%\301\244\2276\3011u\027\301VW\374\300\244\2276\301\017L\377\300\203\200+\301\r\253\362\300\272\003%\301\036;\n\301\315B\t\301\234\215\r\301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\037\251\006\301\272\003%\301\203\200+\301\317o\023\301\272\003%\3012\267\000\301\256X\010\301\272\003%\301\244\2276\301\244\2276\301A\300\021\301\3359\020\301\244\2276\301\244\2276\301\244\2276\301w\325\016\301\244\2276\301A\300\021\301\244\2276\301\020^\014\301\020^\014\301\276t\323\300A\300\021\301\244\2276\301\244\2276\301{\261\345\300A\300\021\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301ai \301\244\2276\301\244\2276\301w\325\016\301ai \301\203\200+\301\317o\023\301\272\003%\301@R\025\301\317o\023\30180\307\300\244\2276\301\272\003%\301\244\2276\301ai \301\244\2276\301\3359\020\301b\327\034\301\272\003%\301\3359\020\301\244\2276\301\244\2276\301A\300\021\301\244\2276\301\244\2276\301ai \301\244\2276\301A\300\021\301\317o\023\301\244\2276\301\203\200+\301\020^\014\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301xC\013\301\203\200+\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\234\215\r\301@R\025\301\272\003%\301\244\2276\301\203\200+\301-\310\370\300\244\2276\301\203\200+\301b\327\034\301\272\003%\301\244\2276\301\272\003%\301\203\200+\301\272\003%\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\230\354\031\301\256X\010\301\203\200+\301\272\003%\301b\327\034\301ai \301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\203\200+\301w\325\016\301w\325\016\301@R\025\3011u\027\301\317o\023\301\244\2276\301\203\200+\301\272\003%\301\020^\014\301\272\003%\301\272\003%\301\203\200+\301\244\2276\301A\300\021\301\244\2276\301\230\354\031\301\203\200+\301b\327\034\301ai \301\244\2276\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\315B\t\301\244\2276\301\037\251\006\301ai \301ai \301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\3359\020\301\203\200+\301\317o\023\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301@R\025\301A\300\021\301V,\000\301\272\003%\301\203\200+\301\244\2276\301@R\025\301\244\2276\301ai \301ai \301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\317o\023\3011u\027\301\315B\t\301A\300\021\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\244\2276\301\272\003%\301V,\000\301\244\2276\301@R\025\301A\300\021\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\272\003%\301ai \301ai \301A\300\021\301\203\200+\301\272\003%\301\272\003%\301\244\2276\301\244\2276\3011u\027\301\272\003%\301\272\003%\301xC\013\301\203\200+\301b\327\034\301\244\2276\301\203\200+\301\244\2276\301w\325\016\301\3359\020\301U\276\003\301ai \301\345\333\001\301@R\025\301\203\200+\301ai \301ai \301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\3011u\027\301\244\2276\301\230\354\031\301\203\200+\301b\327\034\301\203\200+\301\244\2276\301b\327\034\301\244\2276\301\273\"\005\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\203\200+\301\272\003%\301\272\003%\301\203\200+\301\315B\t\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\317o\023\301w\325\016\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301-\310\370\300\203\200+\301ai \301A\300\021\301\244\2276\301\244\2276\301b\327\034\301\272\003%\301ai \301ai \301\272\003%\301xC\013\301\230\354\031\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301\203\200+\301b\327\034\301b\363\367\300\244\2276\301\272\003%\301\244\2276\301\244\2276\301\337\372\361\300\234\215\r\301ai \301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\256X\010\301\244\2276\301\3359\020\3018{\007\301\272\003%\301@R\025\301ai \301\244\2276\301\317o\023\301\203\200+\301\244\2276\301\272\003%\301\230\354\031\301\244\2276\301\244\2276\301@R\025\301b\327\034\301\3359\020\301\244\2276\301\244\2276\301ai \301\203\200+\301\244\2276\301\244\2276\301ai \301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\234\215\r\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\345\333\001\301\203\200+\301\203\200+\301\261\276\356\300\203\200+\301\203\200+\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301ai \301\244\2276\301\036;\n\301\230\354\031\301\203\200+\301\230\354\031\301\244\2276\301b\327\034\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301@R\025\301\244\2276\3011u\027\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301VW\374\300\203\200+\301\203\200+\301ai \301\244\2276\301\244\2276\301w\325\016\301xC\013\301\203\200+\301\244\2276\3011u\027\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\315B\t\301\203\200+\301\244\2276\301\203\200+\301@R\025\301\244\2276\301\317o\023\301\272\003%\301\203\200+\301\230\354\031\301G\341\005\301ai \301ai \301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\203\200+\301\3359\020\301A\300\021\301\244\2276\301\273\"\005\301\244\2276\301\203\200+\301\230\354\031\301ai \301U\276\003\301\244\2276\301\272\003%\301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301A\300\021\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301b\327\034\301b\327\034\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301ai \301A\300\021\301\036;\n\301\244\2276\301\244\2276\301\203\200+\301\304]\357\300\244\2276\301\244\2276\301\203\200+\301b\363\367\300\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\317o\023\301\244\2276\301ai \3011u\027\301\272\003%\301\250l\004\301\203\200+\301\3359\020\301\203\200+\301\244\2276\301\317o\023\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301ai \301\256X\010\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301ai \301\244\242\371\300\203\200+\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\230\354\031\301\272\003%\301\244\2276\301\017L\377\300\272\003%\301\272\003%\301b\327\034\301\017L\377\300\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301ai \301\203\200+\301\244\2276\301\230\354\031\301\273\"\005\301\203\200+\301\244\2276\301\230\354\031\301\037\251\006\3012\267\000\301\272\003%\301@R\025\301\020^\014\301ai \301\3359\020\301\244\2276\301ai \301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\244\2276\301\203\200+\301w\325\016\301\230\354\031\301\315B\t\301\020^\014\301b\327\034\301\244\2276\301\203\200+\3011u\027\301@R\025\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\203\200+\301\273\"\005\301\203\200+\301\272\003%\301\203\200+\301\251_\316\300\203\200+\301\320\372\317\300\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301ai \301\244\2276\301\244\2276\301ai \301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\344K\375\300@R\025\301\244\2276\301\203\200+\3011u\027\301\244\2276\301ai \301\203\200+\301\244\2276\301\234\215\r\301\244\2276\301\244\2276\301\250l\004\301\203\200+\301\244\2276\301ai \301\244\2276\301\272\003%\301VW\374\300\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301w\325\016\301\203\200+\301\272\003%\301\344K\375\300\203\200+\301\203\200+\301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\3359\020\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\272\003%\301\203\200+\3018{\007\301w\325\016\3018{\007\301\203\200+\3011u\027\301b\327\034\301\203\200+\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\244\2276\301b\327\034\301@R\025\3011u\027\301\273\"\005\301\203\200+\301{\261\345\300b\327\034\3018{\007\301w\325\016\3011u\027\301@R\025\301\272\003%\301\244\2276\301b\327\034\301\244\2276\301*\270\323\300\203\200+\301\244\2276\301\203\200+\301\230\354\031\301\244\2276\301\345\333\001\301\317o\023\301\230\354\031\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\345\333\001\301\244\2276\301\317o\023\301\203\200+\301\244\2276\301\230\354\031\301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\3359\020\301\244\2276\301xC\013\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\256X\010\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\272\003%\301\3359\020\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\230\354\031\301\203\200+\301\244\2276\301ai \301\230\354\031\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301b\327\034\301@R\025\301\203\200+\301\272\003%\301\230\354\031\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301ai \301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\345\333\001\301\036;\n\301\203\200+\301\203\200+\301\244\2276\301\256X\010\301\020^\014\301\3359\020\301A\300\021\301\272\003%\301\244\2276\301\230\354\031\301\203\200+\301\272\003%\301\244\2276\301\230\354\031\301\272\003%\301\230\354\031\301\203\200+\301 \027\003\301ai \301\203\200+\301\037\251\006\301\203\200+\301\317o\023\301\337i\373\300\244\2276\301\256X\010\301\244\2276\301\244\2276\301\244\242\371\300\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\256X\010\301ai \301\203\200+\301\244\2276\301\203\200+\301\203\200+\301b\327\034\301\244\2276\301@R\025\301\244\2276\301\272\003%\301A\300\021\301\203\200+\301\3359\020\301A\300\021\301A\300\021\301\317o\023\301\244\2276\301ai \301ai \301\272\003%\301\244\2276\301\230\354\031\301\244\2276\301\203\200+\301\244\2276\301\317o\023\301@R\025\301\272\003%\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\315B\t\301ai \301\036;\n\301\230\354\031\301\317o\023\301A\300\021\301\244\2276\301\272\003%\301\203\200+\301 \027\003\301\3359\020\301\230\354\031\301ai \301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\263Y\366\300\244\2276\301\273\"\005\301E\245\336\300\203\200+\301\230\354\031\301\203\200+\301\230\354\031\301\244\2276\301\272\003%\301@R\025\301\244\2276\301\244\2276\301\244\2276\301A\300\021\301G\341\005\301\244\2276\301\203\200+\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\203\200+\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\3359\020\301\272\003%\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301xC\013\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\315B\t\301\203\200+\301\244\2276\301ai \301\203\200+\301\244\2276\301\244\2276\301\250l\004\301ai \301ai \301b\327\034\301\244\2276\301\203\200+\301A\300\021\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\317o\023\301\272\003%\301\244\2276\301\203\200+\301b\327\034\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\234\215\r\301ai \301b\327\034\301\356F\001\301\272\003%\301\203\200+\301\272\003%\301\244\2276\301ai \301b\327\034\301\230\354\031\301ai \301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301w\325\016\301\244\2276\301b\327\034\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\317o\023\301\244\2276\301\203\200+\301\337\372\361\300\272\003%\301\203\200+\301b\327\034\301\272\003%\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301ai \301\230\354\031\301\244\2276\301ai \301\203\200+\301\203\200+\301w\325\016\301\244\2276\301\244\2276\301ai \301\203\200+\301\244\2276\301\244\2276\301\230\354\031\301xC\013\301xC\013\301ai \301ai \301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301U\276\003\301A\300\021\301\203\200+\301ai \301\244\2276\301b\327\034\301\272\003%\301\244\2276\301\324.\342\300\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301b\327\034\301b\327\034\301@R\025\301\244\2276\301\234\215\r\301\272\003%\301\244\2276\301\244\2276\301V,\000\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\373#\367\300b\327\034\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301ai \301\203\200+\301\203\200+\301\203\200+\301\244\2276\301}\245\360\300\230\354\031\301\203\200+\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\203\200+\301\203\200+\301@R\025\301\244\2276\301ai \301ai \301\203\200+\301\244\2276\301\273\"\005\301\244\2276\301ai \301\203\200+\301\203\200+\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\266\031\350\300\203\200+\301\234\215\r\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301A\300\021\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301@R\025\301b\327\034\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301-\310\370\300ai \301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\304]\357\300b\327\034\301\244\2276\301ai \301\244\2276\301\272\003%\301\244\2276\301ai \3011u\027\301\230\354\031\301ai \301\272\003%\3012\267\000\301\203\200+\301\203\200+\301\272\003%\301\244\2276\301V,\000\301ai \301\244\2276\301\244\2276\301\272\003%\301\203\200+\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\203\200+\301\272\003%\301ai \301\234\215\r\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301b\327\034\301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301ai \301\256X\010\301b\327\034\301\3359\020\301\317o\023\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\3011u\027\301\244\2276\301\272\003%\301\272\003%\301ai \301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\244\2276\301\272\003%\3011u\027\301\244\2276\301b\327\034\3011u\027\301\317o\023\301\244\2276\301\244\2276\301\244\2276\301@R\025\301A\300\021\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\272\003%\301\3359\020\301\036;\n\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\272\003%\301\244\2276\301\317o\023\301\203\200+\301\272\003%\3011u\027\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301zv\002\301@R\025\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\203\200+\301w\325\016\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301b\327\034\301\244\2276\301\203\200+\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\250l\004\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\272\003%\301\272\003%\301ai \301\317o\023\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301ai \301\203\200+\301\203\200+\301\203\200+\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301ai \301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301ai \301ai \301\244\2276\301ai \301\244\2276\301b\327\034\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\317o\023\301b\327\034\301\317o\023\301\203\200+\301\244\2276\301ai \301\272\003%\301\272\003%\301\244\2276\301ai \301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\203\200+\301\203\200+\301\244\2276\301\317o\023\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\272\003%\3018{\007\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301w\325\016\301b\327\034\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\272\003%\301b\327\034\301\244\2276\301b\327\034\301\203\200+\301\203\200+\301\230\354\031\301\244\2276\301\036;\n\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301w\325\016\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\256X\010\301\3359\020\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\3359\020\301A\300\021\301\203\200+\301\203\200+\301\244\2276\301\203\200+\301\317o\023\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\023)\346\300\244\2276\301\230\354\031\301\203\200+\301ai \301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301w\325\016\301\203\200+\301\203\200+\301\244\2276\301\317o\023\301\272\003%\301\203\200+\301\244\2276\301\273\"\005\301\244\2276\301b\327\034\301ai \301\317o\023\301\244\2276\301\244\2276\301w\325\016\301\020^\014\301\244\2276\301\230\354\031\301\244\2276\301b\327\034\301\3359\020\301\203\200+\301w\325\016\301\317o\023\301\244\2276\301ai \301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\373#\367\300\203\200+\301A\300\021\301\244\2276\301\244\2276\301\230\354\031\301A\300\021\301\244\2276\301\244\2276\301\244\2276\301\352\231\342\300\244\2276\301\272\003%\301\244\2276\301b\327\034\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301@R\025\301\203\200+\301\036;\n\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301ai \301\244\2276\301\244\2276\301\203\200+\301A\300\021\301\244\2276\301b\327\034\301\203\200+\301\244\2276\301\244\2276\301xC\013\301\223\265\315\300\244\2276\301b\327\034\301\244\2276\301ai \301\244\2276\301\203\200+\301\317o\023\301\244\2276\301\244\2276\3012\267\000\301\203\200+\301ai \301\272\003%\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301A\300\021\301\203\200+\301b\327\034\301\001\243\351\300\r\253\362\300@R\025\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301A\300\021\301\203\200+\301ai \301\3359\020\301\317o\023\301\272\003%\301\230\354\031\301ai \301\244\2276\301ai \301\203\200+\301\244\2276\301@R\025\301\230\354\031\301\244\2276\301G\341\005\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301b\327\034\301b\327\034\301A\300\021\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301U\276\003\301\203\200+\301\272\003%\301\244\2276\301w\325\016\301\371G\376\300\244\2276\301\272\003%\301b\327\034\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\230\354\031\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301w\325\016\301\244\2276\301\203\200+\301\203\200+\3011u\027\301\244\2276\301\203\200+\301b\327\034\301X\240\325\300\203\200+\301ai \301\230\354\031\301\244\2276\301\203\200+\301\203\200+\301\230\354\031\301ai \301ai \3018{\007\301\244\2276\301\272\003%\301@R\025\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301ai \301@R\025\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301w\325\016\301\203\200+\301V,\000\301\244\2276\301\261\276\356\300\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301b\327\034\301\244\2276\301\203\200+\301\371G\376\300\244\2276\3011u\027\301\272\003%\301\244\2276\301ai \301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301C\214\307\300xC\013\301\244\2276\301\203\200+\301\244\2276\301xC\013\301\203\200+\301\272\003%\301b\327\034\301b\327\034\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301ai \301\244\2276\301\244\2276\301U\276\003\301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\272\003%\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\206\211\355\300\273\"\005\301\373#\367\300@R\025\301b\327\034\301\230\354\031\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\203\200+\301ai \301\203\200+\301\244\2276\301\244\2276\301ai \301\244\2276\301ai \301\244\2276\301\244\2276\301\256X\010\301\344K\375\300b\327\034\301\244\2276\301\244\2276\301ai \3011u\027\301w\325\016\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\272\003%\301ai \301\272\003%\301\3359\020\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\036;\n\3011u\027\301@R\025\301\244\2276\301\230\354\031\301b\327\034\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301ai \301\203\200+\301b\327\034\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\203\200+\301\317o\023\301\244\2276\301\244\2276\301ai \301\272\003%\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301ai \301\244\2276\301\203\200+\301\230\354\031\301\203\200+\301\203\200+\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\272\003%\301\203\200+\301ai \301\272\003%\301\203\200+\301A\300\021\301ai \301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\272\003%\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\230\354\031\301b\327\034\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\230\354\031\301\230\354\031\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\037\251\006\301\244\2276\301b\327\034\301\230\354\031\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\020^\014\301\230\354\031\301\244\2276\301\203\200+\301\272\003%\301\272\003%\301b\327\034\301\272\003%\301\244\2276\301\244\2276\301U\276\003\301\272\003%\301\3359\020\301\244\2276\301\272\003%\301ai \301\244\2276\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\356F\001\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\315B\t\301ai \301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301V,\000\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301ai \301ai \301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301@R\025\301\244\2276\301\244\2276\301b\327\034\301b\327\034\301\244\2276\301\272\003%\301\036;\n\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\203\200+\301b\327\034\301\244\2276\301\244\2276\301\020^\014\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301@R\025\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301gN\361\300\272\003%\301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\230\354\031\301\244\2276\301\244\2276\3013\027\364\300\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301xC\013\301\203\200+\301\337i\373\300\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301ai \301\244\2276\3011u\027\301\244\2276\301\203\200+\301\244\2276\301b\327\034\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\317o\023\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\230\354\031\301\230\354\031\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301b\327\034\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301ai \301\317o\023\301\203\200+\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\250l\004\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\272\003%\301\244\2276\301\272\003%\301\272\003%\301\203\200+\301ai \301\244\2276\3012\267\000\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301b\327\034\3011u\027\301^\357\320\300\203\200+\301\244\2276\301\230\354\031\301\036;\n\301ai \301\244\2276\301xC\013\301xC\013\301ai \301\244\2276\301b\327\034\301\272\003%\301\203\200+\301\244\2276\301ai \301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301w\325\016\301\250l\004\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301b\327\034\301\203\200+\301\244\2276\301ai \301\244\2276\301b\327\034\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\356F\001\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\344K\375\300\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301xC\013\301b\327\034\301b\327\034\301ai \301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\272\003%\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\3011u\027\301ai \301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\273\"\005\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301ai \301\244\2276\301\272\003%\301\272\003%\301\234\215\r\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301U\276\003\301\272\003%\301\203\200+\301\272\003%\301b\327\034\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301w\325\016\301\250l\004\301\272\003%\301b\327\034\301b\327\034\301\272\003%\301ai \301\244\2276\301@R\025\301\230\354\031\301b\327\034\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301xC\013\301\230\354\031\301\315B\t\301\203\200+\301\244\2276\301\203\200+\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\203\200+\301\244\2276\3018{\007\301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\244\2276\301@R\025\301\272\003%\301ai \301\244\2276\301zv\002\301\244\2276\301\3359\020\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\020^\014\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\272\003%\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\3359\020\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\3359\020\301ai \3011u\027\301\244\2276\301\272\003%\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\017L\377\300\203\200+\301}\245\360\300\230\354\031\301\244\2276\301\230\354\031\301ai \301\244\2276\301ai \301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\317o\023\301b\327\034\301\244\2276\301\244\2276\301\203\200+\301ai \301\244\2276\301\203\200+\301\244\2276\301ai \301\244\2276\301\230\354\031\301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301xC\013\301w\325\016\301\272\003%\301ai \301\244\2276\301ai \301\203\200+\301\272\003%\301\203\200+\301b\327\034\301\345\333\001\301\272\003%\301\244\2276\301ai \301\244\2276\301\244\2276\3011u\027\301\244\2276\301\345\333\001\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\3011u\027\301@R\025\301\244\2276\301\203\200+\301\256X\010\301\203\200+\301\244\2276\3011u\027\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301w\325\016\301\272\003%\301b\327\034\301\315B\t\301\244\2276\301\244\2276\3011u\027\301\203\200+\301\203\200+\301\272\003%\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\261\276\356\300ai \301\203\200+\301ai \301\244\2276\301\3359\020\301\230\354\031\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\230\354\031\301\232_\354\300\203\200+\301\272\003%\301\345\333\001\301\244\2276\301ai \301\244\2276\301G\341\005\301\203\200+\301\244\2276\301\230\354\031\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\272\003%\3011u\027\301ai \301\272\003%\301\244\2276\301\203\200+\301G\341\005\301\244\2276\301\272\003%\301\244\2276\301\272\003%\301\203\200+\301\244\2276\3011u\027\301ai \301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\315B\t\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\272\003%\3011u\027\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\272\003%\301\203\200+\301\203\200+\301ai \3011u\027\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301A\300\021\301\203\200+\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\315B\t\301\203\200+\301\244\2276\301b\327\034\301\203\200+\301ai \301\230\354\031\301b\327\034\301\203\200+\301ai \301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301ai \3011u\027\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\020^\014\301ai \3011u\027\301A\300\021\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\3011u\027\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\230\354\031\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301ai \301b\327\034\301\020^\014\301\244\2276\301\230\354\031\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\203\200+\301\203\200+\301\337\372\361\300\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\242\371\300\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\203\200+\301\036;\n\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\344K\375\300b\327\034\301ai \301\203\200+\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\244\2276\301\020^\014\301\244\2276\301\344K\375\300\244\2276\301\203\200+\301\203\200+\301\3359\020\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\230\354\031\301b\327\034\301\244\2276\301\244\2276\301\234\215\r\301\230\354\031\301\203\200+\301\203\200+\301\244\2276\301ai \301ai \301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301ai \301\230\354\031\301\244\2276\301A\300\021\301\036;\n\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\203\200+\301\244\2276\301b\327\034\301\272\003%\301A\300\021\301\230\354\031\301\244\2276\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301U\276\003\301xC\013\301\230\354\031\301\203\200+\301ai \301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301A\300\021\301VW\374\300\244\2276\301\244\2276\301\244\2276\301\244\2276\301\036;\n\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301b\327\034\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301ai \301@R\025\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\020^\014\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301b\327\034\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\230\354\031\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\317o\023\301\244\2276\301b\327\034\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\272\003%\301\203\200+\301\230\354\031\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\371G\376\300\230\354\031\301\203\200+\301ai \301\244\2276\301\203\200+\301\030\203\372\300\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\230\354\031\301ai \301\244\2276\301\244\2276\301b\327\034\301ai \301\244\2276\301\244\2276\301\272\003%\301A\300\021\301at\343\300\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301ai \301@R\025\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\244\2276\3011u\027\301\244\2276\301\203\200+\301\3359\020\301\203\200+\301\244\2276\301\203\200+\301\272\003%\301ai \301\272\003%\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\272\003%\301\020^\014\301\244\2276\301\244\2276\301\203\200+\301-\310\370\300\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301A\300\021\301\244\2276\301\244\2276\301ai \3011u\027\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301@R\025\301gN\361\300\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\203\200+\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\230\354\031\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\203\200+\301b\327\034\301\373#\367\3001u\027\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\036;\n\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\234\215\r\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301b\327\034\301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\203\200+\3011u\027\301\203\200+\301\203\200+\301\272\003%\301\244\2276\301\020^\014\301b\327\034\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301ai \301\203\200+\301xC\013\301\244\2276\301b\327\034\301A\300\021\3011u\027\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\244\2276\301\203\200+\301\203\200+\301\244\2276\3011ub\327\034\301ai \301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\203\200+\301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\3359\020\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\315B\t\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\263Y\366\300\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301A\300\021\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301w\325\016\301\230\354\031\301\272\003%\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\375\377\357\300\203\200+\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301ai \301\203\200+\301\203\200+\301@R\025\301b\327\034\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301A\300\021\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\250l\004\3011u\027\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\036;\n\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\3012\267\000\301\3359\020\301\244\2276\301\230\354\031\301\3359\020\301\203\200+\301b\327\034\301b\327\034\301ai \301\203\200+\301\244\2276\301\3359\020\301\244\2276\301\203\200+\301\244\2276\301A\300\021\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301{\261\345\300\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301b\327\034\301\272\003%\301\036;\n\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\017L\377\300\244\2276\301xC\013\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\3011u\027\301\244\2276\301\203\200+\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301b\327\034\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301ai \301\272\003%\301\203\200+\301\244\2276\301ai \301\244\2276\301\020^\014\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301ai \301b\327\034\301\272\003%\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301ai \301\244\2276\301\3359\020\301ai \301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\203\200+\301\244\2276\301ai \301\230\354\031\301\272\003%\301\244\2276\301\020^\014\301\244\2276\301\244\2276\301\203\200+\3011u\027\301\272\003%\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\203\200+\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\3018{\007\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301@R\025\301\244\2276\301\203\200+\301\244\2276\301zv\002\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301K\224\365\300\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\256X\010\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\266\031\350\300\230\354\031\301\230\354\031\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\272\003%\301@R\025\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\203\200+\301b\327\034\301\203\200+\301\272\003%\301\272\003%\301\263Y\366\300\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301@R\025\301ai \301\244\2276\301\244\2276\301ai \301\244\2276\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\203\200+\301ai \301\036;\n\301\272\003%\301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\272\003%\301\272\003%\301\272\003%\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301A\300\021\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301ai \301\203\200+\301\272\003%\301\036;\n\301\244\2276\301\036;\n\3011u\027\301\244\2276\301b{\007\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301w\325\016\301\3359\020\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301ai \301\244\2276\301ai \301\272\003%\301\203\200+\301\272\003%\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301b\327\034\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\020^\014\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\317o\023\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301w\325\016\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\020^\014\301\272\003%\301\244\2276\301\244\2276\301\263Y\366\300\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301ai \301\244\2276\301zv\002\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\272\003%\301ai \301\244\2276\301\272\003%\301@R\025\301\272\003%\301\244\2276\301\272\003%\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\230\354\031\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\272\003%\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\3359\020\301b\327\034\301\250l\004\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\272\003%\301ai \301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\272\003%\3011u\027\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301zv\002\301b\327\034\301\203\200+\301A\300\021\301ai \301\244\2276\301\230\354\031\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301w\325\016\301\244\2276\301VW\374\300\017L\377\300\203\200+\301\244\2276\301\272\003%\301\244\2276\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\234\215\r\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\3018{\007\301\272\003%\301\234\215\r\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\3359\020\301\244\2276\301\230\354\031\301ai \301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\230\354\031\301ai \301\203\200+\301\203\200+\301\244\2276\301\244\2276\301ai \301\272\003%\301\244\2276\301\203\200+\301\230\354\031\301@R\025\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301ai \301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301b\327\034\301\272\003%\301b\327\034\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\036;\n\301\244\2276\3011ur\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\272\003%\301\230\354\031\301\203\200+\301\244\2276\301\244\2276\301b\327\034\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301ai \3011u\027\301b\327\034\301\250l\004\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301b\327\034\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301w\325\016\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\203\200+\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301 \027\003\301ai \301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\272\003%\301ai \301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\3011u\027\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\256X\010\301\256X\010\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301ai \301\203\200+\301@R\025\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\244\2276\3011u\027\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\3011u\027\301\272\003%\301\244\2276\301b\327\034\301b\327\034\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\036;\n\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301ai \301\272\003%\301ai \301ai \301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\203\200+\301\272\003%\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\203\200+\301@R\025\301\244\2276\301\244\2276\301\244\2276\301ai \301\272\003%\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301@R\025\301\244\2276\301\230\354\031\301\244\2276\301\230\354\031\301\244\2276\301ai \301\272\003%\301\244\2276\301b\327\034\301\203\200+\301\244\2276\301\203\200+\301ai \301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301ai \3011u\027\301\272\003%\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\3012\267\000\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301b\327\034\301\272\003%\301b\327\034\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\272\003%\301\244\2276\301\272\003%\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\272\003%\301\230\354\031\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301xC\013\301\3359\020\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301ai \301ai \301\244\2276\301b\327\034\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\036;\n\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3018{\007\301\244\2276\301\230\354\031\301\203\200+\301\244\2276\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\3359\020\301\244\2276\301\244\2276\3018{\007\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301xC\013\301\244\2276\301\244\2276\301@R\025\301w\325\016\301\244\2276\301\244\2276\301\250l\004\301\244\2276\301\272\003%\301\272\003%\301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301ai \301\244\2276\301\203\200+\3011u\027\301b\327\034\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301@R\025\301xC\013\301\203\200+\301ai \301\203\200+\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\234\215\r\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\344K\375\300\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3018{\007\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301ai \301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\3359\020\301\244\2276\301\203\200+\301\272\003%\301\250l\004\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\203\200+\301\230\354\031\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\363\367\300\244\2276\301\244\2276\301\244\2276\301\203\200+\3011u\027\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301 \027\003\301\244\2276\301\203\200+\301\272\003%\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\250l\004\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\3359\020\301\244\2276\301b\327\034\301\203\200+\301\272\003%\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\250l\004\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301ai \301\244\2276\301\272\003%\301\203\200+\301\244\2276\301G\341\005\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\272\003%\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\317o\023\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3011u\027\301b\327\034\301\244\2276\301\272\003%\301\244\2276\301ai \301\203\200+\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\3359\020\301\244\2276\301\244\2276\301\230\354\031\301ai \301\203\200+\301\203\200+\301\203\200+\301\203\200+\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\244\2276\301\315B\t\301ai \301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301ai \301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\203\200+\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301ai \301\244\2276\301b\327\034\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\203\200+\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\203\200+\301w\325\016\301\203\200+\301\234\215\r\301\256X\010\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\230\354\031\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301@R\025\301\244\2276\301\272\003%\301w\325\016\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\230\354\031\301\272\003%\301\244\2276\301\272\003%\301\203\200+\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\230\354\031\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301w\325\016\301\244\2276\3012\267\000\301\203\200+\301aib\327\034\301b\327\034\301\203\200+\301\244\2276\301\244\2276\301ai \301\244\2276\301\203\200+\301b\327\034\301\244\2276\3011u\027\301\203\200+\301\244\2276\301\244\2276\301ai \301ai \301\244\2276\301\244\2276\301\244\2276\301\244\242\371\300\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301}\245\360\300\232_\354\300\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\234\215\r\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\3359\020\301\244\2276\3018{\007\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301zv\002\301\203\200+\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301xC\013\301ai \301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301w\325\016\301\244\2276\301\234\215\r\301b\327\034\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301@R\025\301\203\200+\301\230\354\031\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301@R\025\301\244\2276\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301@R\025\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\263Y\366\300\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301ai \301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\203\200+\301\203\200+\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\230\354\031\301\230\354\031\301\203\200+\301\244\2276\301ai \301@R\025\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\036;\nai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301A\300\021\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301@R\025\301\317o\023\301\203\200+\301\234\215\rb\327\034\301\244\2276\301\244\2276\301\244\2276\301\317o\023\301\203\200+\301\203\200+\301\272\003%\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301ai \301\3359\020\301\272\003%\301\273\"\005\301\3359\020\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301bai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\317o\023\301\272\003%\301\272\003%\301\244\2276\3011u\027\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301bb\327\034\301ai \301\272\003%\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301A\300\021\301\203\200+\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301A\300\021\301\244\2276\301\244\2276\301\317o\023\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\317o\023\301\272\003%\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301zv{ai \301\203\200+\301\244\2276\301\244\2276\301\244\2276\301ai \301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301ai \301ai \301\244\2276\301\272\003%\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301w\325\016\3011u\027\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301gN\361\300ai \301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\234\215\r\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\317o\023\301\272\003%\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\273\"\005\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301A\300\021\301\244\2276\301\244\2276\301\244\2276\301ai \301\230\354\031\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301bb\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\3011u\027\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\315B\tb\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\315B\t\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301bb\327\034\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\317oai \301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\272\003%\301\244\2276\301ai \301\203\200+\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301ai \301\244\2276\301\244\2276\301ai \301b\327\034\301\244\2276\3011u\027\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\230\354\031\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\234\215\r\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\3011uu\027\301\244\2276\301\244\2276\301ai \301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301b\327\034\301\356F\001\301\272\003%\301\244\2276\301\244\2276\301wb\327\034\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\3359\020\301aib\327\034\301\230\354\031\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301w\325\016\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\3011u\027\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\203\200+\301b\327\034\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301\272\003%\301\244\2276\301\244\2276\301\244\2276\301\244\2276\301"
      }
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12594
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Hid2Vocab/b_H2vocab"
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Hid2Vocab/b_H2vocab"
}
node {
  name: "Hid2Vocab/b_H2vocab/Assign"
  op: "AssignVariableOp"
  input: "Hid2Vocab/b_H2vocab"
  input: "Hid2Vocab/b_H2vocab/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Hid2Vocab/b_H2vocab"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "21\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07999999821186066
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07999999821186066
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Word_Vectors/Word_embedding/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Word_Vectors/Word_embedding/Initializer/random_uniform/max"
  input: "Word_Vectors/Word_embedding/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Word_Vectors/Word_embedding/Initializer/random_uniform/RandomUniform"
  input: "Word_Vectors/Word_embedding/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Initializer/random_uniform"
  op: "AddV2"
  input: "Word_Vectors/Word_embedding/Initializer/random_uniform/mul"
  input: "Word_Vectors/Word_embedding/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12594
        }
        dim {
          size: 500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Word_Vectors/Word_embedding"
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Word_Vectors/Word_embedding"
}
node {
  name: "Word_Vectors/Word_embedding/Assign"
  op: "AssignVariableOp"
  input: "Word_Vectors/Word_embedding"
  input: "Word_Vectors/Word_embedding/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Word_Vectors/Word_embedding"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_Video/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_Caption/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "LSTM_Caption/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\020\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "Input_Video"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "sub/x"
  input: "Dropout_Keep_Probability"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/Sub"
  op: "Sub"
  input: "dropout/Const"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/RealDiv"
  op: "RealDiv"
  input: "Reshape"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout/random_uniform/RandomUniform"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Cast"
  op: "Cast"
  input: "dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout/Mul"
  op: "Mul"
  input: "dropout/RealDiv"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "xw_plus_b/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Im2Cap/W_im2cap"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "xw_plus_b/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Im2Cap/b_im2cap"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "xw_plus_b/MatMul"
  op: "MatMul"
  input: "dropout/Mul"
  input: "xw_plus_b/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "xw_plus_b"
  op: "BiasAdd"
  input: "xw_plus_b/MatMul"
  input: "xw_plus_b/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000P\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "xw_plus_b"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000O\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zeros"
  op: "Fill"
  input: "zeros/shape_as_tensor"
  input: "zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "Reshape_1"
  input: "zeros"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/range"
  op: "Range"
  input: "LSTM_Video_1/rnn/range/start"
  input: "LSTM_Video_1/rnn/Rank"
  input: "LSTM_Video_1/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/concat"
  op: "ConcatV2"
  input: "LSTM_Video_1/rnn/concat/values_0"
  input: "LSTM_Video_1/rnn/range"
  input: "LSTM_Video_1/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/transpose"
  op: "Transpose"
  input: "concat"
  input: "LSTM_Video_1/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_4"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_5"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\237\000\000\000\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/strided_slice"
  op: "StridedSlice"
  input: "LSTM_Video_1/rnn/Shape"
  input: "LSTM_Video_1/rnn/strided_slice/stack"
  input: "LSTM_Video_1/rnn/strided_slice/stack_1"
  input: "LSTM_Video_1/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/concat_1"
  op: "ConcatV2"
  input: "LSTM_Video_1/rnn/Const"
  input: "LSTM_Video_1/rnn/Const_1"
  input: "LSTM_Video_1/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/zeros"
  op: "Fill"
  input: "LSTM_Video_1/rnn/concat_1"
  input: "LSTM_Video_1/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/TensorArrayV2/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/TensorArrayV2"
  op: "TensorListReserve"
  input: "LSTM_Video_1/rnn/TensorArrayV2/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/TensorArrayV2_1/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/TensorArrayV2_1"
  op: "TensorListReserve"
  input: "LSTM_Video_1/rnn/TensorArrayV2_1/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "LSTM_Video_1/rnn/transpose"
  input: "LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor/element_shape"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/Maximum"
  op: "Maximum"
  input: "LSTM_Video_1/rnn/Maximum/x"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/Minimum"
  op: "Minimum"
  input: "LSTM_Video_1/rnn/strided_slice"
  input: "LSTM_Video_1/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/loop_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\320\007\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04472136124968529
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04472136124968529
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Video/rnn/basic_lstm_cell/kernel"
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel"
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Read/Identity"
  op: "Identity"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2000
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Video/rnn/basic_lstm_cell/bias"
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias"
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Read/Identity"
  op: "Identity"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while"
  op: "While"
  input: "LSTM_Video_1/rnn/while/loop_counter"
  input: "LSTM_Video_1/rnn/strided_slice"
  input: "LSTM_Video_1/rnn/time"
  input: "LSTM_Video_1/rnn/TensorArrayV2"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  input: "LSTM_Video_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "LSTM_Video_1/rnn/Minimum"
  input: "LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Read/Identity"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Read/Identity"
  input: "Dropout_Keep_Probability"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Placeholder_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_1_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/dropout/Cast_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/dropout/RealDiv_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/RealDiv_grad/Shape_1_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/dropout/Sub_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Mul_2_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_2_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Tanh_1_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_1_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/sub_grad/Shape_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/sub_grad/Shape_1_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Placeholder_2_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Tanh_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_1_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/concat_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength_0/accumulator"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_num_original_outputs"
    value {
      i: 32
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "_stateful_parallelism"
    value {
      b: false
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "LSTM_Video_1_rnn_while_body_3648_rewritten"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "LSTM_Video_1_rnn_while_cond_3647_rewritten"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 500
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 500
          }
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 2000
          }
        }
        shape {
          dim {
            size: 2000
          }
        }
        shape {
          unknown_rank: true
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/Identity"
  op: "Identity"
  input: "LSTM_Video_1/rnn/while"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/Identity_1"
  op: "Identity"
  input: "LSTM_Video_1/rnn/while:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/Identity_2"
  op: "Identity"
  input: "LSTM_Video_1/rnn/while:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/Identity_3"
  op: "Identity"
  input: "LSTM_Video_1/rnn/while:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/Identity_4"
  op: "Identity"
  input: "LSTM_Video_1/rnn/while:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/Identity_5"
  op: "Identity"
  input: "LSTM_Video_1/rnn/while:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/Identity_6"
  op: "Identity"
  input: "LSTM_Video_1/rnn/while:6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/Identity_7"
  op: "Identity"
  input: "LSTM_Video_1/rnn/while:7"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/Identity_8"
  op: "Identity"
  input: "LSTM_Video_1/rnn/while:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/Identity_9"
  op: "Identity"
  input: "LSTM_Video_1/rnn/while:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/while/Identity_10"
  op: "Identity"
  input: "LSTM_Video_1/rnn/while:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/TensorArrayV2Stack/TensorListStack/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/TensorArrayV2Stack/TensorListStack"
  op: "TensorListStack"
  input: "LSTM_Video_1/rnn/while/Identity_3"
  input: "LSTM_Video_1/rnn/TensorArrayV2Stack/TensorListStack/element_shape"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_elements"
    value {
      i: -1
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\237\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/range_1"
  op: "Range"
  input: "LSTM_Video_1/rnn/range_1/start"
  input: "LSTM_Video_1/rnn/Rank_1"
  input: "LSTM_Video_1/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/concat_2"
  op: "ConcatV2"
  input: "LSTM_Video_1/rnn/concat_2/values_0"
  input: "LSTM_Video_1/rnn/range_1"
  input: "LSTM_Video_1/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video_1/rnn/transpose_1"
  op: "Transpose"
  input: "LSTM_Video_1/rnn/TensorArrayV2Stack/TensorListStack"
  input: "LSTM_Video_1/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "zeros_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000P\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Fill"
  input: "zeros_1/shape_as_tensor"
  input: "zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000O\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "GT_Caption"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "embedding_lookup"
  op: "ResourceGather"
  input: "Word_Vectors/Word_embedding"
  input: "strided_slice"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "embedding_lookup/Identity"
  op: "Identity"
  input: "embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "embedding_lookup/Identity_1"
  op: "Identity"
  input: "embedding_lookup/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "sub_1/x"
  input: "Dropout_Keep_Probability"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/Sub"
  op: "Sub"
  input: "dropout_1/Const"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/RealDiv"
  op: "RealDiv"
  input: "embedding_lookup/Identity_1"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000O\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "dropout_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_1/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_1/random_uniform/RandomUniform"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Cast"
  op: "Cast"
  input: "dropout_1/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_1/Mul"
  op: "Mul"
  input: "dropout_1/RealDiv"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "zeros_1"
  input: "dropout_1/Mul"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "concat_2"
  op: "ConcatV2"
  input: "concat_1"
  input: "LSTM_Video_1/rnn/transpose_1"
  input: "concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/range"
  op: "Range"
  input: "LSTM_Caption_1/rnn/range/start"
  input: "LSTM_Caption_1/rnn/Rank"
  input: "LSTM_Caption_1/rnn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/concat"
  op: "ConcatV2"
  input: "LSTM_Caption_1/rnn/concat/values_0"
  input: "LSTM_Caption_1/rnn/range"
  input: "LSTM_Caption_1/rnn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/transpose"
  op: "Transpose"
  input: "concat_2"
  input: "LSTM_Caption_1/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  op: "ConcatV2"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_1"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  op: "ConcatV2"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_4"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_5"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/concat_1"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\237\000\000\000\001\000\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/strided_slice"
  op: "StridedSlice"
  input: "LSTM_Caption_1/rnn/Shape"
  input: "LSTM_Caption_1/rnn/strided_slice/stack"
  input: "LSTM_Caption_1/rnn/strided_slice/stack_1"
  input: "LSTM_Caption_1/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/concat_1"
  op: "ConcatV2"
  input: "LSTM_Caption_1/rnn/Const"
  input: "LSTM_Caption_1/rnn/Const_1"
  input: "LSTM_Caption_1/rnn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/zeros"
  op: "Fill"
  input: "LSTM_Caption_1/rnn/concat_1"
  input: "LSTM_Caption_1/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/time"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/TensorArrayV2/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/TensorArrayV2"
  op: "TensorListReserve"
  input: "LSTM_Caption_1/rnn/TensorArrayV2/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/TensorArrayV2_1/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/TensorArrayV2_1"
  op: "TensorListReserve"
  input: "LSTM_Caption_1/rnn/TensorArrayV2_1/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "LSTM_Caption_1/rnn/transpose"
  input: "LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor/element_shape"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/Maximum/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/Maximum"
  op: "Maximum"
  input: "LSTM_Caption_1/rnn/Maximum/x"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/Minimum"
  op: "Minimum"
  input: "LSTM_Caption_1/rnn/strided_slice"
  input: "LSTM_Caption_1/rnn/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/loop_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\334\005\000\000\320\007\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.041403934359550476
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.041403934359550476
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/max"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/RandomUniform"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  op: "AddV2"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/mul"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1500
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Caption/rnn/basic_lstm_cell/kernel"
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel"
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Read/Identity"
  op: "Identity"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2000
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Initializer/zeros"
  op: "Fill"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Initializer/zeros/shape_as_tensor"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Caption/rnn/basic_lstm_cell/bias"
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias"
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Read/Identity"
  op: "Identity"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while"
  op: "While"
  input: "LSTM_Caption_1/rnn/while/loop_counter"
  input: "LSTM_Caption_1/rnn/strided_slice"
  input: "LSTM_Caption_1/rnn/time"
  input: "LSTM_Caption_1/rnn/TensorArrayV2"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  input: "LSTM_Caption_1/rnn/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  input: "LSTM_Caption_1/rnn/Minimum"
  input: "LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Read/Identity"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Read/Identity"
  input: "Dropout_Keep_Probability"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Placeholder_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_1_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/Cast_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/RealDiv_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/RealDiv_grad/Shape_1_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/Sub_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Mul_2_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_2_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Tanh_1_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_1_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/sub_grad/Shape_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/sub_grad/Shape_1_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Placeholder_2_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Tanh_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_1_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/concat_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength_0/accumulator"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_num_original_outputs"
    value {
      i: 32
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "_stateful_parallelism"
    value {
      b: false
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "LSTM_Caption_1_rnn_while_body_3836_rewritten"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "LSTM_Caption_1_rnn_while_cond_3835_rewritten"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 500
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 500
          }
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1500
          }
          dim {
            size: 2000
          }
        }
        shape {
          dim {
            size: 2000
          }
        }
        shape {
          unknown_rank: true
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/Identity"
  op: "Identity"
  input: "LSTM_Caption_1/rnn/while"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/Identity_1"
  op: "Identity"
  input: "LSTM_Caption_1/rnn/while:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/Identity_2"
  op: "Identity"
  input: "LSTM_Caption_1/rnn/while:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/Identity_3"
  op: "Identity"
  input: "LSTM_Caption_1/rnn/while:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/Identity_4"
  op: "Identity"
  input: "LSTM_Caption_1/rnn/while:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/Identity_5"
  op: "Identity"
  input: "LSTM_Caption_1/rnn/while:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/Identity_6"
  op: "Identity"
  input: "LSTM_Caption_1/rnn/while:6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/Identity_7"
  op: "Identity"
  input: "LSTM_Caption_1/rnn/while:7"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/Identity_8"
  op: "Identity"
  input: "LSTM_Caption_1/rnn/while:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/Identity_9"
  op: "Identity"
  input: "LSTM_Caption_1/rnn/while:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/while/Identity_10"
  op: "Identity"
  input: "LSTM_Caption_1/rnn/while:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/TensorArrayV2Stack/TensorListStack/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/TensorArrayV2Stack/TensorListStack"
  op: "TensorListStack"
  input: "LSTM_Caption_1/rnn/while/Identity_3"
  input: "LSTM_Caption_1/rnn/TensorArrayV2Stack/TensorListStack/element_shape"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_elements"
    value {
      i: -1
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\237\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/range_1"
  op: "Range"
  input: "LSTM_Caption_1/rnn/range_1/start"
  input: "LSTM_Caption_1/rnn/Rank_1"
  input: "LSTM_Caption_1/rnn/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/concat_2/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/concat_2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/concat_2"
  op: "ConcatV2"
  input: "LSTM_Caption_1/rnn/concat_2/values_0"
  input: "LSTM_Caption_1/rnn/range_1"
  input: "LSTM_Caption_1/rnn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption_1/rnn/transpose_1"
  op: "Transpose"
  input: "LSTM_Caption_1/rnn/TensorArrayV2Stack/TensorListStack"
  input: "LSTM_Caption_1/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000P\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "LSTM_Caption_1/rnn/transpose_1"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\364\001\000\000"
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "strided_slice_1"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "sub_2/x"
  input: "Dropout_Keep_Probability"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/Sub"
  op: "Sub"
  input: "dropout_2/Const"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/RealDiv"
  op: "RealDiv"
  input: "Reshape_2"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "O\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "dropout_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_2/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_2/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_2/random_uniform/RandomUniform"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/Cast"
  op: "Cast"
  input: "dropout_2/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_2/Mul"
  op: "Mul"
  input: "dropout_2/RealDiv"
  input: "dropout_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "xw_plus_b_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Hid2Vocab/W_H2vocab"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "xw_plus_b_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "Hid2Vocab/b_H2vocab"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "xw_plus_b_1/MatMul"
  op: "MatMul"
  input: "dropout_2/Mul"
  input: "xw_plus_b_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "xw_plus_b_1"
  op: "BiasAdd"
  input: "xw_plus_b_1/MatMul"
  input: "xw_plus_b_1/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_2"
  op: "StridedSlice"
  input: "GT_Caption"
  input: "strided_slice_2/stack"
  input: "strided_slice_2/stack_1"
  input: "strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "strided_slice_2"
  input: "Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "strided_slice_3"
  op: "StridedSlice"
  input: "Caption_Mask"
  input: "strided_slice_3/stack"
  input: "strided_slice_3/stack_1"
  input: "strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_4"
  op: "Reshape"
  input: "strided_slice_3"
  input: "Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 79
      }
    }
  }
}
node {
  name: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "xw_plus_b_1"
  input: "Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "mul"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "Reshape_4"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "truediv"
  op: "RealDiv"
  input: "Sum"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/truediv_grad/Shape"
  input: "gradients/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/grad_ys_0"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/truediv_grad/Sum"
  op: "Sum"
  input: "gradients/truediv_grad/RealDiv"
  input: "gradients/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_grad/Sum"
  input: "gradients/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/truediv_grad/Neg"
  op: "Neg"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/truediv_grad/Neg"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/truediv_grad/RealDiv_1"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/truediv_grad/mul"
  op: "Mul"
  input: "gradients/grad_ys_0"
  input: "gradients/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients/truediv_grad/mul"
  input: "gradients/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/truediv_grad/Sum_1"
  input: "gradients/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/truediv_grad/Reshape"
  input: "^gradients/truediv_grad/Reshape_1"
}
node {
  name: "gradients/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/truediv_grad/Reshape"
  input: "^gradients/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/truediv_grad/Reshape_1"
  input: "^gradients/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/truediv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/truediv_grad/tuple/control_dependency"
  input: "gradients/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Sum_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 79
      }
    }
  }
}
node {
  name: "gradients/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/Sum_grad/Reshape"
  input: "gradients/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/mul_grad/Mul"
  op: "Mul"
  input: "gradients/Sum_grad/Tile"
  input: "Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/Sum_grad/Tile"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_grad/Mul"
  input: "^gradients/mul_grad/Mul_1"
}
node {
  name: "gradients/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_grad/Mul"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_grad/Mul_1"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/mul_grad/tuple/control_dependency"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/xw_plus_b_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/xw_plus_b_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "^gradients/xw_plus_b_1_grad/BiasAddGrad"
}
node {
  name: "gradients/xw_plus_b_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "^gradients/xw_plus_b_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
      }
    }
  }
}
node {
  name: "gradients/xw_plus_b_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/xw_plus_b_1_grad/BiasAddGrad"
  input: "^gradients/xw_plus_b_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/xw_plus_b_1_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/xw_plus_b_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/xw_plus_b_1_grad/tuple/control_dependency"
  input: "xw_plus_b_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/xw_plus_b_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_2/Mul"
  input: "gradients/xw_plus_b_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/xw_plus_b_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/xw_plus_b_1/MatMul_grad/MatMul"
  input: "^gradients/xw_plus_b_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/xw_plus_b_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/xw_plus_b_1/MatMul_grad/MatMul"
  input: "^gradients/xw_plus_b_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/xw_plus_b_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/xw_plus_b_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/xw_plus_b_1/MatMul_grad/MatMul_1"
  input: "^gradients/xw_plus_b_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/xw_plus_b_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/dropout_2/Mul_grad/Shape"
  op: "Shape"
  input: "dropout_2/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_2/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_2/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dropout_2/Mul_grad/Shape"
  input: "gradients/dropout_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_2/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/xw_plus_b_1/MatMul_grad/tuple/control_dependency"
  input: "dropout_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_2/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/dropout_2/Mul_grad/Mul"
  input: "gradients/dropout_2/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_2/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout_2/Mul_grad/Sum"
  input: "gradients/dropout_2/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_2/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_2/RealDiv"
  input: "gradients/xw_plus_b_1/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_2/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dropout_2/Mul_grad/Mul_1"
  input: "gradients/dropout_2/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_2/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dropout_2/Mul_grad/Sum_1"
  input: "gradients/dropout_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_2/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dropout_2/Mul_grad/Reshape"
  input: "^gradients/dropout_2/Mul_grad/Reshape_1"
}
node {
  name: "gradients/dropout_2/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dropout_2/Mul_grad/Reshape"
  input: "^gradients/dropout_2/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_2/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dropout_2/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dropout_2/Mul_grad/Reshape_1"
  input: "^gradients/dropout_2/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_2/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "O\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dropout_2/RealDiv_grad/Shape"
  input: "gradients/dropout_2/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/dropout_2/Mul_grad/tuple/control_dependency"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients/dropout_2/RealDiv_grad/RealDiv"
  input: "gradients/dropout_2/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout_2/RealDiv_grad/Sum"
  input: "gradients/dropout_2/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/Neg"
  op: "Neg"
  input: "Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/dropout_2/RealDiv_grad/Neg"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/dropout_2/RealDiv_grad/RealDiv_1"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients/dropout_2/Mul_grad/tuple/control_dependency"
  input: "gradients/dropout_2/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients/dropout_2/RealDiv_grad/mul"
  input: "gradients/dropout_2/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dropout_2/RealDiv_grad/Sum_1"
  input: "gradients/dropout_2/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dropout_2/RealDiv_grad/Reshape"
  input: "^gradients/dropout_2/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients/dropout_2/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dropout_2/RealDiv_grad/Reshape"
  input: "^gradients/dropout_2/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_2/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dropout_2/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dropout_2/RealDiv_grad/Reshape_1"
  input: "^gradients/dropout_2/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_2/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000O\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout_2/RealDiv_grad/tuple/control_dependency"
  input: "gradients/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\237\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\237\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000P\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad/end"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad/strides"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad/shape"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad/begin"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad/end"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad/strides"
  input: "gradients/Reshape_2_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "LSTM_Caption_1/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/LSTM_Caption_1/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "gradients/LSTM_Caption_1/rnn/transpose_1_grad/transpose"
  input: "gradients/LSTM_Caption_1/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor/element_shape"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "LSTM_Caption_1/rnn/while:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "LSTM_Caption_1/rnn/while:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "LSTM_Caption_1/rnn/while:7"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "LSTM_Caption_1/rnn/while:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "LSTM_Caption_1/rnn/while:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "LSTM_Caption_1/rnn/while:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/grad_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Placeholder_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Const"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_1_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/Cast_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/Cast_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/Cast_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/RealDiv_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/RealDiv_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/RealDiv_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/RealDiv_grad/Shape_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/RealDiv_grad/Shape_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/RealDiv_grad/Shape_1_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/Sub_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/Sub_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/dropout/Sub_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Mul_2_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Mul_2_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Mul_2_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_2_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_2_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_2_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Tanh_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Tanh_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Tanh_1_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_1_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/sub_grad/Shape_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/sub_grad/Shape_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/sub_grad/Shape_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/sub_grad/Shape_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/sub_grad/Shape_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/sub_grad/Shape_1_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Placeholder_2_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Placeholder_2_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Placeholder_2_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Tanh_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Tanh_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Tanh_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/Sigmoid_1_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/concat_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\334\005\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/concat_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/basic_lstm_cell/concat_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator/element_shape"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Const_1"
  input: "LSTM_Caption_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad"
  op: "StatelessWhile"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/grad_counter"
  input: "LSTM_Caption_1/rnn/strided_slice"
  input: "LSTM_Caption_1/rnn/while"
  input: "gradients/LSTM_Caption_1/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor"
  input: "gradients/zeros_like_1"
  input: "gradients/zeros_like_2"
  input: "gradients/zeros_like_3"
  input: "gradients/zeros_like_4"
  input: "gradients/zeros_like_5"
  input: "gradients/zeros_like_6"
  input: "LSTM_Caption_1/rnn/while:11"
  input: "LSTM_Caption_1/rnn/while:12"
  input: "LSTM_Caption_1/rnn/while:13"
  input: "LSTM_Caption_1/rnn/while:14"
  input: "LSTM_Caption_1/rnn/while:15"
  input: "LSTM_Caption_1/rnn/while:16"
  input: "LSTM_Caption_1/rnn/while:17"
  input: "LSTM_Caption_1/rnn/while:18"
  input: "LSTM_Caption_1/rnn/while:19"
  input: "LSTM_Caption_1/rnn/while:20"
  input: "LSTM_Caption_1/rnn/while:21"
  input: "LSTM_Caption_1/rnn/while:22"
  input: "LSTM_Caption_1/rnn/while:23"
  input: "LSTM_Caption_1/rnn/while:24"
  input: "LSTM_Caption_1/rnn/while:25"
  input: "LSTM_Caption_1/rnn/while:26"
  input: "LSTM_Caption_1/rnn/while:27"
  input: "LSTM_Caption_1/rnn/while:28"
  input: "LSTM_Caption_1/rnn/while:8"
  input: "LSTM_Caption_1/rnn/while:29"
  input: "LSTM_Caption_1/rnn/while:30"
  input: "LSTM_Caption_1/rnn/while:31"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_num_original_outputs"
    value {
      i: 32
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "_stateful_parallelism"
    value {
      b: false
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "LSTM_Caption_1_rnn_while_body_3836_grad_4077"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "LSTM_Caption_1_rnn_while_cond_3835_rewritten_grad_4409"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 500
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 500
          }
        }
        shape {
        }
        shape {
          dim {
            size: 1500
          }
          dim {
            size: 2000
          }
        }
        shape {
          dim {
            size: 2000
          }
        }
        shape {
          unknown_rank: true
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1500
          }
          dim {
            size: 2000
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_1"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_2"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_3"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_4"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_5"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_6"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:6"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_7"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_8"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_9"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_10"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:10"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_11"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:11"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_12"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:12"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_13"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:13"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_14"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:14"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_15"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:15"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_16"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:16"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_17"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:17"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_18"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:18"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_19"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:19"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_20"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:20"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_21"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:21"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_22"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:22"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_23"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:23"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_24"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:24"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_25"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:25"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_26"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:26"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_27"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:27"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_28"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_29"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:29"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_30"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:30"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_31"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/LSTM_Caption_1/rnn/while_grad:31"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/Identity_3"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/Identity_4"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/Identity_5"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/Identity_6"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/Identity_7"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/Identity_8"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/Identity_9"
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_3"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Caption_1/rnn/while_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_4"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Caption_1/rnn/while_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_5"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Caption_1/rnn/while_grad/Identity_5"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_6"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Caption_1/rnn/while_grad/Identity_6"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_7"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Caption_1/rnn/while_grad/Identity_7"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_8"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Caption_1/rnn/while_grad/Identity_8"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/while_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/Identity_9"
  input: "^gradients/LSTM_Caption_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Caption_1/rnn/while_grad/Identity_9"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\237\000\000\000\001\000\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice"
  op: "Slice"
  input: "gradients/LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Shape"
  input: "gradients/LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice/begin"
  input: "gradients/LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/TensorListStack"
  op: "TensorListStack"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/tuple/control_dependency_3"
  input: "gradients/LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_elements"
    value {
      i: 159
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "LSTM_Caption_1/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Caption_1/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/LSTM_Caption_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/TensorListStack"
  input: "gradients/LSTM_Caption_1/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_2_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/mod"
  op: "FloorMod"
  input: "concat_2/axis"
  input: "gradients/concat_2_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\237\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\237\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_2_grad/mod"
  input: "gradients/concat_2_grad/Shape"
  input: "gradients/concat_2_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_2_grad/Slice"
  op: "Slice"
  input: "gradients/LSTM_Caption_1/rnn/transpose_grad/transpose"
  input: "gradients/concat_2_grad/ConcatOffset"
  input: "gradients/concat_2_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_2_grad/Slice_1"
  op: "Slice"
  input: "gradients/LSTM_Caption_1/rnn/transpose_grad/transpose"
  input: "gradients/concat_2_grad/ConcatOffset:1"
  input: "gradients/concat_2_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_2_grad/Slice"
  input: "^gradients/concat_2_grad/Slice_1"
}
node {
  name: "gradients/concat_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_2_grad/Slice"
  input: "^gradients/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_2_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_2_grad/Slice_1"
  input: "^gradients/concat_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_2_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/mod"
  op: "FloorMod"
  input: "concat_1/axis"
  input: "gradients/concat_1_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000P\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000O\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_1_grad/mod"
  input: "gradients/concat_1_grad/Shape"
  input: "gradients/concat_1_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_1_grad/Slice"
  op: "Slice"
  input: "gradients/concat_2_grad/tuple/control_dependency"
  input: "gradients/concat_1_grad/ConcatOffset"
  input: "gradients/concat_1_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_1_grad/Slice_1"
  op: "Slice"
  input: "gradients/concat_2_grad/tuple/control_dependency"
  input: "gradients/concat_1_grad/ConcatOffset:1"
  input: "gradients/concat_1_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_1_grad/Slice"
  input: "^gradients/concat_1_grad/Slice_1"
}
node {
  name: "gradients/concat_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_1_grad/Slice"
  input: "^gradients/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_1_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_1_grad/Slice_1"
  input: "^gradients/concat_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_1_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "LSTM_Video_1/rnn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/concat_2_grad/tuple/control_dependency_1"
  input: "gradients/LSTM_Video_1/rnn/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Shape"
  op: "Shape"
  input: "dropout_1/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dropout_1/Mul_grad/Shape"
  input: "gradients/dropout_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/concat_1_grad/tuple/control_dependency_1"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/dropout_1/Mul_grad/Mul"
  input: "gradients/dropout_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout_1/Mul_grad/Sum"
  input: "gradients/dropout_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/RealDiv"
  input: "gradients/concat_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dropout_1/Mul_grad/Mul_1"
  input: "gradients/dropout_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dropout_1/Mul_grad/Sum_1"
  input: "gradients/dropout_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dropout_1/Mul_grad/Reshape"
  input: "^gradients/dropout_1/Mul_grad/Reshape_1"
}
node {
  name: "gradients/dropout_1/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dropout_1/Mul_grad/Reshape"
  input: "^gradients/dropout_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dropout_1/Mul_grad/Reshape_1"
  input: "^gradients/dropout_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor"
  op: "TensorListFromTensor"
  input: "gradients/LSTM_Video_1/rnn/transpose_1_grad/transpose"
  input: "gradients/LSTM_Video_1/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor/element_shape"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000O\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dropout_1/RealDiv_grad/Shape"
  input: "gradients/dropout_1/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/dropout_1/Mul_grad/tuple/control_dependency"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients/dropout_1/RealDiv_grad/RealDiv"
  input: "gradients/dropout_1/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout_1/RealDiv_grad/Sum"
  input: "gradients/dropout_1/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Neg"
  op: "Neg"
  input: "embedding_lookup/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/dropout_1/RealDiv_grad/Neg"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/dropout_1/RealDiv_grad/RealDiv_1"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients/dropout_1/Mul_grad/tuple/control_dependency"
  input: "gradients/dropout_1/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients/dropout_1/RealDiv_grad/mul"
  input: "gradients/dropout_1/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dropout_1/RealDiv_grad/Sum_1"
  input: "gradients/dropout_1/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dropout_1/RealDiv_grad/Reshape"
  input: "^gradients/dropout_1/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients/dropout_1/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dropout_1/RealDiv_grad/Reshape"
  input: "^gradients/dropout_1/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dropout_1/RealDiv_grad/Reshape_1"
  input: "^gradients/dropout_1/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "LSTM_Video_1/rnn/while:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_8"
  op: "ZerosLike"
  input: "LSTM_Video_1/rnn/while:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_9"
  op: "ZerosLike"
  input: "LSTM_Video_1/rnn/while:7"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/zeros_like_10"
  op: "ZerosLike"
  input: "LSTM_Video_1/rnn/while:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_11"
  op: "ZerosLike"
  input: "LSTM_Video_1/rnn/while:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_12"
  op: "ZerosLike"
  input: "LSTM_Video_1/rnn/while:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/grad_counter"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Placeholder_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Const"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Mul_grad/Shape_1_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/dropout/Cast_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/dropout/Cast_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/dropout/Cast_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/dropout/RealDiv_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/dropout/RealDiv_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/dropout/RealDiv_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/RealDiv_grad/Shape_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/RealDiv_grad/Shape_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/RealDiv_grad/Shape_1_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/dropout/Sub_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/dropout/Sub_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/dropout/Sub_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Mul_2_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Mul_2_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Mul_2_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_2_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_2_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_2_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Tanh_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Tanh_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Tanh_1_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/dropout/Sub_grad/Shape_1_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/sub_grad/Shape_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/sub_grad/Shape_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/sub_grad/Shape_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/sub_grad/Shape_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/sub_grad/Shape_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/sub_grad/Shape_1_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Placeholder_2_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Placeholder_2_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Placeholder_2_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Tanh_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Tanh_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Tanh_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_1_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_1_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/Sigmoid_1_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/concat_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/concat_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/basic_lstm_cell/concat_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_FLOAT
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator/element_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape_0/accumulator/element_shape"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength_0/accumulator"
  op: "EmptyTensorList"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Const_1"
  input: "LSTM_Video_1/rnn/strided_slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape_type"
    value {
      type: DT_INT32
    }
  }
  experimental_type {
    type_id: TFT_PRODUCT
    args {
      type_id: TFT_ARRAY
      args {
        type_id: TFT_TENSOR
        args {
          type_id: TFT_INT32
        }
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad"
  op: "StatelessWhile"
  input: "gradients/LSTM_Video_1/rnn/while_grad/grad_counter"
  input: "LSTM_Video_1/rnn/strided_slice"
  input: "LSTM_Video_1/rnn/while"
  input: "gradients/LSTM_Video_1/rnn/TensorArrayV2Stack/TensorListStack_grad/TensorListFromTensor"
  input: "gradients/zeros_like_7"
  input: "gradients/zeros_like_8"
  input: "gradients/zeros_like_9"
  input: "gradients/zeros_like_10"
  input: "gradients/zeros_like_11"
  input: "gradients/zeros_like_12"
  input: "LSTM_Video_1/rnn/while:11"
  input: "LSTM_Video_1/rnn/while:12"
  input: "LSTM_Video_1/rnn/while:13"
  input: "LSTM_Video_1/rnn/while:14"
  input: "LSTM_Video_1/rnn/while:15"
  input: "LSTM_Video_1/rnn/while:16"
  input: "LSTM_Video_1/rnn/while:17"
  input: "LSTM_Video_1/rnn/while:18"
  input: "LSTM_Video_1/rnn/while:19"
  input: "LSTM_Video_1/rnn/while:20"
  input: "LSTM_Video_1/rnn/while:21"
  input: "LSTM_Video_1/rnn/while:22"
  input: "LSTM_Video_1/rnn/while:23"
  input: "LSTM_Video_1/rnn/while:24"
  input: "LSTM_Video_1/rnn/while:25"
  input: "LSTM_Video_1/rnn/while:26"
  input: "LSTM_Video_1/rnn/while:27"
  input: "LSTM_Video_1/rnn/while:28"
  input: "LSTM_Video_1/rnn/while:8"
  input: "LSTM_Video_1/rnn/while:29"
  input: "LSTM_Video_1/rnn/while:30"
  input: "LSTM_Video_1/rnn/while:31"
  attr {
    key: "T"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_FLOAT
        type: DT_VARIANT
        type: DT_VARIANT
        type: DT_VARIANT
      }
    }
  }
  attr {
    key: "_lower_using_switch_merge"
    value {
      b: true
    }
  }
  attr {
    key: "_num_original_outputs"
    value {
      i: 32
    }
  }
  attr {
    key: "_read_only_resource_inputs"
    value {
      list {
      }
    }
  }
  attr {
    key: "_stateful_parallelism"
    value {
      b: false
    }
  }
  attr {
    key: "body"
    value {
      func {
        name: "LSTM_Video_1_rnn_while_body_3648_grad_4580"
      }
    }
  }
  attr {
    key: "cond"
    value {
      func {
        name: "LSTM_Video_1_rnn_while_cond_3647_rewritten_grad_4912"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 500
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 500
          }
        }
        shape {
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 2000
          }
        }
        shape {
          dim {
            size: 2000
          }
        }
        shape {
          unknown_rank: true
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 2000
          }
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_1"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_2"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_3"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:3"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_4"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_5"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_6"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:6"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_7"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_8"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_9"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_10"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:10"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_11"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:11"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_12"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:12"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_13"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:13"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_14"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:14"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_15"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:15"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_16"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:16"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_17"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:17"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_18"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:18"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_19"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:19"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_20"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:20"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_21"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:21"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_22"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:22"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_23"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:23"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_24"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:24"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_25"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:25"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_26"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:26"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_27"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:27"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_28"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_29"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:29"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_30"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:30"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/Identity_31"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/LSTM_Video_1/rnn/while_grad:31"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/Identity_3"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/Identity_4"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/Identity_5"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/Identity_6"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/Identity_7"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/Identity_8"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/Identity_9"
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Identity_3"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Video_1/rnn/while_grad/Identity_3"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Identity_4"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Video_1/rnn/while_grad/Identity_4"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Identity_5"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Video_1/rnn/while_grad/Identity_5"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Identity_6"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_VARIANT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Video_1/rnn/while_grad/Identity_6"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Identity_7"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Video_1/rnn/while_grad/Identity_7"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/tuple/control_dependency_5"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Identity_8"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Video_1/rnn/while_grad/Identity_8"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/while_grad/tuple/control_dependency_6"
  op: "Identity"
  input: "gradients/LSTM_Video_1/rnn/while_grad/Identity_9"
  input: "^gradients/LSTM_Video_1/rnn/while_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/LSTM_Video_1/rnn/while_grad/Identity_9"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\237\000\000\000\001\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice"
  op: "Slice"
  input: "gradients/LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Shape"
  input: "gradients/LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice/begin"
  input: "gradients/LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/TensorListStack"
  op: "TensorListStack"
  input: "gradients/LSTM_Video_1/rnn/while_grad/tuple/control_dependency_3"
  input: "gradients/LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/Slice"
  attr {
    key: "element_dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_elements"
    value {
      i: 159
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "21\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 79
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/embedding_lookup_grad/Size"
  input: "gradients/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/embedding_lookup_grad/Const"
  input: "gradients/embedding_lookup_grad/strided_slice/stack"
  input: "gradients/embedding_lookup_grad/strided_slice/stack_1"
  input: "gradients/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "gradients/embedding_lookup_grad/ExpandDims"
  input: "gradients/embedding_lookup_grad/strided_slice"
  input: "gradients/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout_1/RealDiv_grad/tuple/control_dependency"
  input: "gradients/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "strided_slice"
  input: "gradients/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "LSTM_Video_1/rnn/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/LSTM_Video_1/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/LSTM_Video_1/rnn/TensorArrayUnstack/TensorListFromTensor_grad/TensorListStack"
  input: "gradients/LSTM_Video_1/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/concat_grad/mod"
  op: "FloorMod"
  input: "concat/axis"
  input: "gradients/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/concat_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000P\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000O\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "gradients/concat_grad/mod"
  input: "gradients/concat_grad/Shape"
  input: "gradients/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/concat_grad/Slice"
  op: "Slice"
  input: "gradients/LSTM_Video_1/rnn/transpose_grad/transpose"
  input: "gradients/concat_grad/ConcatOffset"
  input: "gradients/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_grad/Slice_1"
  op: "Slice"
  input: "gradients/LSTM_Video_1/rnn/transpose_grad/transpose"
  input: "gradients/concat_grad/ConcatOffset:1"
  input: "gradients/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/concat_grad/Slice"
  input: "^gradients/concat_grad/Slice_1"
}
node {
  name: "gradients/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/concat_grad/Slice"
  input: "^gradients/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "gradients/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/concat_grad/Slice_1"
  input: "^gradients/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "P\000\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/concat_grad/tuple/control_dependency"
  input: "gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/xw_plus_b_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/xw_plus_b_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Reshape_1_grad/Reshape"
  input: "^gradients/xw_plus_b_grad/BiasAddGrad"
}
node {
  name: "gradients/xw_plus_b_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Reshape_1_grad/Reshape"
  input: "^gradients/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Reshape_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/xw_plus_b_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/xw_plus_b_grad/BiasAddGrad"
  input: "^gradients/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/xw_plus_b_grad/tuple/control_dependency"
  input: "xw_plus_b/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout/Mul"
  input: "gradients/xw_plus_b_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/xw_plus_b/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/xw_plus_b/MatMul_grad/MatMul"
  input: "^gradients/xw_plus_b/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/xw_plus_b/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/xw_plus_b/MatMul_grad/MatMul"
  input: "^gradients/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/xw_plus_b/MatMul_grad/MatMul_1"
  input: "^gradients/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "beta1_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta1_power"
    }
  }
}
node {
  name: "beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "beta1_power/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta2_power"
    }
  }
}
node {
  name: "beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "beta2_power/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam/Initializer/zeros"
  op: "Fill"
  input: "Im2Cap/W_im2cap/Adam/Initializer/zeros/shape_as_tensor"
  input: "Im2Cap/W_im2cap/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Im2Cap/W_im2cap/Adam"
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Im2Cap/W_im2cap/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam/Assign"
  op: "AssignVariableOp"
  input: "Im2Cap/W_im2cap/Adam"
  input: "Im2Cap/W_im2cap/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Im2Cap/W_im2cap/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Im2Cap/W_im2cap/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Im2Cap/W_im2cap/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Im2Cap/W_im2cap/Adam_1"
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Im2Cap/W_im2cap/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Im2Cap/W_im2cap/Adam_1"
  input: "Im2Cap/W_im2cap/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Im2Cap/W_im2cap/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Im2Cap/W_im2cap/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/b_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 500
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/b_im2cap"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Im2Cap/b_im2cap/Adam"
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Im2Cap/b_im2cap/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/b_im2cap"
      }
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Adam/Assign"
  op: "AssignVariableOp"
  input: "Im2Cap/b_im2cap/Adam"
  input: "Im2Cap/b_im2cap/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Im2Cap/b_im2cap/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/b_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/b_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 500
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/b_im2cap"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Im2Cap/b_im2cap/Adam_1"
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Im2Cap/b_im2cap/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/b_im2cap"
      }
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Im2Cap/b_im2cap/Adam_1"
  input: "Im2Cap/b_im2cap/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Im2Cap/b_im2cap/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Im2Cap/b_im2cap/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/b_im2cap"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\364\001\000\00021\000\000"
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam/Initializer/zeros"
  op: "Fill"
  input: "Hid2Vocab/W_H2vocab/Adam/Initializer/zeros/shape_as_tensor"
  input: "Hid2Vocab/W_H2vocab/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 500
        }
        dim {
          size: 12594
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Hid2Vocab/W_H2vocab/Adam"
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Hid2Vocab/W_H2vocab/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam/Assign"
  op: "AssignVariableOp"
  input: "Hid2Vocab/W_H2vocab/Adam"
  input: "Hid2Vocab/W_H2vocab/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Hid2Vocab/W_H2vocab/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\364\001\000\00021\000\000"
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Hid2Vocab/W_H2vocab/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Hid2Vocab/W_H2vocab/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 500
        }
        dim {
          size: 12594
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Hid2Vocab/W_H2vocab/Adam_1"
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Hid2Vocab/W_H2vocab/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Hid2Vocab/W_H2vocab/Adam_1"
  input: "Hid2Vocab/W_H2vocab/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Hid2Vocab/W_H2vocab/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Hid2Vocab/W_H2vocab/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12594
      }
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam/Initializer/zeros"
  op: "Fill"
  input: "Hid2Vocab/b_H2vocab/Adam/Initializer/zeros/shape_as_tensor"
  input: "Hid2Vocab/b_H2vocab/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12594
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Hid2Vocab/b_H2vocab/Adam"
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Hid2Vocab/b_H2vocab/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam/Assign"
  op: "AssignVariableOp"
  input: "Hid2Vocab/b_H2vocab/Adam"
  input: "Hid2Vocab/b_H2vocab/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Hid2Vocab/b_H2vocab/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12594
      }
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Hid2Vocab/b_H2vocab/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Hid2Vocab/b_H2vocab/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12594
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Hid2Vocab/b_H2vocab/Adam_1"
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Hid2Vocab/b_H2vocab/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Hid2Vocab/b_H2vocab/Adam_1"
  input: "Hid2Vocab/b_H2vocab/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Hid2Vocab/b_H2vocab/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Hid2Vocab/b_H2vocab/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "21\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam/Initializer/zeros"
  op: "Fill"
  input: "Word_Vectors/Word_embedding/Adam/Initializer/zeros/shape_as_tensor"
  input: "Word_Vectors/Word_embedding/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12594
        }
        dim {
          size: 500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Word_Vectors/Word_embedding/Adam"
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Word_Vectors/Word_embedding/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam/Assign"
  op: "AssignVariableOp"
  input: "Word_Vectors/Word_embedding/Adam"
  input: "Word_Vectors/Word_embedding/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Word_Vectors/Word_embedding/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "21\000\000\364\001\000\000"
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Word_Vectors/Word_embedding/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Word_Vectors/Word_embedding/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12594
        }
        dim {
          size: 500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Word_Vectors/Word_embedding/Adam_1"
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Word_Vectors/Word_embedding/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Word_Vectors/Word_embedding/Adam_1"
  input: "Word_Vectors/Word_embedding/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Word_Vectors/Word_embedding/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Word_Vectors/Word_embedding/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\320\007\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam"
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\320\007\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1"
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2000
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam"
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2000
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1"
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\334\005\000\000\320\007\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1500
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam"
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\334\005\000\000\320\007\000\000"
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1500
        }
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1"
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2000
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam"
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2000
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1"
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_Im2Cap/W_im2cap/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Im2Cap/W_im2cap/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Im2Cap/W_im2cap/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Im2Cap/W_im2cap"
  input: "Im2Cap/W_im2cap/Adam"
  input: "Im2Cap/W_im2cap/Adam_1"
  input: "Adam/update_Im2Cap/W_im2cap/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_Im2Cap/W_im2cap/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/W_im2cap"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Im2Cap/b_im2cap/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Im2Cap/b_im2cap/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Im2Cap/b_im2cap/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Im2Cap/b_im2cap"
  input: "Im2Cap/b_im2cap/Adam"
  input: "Im2Cap/b_im2cap/Adam_1"
  input: "Adam/update_Im2Cap/b_im2cap/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_Im2Cap/b_im2cap/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/xw_plus_b_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Im2Cap/b_im2cap"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Hid2Vocab/W_H2vocab/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Hid2Vocab/W_H2vocab/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Hid2Vocab/W_H2vocab/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Hid2Vocab/W_H2vocab"
  input: "Hid2Vocab/W_H2vocab/Adam"
  input: "Hid2Vocab/W_H2vocab/Adam_1"
  input: "Adam/update_Hid2Vocab/W_H2vocab/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_Hid2Vocab/W_H2vocab/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/xw_plus_b_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Hid2Vocab/b_H2vocab/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Hid2Vocab/b_H2vocab/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Hid2Vocab/b_H2vocab/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Hid2Vocab/b_H2vocab"
  input: "Hid2Vocab/b_H2vocab/Adam"
  input: "Hid2Vocab/b_H2vocab/Adam_1"
  input: "Adam/update_Hid2Vocab/b_H2vocab/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_Hid2Vocab/b_H2vocab/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/xw_plus_b_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/b_H2vocab"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/Unique"
  op: "Unique"
  input: "gradients/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/Shape"
  op: "Shape"
  input: "Adam/update_Word_Vectors/Word_embedding/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/strided_slice"
  op: "StridedSlice"
  input: "Adam/update_Word_Vectors/Word_embedding/Shape"
  input: "Adam/update_Word_Vectors/Word_embedding/strided_slice/stack"
  input: "Adam/update_Word_Vectors/Word_embedding/strided_slice/stack_1"
  input: "Adam/update_Word_Vectors/Word_embedding/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "gradients/embedding_lookup_grad/Reshape"
  input: "Adam/update_Word_Vectors/Word_embedding/Unique:1"
  input: "Adam/update_Word_Vectors/Word_embedding/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tnumsegments"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/sub"
  op: "Sub"
  input: "Adam/update_Word_Vectors/Word_embedding/sub/x"
  input: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/Sqrt"
  op: "Sqrt"
  input: "Adam/update_Word_Vectors/Word_embedding/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/mul"
  op: "Mul"
  input: "Adam/learning_rate"
  input: "Adam/update_Word_Vectors/Word_embedding/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/sub_1"
  op: "Sub"
  input: "Adam/update_Word_Vectors/Word_embedding/sub_1/x"
  input: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/truediv"
  op: "RealDiv"
  input: "Adam/update_Word_Vectors/Word_embedding/mul"
  input: "Adam/update_Word_Vectors/Word_embedding/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/sub_2"
  op: "Sub"
  input: "Adam/update_Word_Vectors/Word_embedding/sub_2/x"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/mul_1"
  op: "Mul"
  input: "Adam/update_Word_Vectors/Word_embedding/UnsortedSegmentSum"
  input: "Adam/update_Word_Vectors/Word_embedding/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "Word_Vectors/Word_embedding/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/mul_2"
  op: "Mul"
  input: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_2"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/AssignVariableOp"
  op: "AssignVariableOp"
  input: "Word_Vectors/Word_embedding/Adam"
  input: "Adam/update_Word_Vectors/Word_embedding/mul_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "Word_Vectors/Word_embedding/Adam"
  input: "^Adam/update_Word_Vectors/Word_embedding/AssignVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/ResourceScatterAdd"
  op: "ResourceScatterAdd"
  input: "Word_Vectors/Word_embedding/Adam"
  input: "Adam/update_Word_Vectors/Word_embedding/Unique"
  input: "Adam/update_Word_Vectors/Word_embedding/mul_1"
  input: "^Adam/update_Word_Vectors/Word_embedding/AssignVariableOp"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "Word_Vectors/Word_embedding/Adam"
  input: "^Adam/update_Word_Vectors/Word_embedding/AssignVariableOp"
  input: "^Adam/update_Word_Vectors/Word_embedding/ResourceScatterAdd"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/mul_3"
  op: "Mul"
  input: "Adam/update_Word_Vectors/Word_embedding/UnsortedSegmentSum"
  input: "Adam/update_Word_Vectors/Word_embedding/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/sub_3"
  op: "Sub"
  input: "Adam/update_Word_Vectors/Word_embedding/sub_3/x"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/mul_4"
  op: "Mul"
  input: "Adam/update_Word_Vectors/Word_embedding/mul_3"
  input: "Adam/update_Word_Vectors/Word_embedding/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "Word_Vectors/Word_embedding/Adam_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/mul_5"
  op: "Mul"
  input: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_5"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Word_Vectors/Word_embedding/Adam_1"
  input: "Adam/update_Word_Vectors/Word_embedding/mul_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "Word_Vectors/Word_embedding/Adam_1"
  input: "^Adam/update_Word_Vectors/Word_embedding/AssignVariableOp_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/ResourceScatterAdd_1"
  op: "ResourceScatterAdd"
  input: "Word_Vectors/Word_embedding/Adam_1"
  input: "Adam/update_Word_Vectors/Word_embedding/Unique"
  input: "Adam/update_Word_Vectors/Word_embedding/mul_4"
  input: "^Adam/update_Word_Vectors/Word_embedding/AssignVariableOp_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "Word_Vectors/Word_embedding/Adam_1"
  input: "^Adam/update_Word_Vectors/Word_embedding/AssignVariableOp_1"
  input: "^Adam/update_Word_Vectors/Word_embedding/ResourceScatterAdd_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/Sqrt_1"
  op: "Sqrt"
  input: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/mul_6"
  op: "Mul"
  input: "Adam/update_Word_Vectors/Word_embedding/truediv"
  input: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/add"
  op: "AddV2"
  input: "Adam/update_Word_Vectors/Word_embedding/Sqrt_1"
  input: "Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/truediv_1"
  op: "RealDiv"
  input: "Adam/update_Word_Vectors/Word_embedding/mul_6"
  input: "Adam/update_Word_Vectors/Word_embedding/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/AssignSubVariableOp"
  op: "AssignSubVariableOp"
  input: "Word_Vectors/Word_embedding"
  input: "Adam/update_Word_Vectors/Word_embedding/truediv_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "Word_Vectors/Word_embedding"
  input: "^Adam/update_Word_Vectors/Word_embedding/AssignSubVariableOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_Word_Vectors/Word_embedding/group_deps"
  op: "NoOp"
  input: "^Adam/update_Word_Vectors/Word_embedding/AssignSubVariableOp"
  input: "^Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_4"
  input: "^Adam/update_Word_Vectors/Word_embedding/ReadVariableOp_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Word_Vectors/Word_embedding"
      }
    }
  }
}
node {
  name: "Adam/update_LSTM_Video/rnn/basic_lstm_cell/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_LSTM_Video/rnn/basic_lstm_cell/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_LSTM_Video/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "Adam/update_LSTM_Video/rnn/basic_lstm_cell/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_LSTM_Video/rnn/basic_lstm_cell/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/LSTM_Video_1/rnn/while_grad/tuple/control_dependency_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_LSTM_Video/rnn/basic_lstm_cell/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_LSTM_Video/rnn/basic_lstm_cell/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_LSTM_Video/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1"
  input: "Adam/update_LSTM_Video/rnn/basic_lstm_cell/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_LSTM_Video/rnn/basic_lstm_cell/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/LSTM_Video_1/rnn/while_grad/tuple/control_dependency_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Video/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_LSTM_Caption/rnn/basic_lstm_cell/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_LSTM_Caption/rnn/basic_lstm_cell/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_LSTM_Caption/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "Adam/update_LSTM_Caption/rnn/basic_lstm_cell/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_LSTM_Caption/rnn/basic_lstm_cell/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/tuple/control_dependency_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_LSTM_Caption/rnn/basic_lstm_cell/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_LSTM_Caption/rnn/basic_lstm_cell/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_LSTM_Caption/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1"
  input: "Adam/update_LSTM_Caption/rnn/basic_lstm_cell/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_LSTM_Caption/rnn/basic_lstm_cell/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/LSTM_Caption_1/rnn/while_grad/tuple/control_dependency_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@LSTM_Caption/rnn/basic_lstm_cell/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/update_Hid2Vocab/W_H2vocab/ResourceApplyAdam"
  input: "^Adam/update_Hid2Vocab/b_H2vocab/ResourceApplyAdam"
  input: "^Adam/update_Im2Cap/W_im2cap/ResourceApplyAdam"
  input: "^Adam/update_Im2Cap/b_im2cap/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Caption/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Caption/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Video/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Video/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  input: "^Adam/update_Word_Vectors/Word_embedding/group_deps"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/update_Hid2Vocab/W_H2vocab/ResourceApplyAdam"
  input: "^Adam/update_Hid2Vocab/b_H2vocab/ResourceApplyAdam"
  input: "^Adam/update_Im2Cap/W_im2cap/ResourceApplyAdam"
  input: "^Adam/update_Im2Cap/b_im2cap/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Caption/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Caption/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Video/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Video/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  input: "^Adam/update_Word_Vectors/Word_embedding/group_deps"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/update_Hid2Vocab/W_H2vocab/ResourceApplyAdam"
  input: "^Adam/update_Hid2Vocab/b_H2vocab/ResourceApplyAdam"
  input: "^Adam/update_Im2Cap/W_im2cap/ResourceApplyAdam"
  input: "^Adam/update_Im2Cap/b_im2cap/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Caption/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Caption/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Video/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Video/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  input: "^Adam/update_Word_Vectors/Word_embedding/group_deps"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "Adam/ReadVariableOp_2"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_Hid2Vocab/W_H2vocab/ResourceApplyAdam"
  input: "^Adam/update_Hid2Vocab/b_H2vocab/ResourceApplyAdam"
  input: "^Adam/update_Im2Cap/W_im2cap/ResourceApplyAdam"
  input: "^Adam/update_Im2Cap/b_im2cap/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Caption/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Caption/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Video/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Video/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  input: "^Adam/update_Word_Vectors/Word_embedding/group_deps"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Hid2Vocab/W_H2vocab"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam"
  op: "NoOp"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_Hid2Vocab/W_H2vocab/ResourceApplyAdam"
  input: "^Adam/update_Hid2Vocab/b_H2vocab/ResourceApplyAdam"
  input: "^Adam/update_Im2Cap/W_im2cap/ResourceApplyAdam"
  input: "^Adam/update_Im2Cap/b_im2cap/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Caption/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Caption/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Video/rnn/basic_lstm_cell/bias/ResourceApplyAdam"
  input: "^Adam/update_LSTM_Video/rnn/basic_lstm_cell/kernel/ResourceApplyAdam"
  input: "^Adam/update_Word_Vectors/Word_embedding/group_deps"
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 29
          }
        }
        string_val: "Hid2Vocab/W_H2vocab"
        string_val: "Hid2Vocab/W_H2vocab/Adam"
        string_val: "Hid2Vocab/W_H2vocab/Adam_1"
        string_val: "Hid2Vocab/b_H2vocab"
        string_val: "Hid2Vocab/b_H2vocab/Adam"
        string_val: "Hid2Vocab/b_H2vocab/Adam_1"
        string_val: "Im2Cap/W_im2cap"
        string_val: "Im2Cap/W_im2cap/Adam"
        string_val: "Im2Cap/W_im2cap/Adam_1"
        string_val: "Im2Cap/b_im2cap"
        string_val: "Im2Cap/b_im2cap/Adam"
        string_val: "Im2Cap/b_im2cap/Adam_1"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/bias"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/kernel"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/bias"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/kernel"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "Word_Vectors/Word_embedding"
        string_val: "Word_Vectors/Word_embedding/Adam"
        string_val: "Word_Vectors/Word_embedding/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 29
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Hid2Vocab/W_H2vocab/Read/ReadVariableOp"
  input: "Hid2Vocab/W_H2vocab/Adam/Read/ReadVariableOp"
  input: "Hid2Vocab/W_H2vocab/Adam_1/Read/ReadVariableOp"
  input: "Hid2Vocab/b_H2vocab/Read/ReadVariableOp"
  input: "Hid2Vocab/b_H2vocab/Adam/Read/ReadVariableOp"
  input: "Hid2Vocab/b_H2vocab/Adam_1/Read/ReadVariableOp"
  input: "Im2Cap/W_im2cap/Read/ReadVariableOp"
  input: "Im2Cap/W_im2cap/Adam/Read/ReadVariableOp"
  input: "Im2Cap/W_im2cap/Adam_1/Read/ReadVariableOp"
  input: "Im2Cap/b_im2cap/Read/ReadVariableOp"
  input: "Im2Cap/b_im2cap/Adam/Read/ReadVariableOp"
  input: "Im2Cap/b_im2cap/Adam_1/Read/ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Read/ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam/Read/ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1/Read/ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Read/ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam/Read/ReadVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1/Read/ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Read/ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam/Read/ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1/Read/ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Read/ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam/Read/ReadVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1/Read/ReadVariableOp"
  input: "Word_Vectors/Word_embedding/Read/ReadVariableOp"
  input: "Word_Vectors/Word_embedding/Adam/Read/ReadVariableOp"
  input: "Word_Vectors/Word_embedding/Adam_1/Read/ReadVariableOp"
  input: "beta1_power/Read/ReadVariableOp"
  input: "beta2_power/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 29
          }
        }
        string_val: "Hid2Vocab/W_H2vocab"
        string_val: "Hid2Vocab/W_H2vocab/Adam"
        string_val: "Hid2Vocab/W_H2vocab/Adam_1"
        string_val: "Hid2Vocab/b_H2vocab"
        string_val: "Hid2Vocab/b_H2vocab/Adam"
        string_val: "Hid2Vocab/b_H2vocab/Adam_1"
        string_val: "Im2Cap/W_im2cap"
        string_val: "Im2Cap/W_im2cap/Adam"
        string_val: "Im2Cap/W_im2cap/Adam_1"
        string_val: "Im2Cap/b_im2cap"
        string_val: "Im2Cap/b_im2cap/Adam"
        string_val: "Im2Cap/b_im2cap/Adam_1"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/bias"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/kernel"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/bias"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/kernel"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam"
        string_val: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1"
        string_val: "Word_Vectors/Word_embedding"
        string_val: "Word_Vectors/Word_embedding/Adam"
        string_val: "Word_Vectors/Word_embedding/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 29
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "Hid2Vocab/W_H2vocab"
  input: "save/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Hid2Vocab/W_H2vocab/Adam"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "Hid2Vocab/W_H2vocab/Adam_1"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "Hid2Vocab/b_H2vocab"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "Hid2Vocab/b_H2vocab/Adam"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "Hid2Vocab/b_H2vocab/Adam_1"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "Im2Cap/W_im2cap"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "Im2Cap/W_im2cap/Adam"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "Im2Cap/W_im2cap/Adam_1"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "Im2Cap/b_im2cap"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "Im2Cap/b_im2cap/Adam"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "Im2Cap/b_im2cap/Adam_1"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/bias/Adam_1"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "LSTM_Caption/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/bias/Adam_1"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "LSTM_Video/rnn/basic_lstm_cell/kernel/Adam_1"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "Word_Vectors/Word_embedding"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "Word_Vectors/Word_embedding/Adam"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "Word_Vectors/Word_embedding/Adam_1"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: false
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
}
library {
  function {
    signature {
      name: "LSTM_Caption_1_rnn_while_body_3836_rewritten"
      input_arg {
        name: "lstm_caption_1_rnn_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_caption_1_rnn_strided_slice_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_caption_1_rnn_minimum_0"
        type: DT_INT32
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "basic_lstm_cell_biasadd_lstm_caption_rnn_basic_lstm_cell_bias_read_identity_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "sub_dropout_keep_probability_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "tensorlistpushback_gradients_lstm_caption_1_rnn_while_grad_placeholder_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_1_gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_mul_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_2_gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_mul_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_3_gradients_lstm_caption_1_rnn_while_grad_dropout_cast_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_4_gradients_lstm_caption_1_rnn_while_grad_dropout_realdiv_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_5_gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_realdiv_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_6_gradients_lstm_caption_1_rnn_while_grad_dropout_sub_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_7_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_mul_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_8_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_sigmoid_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_9_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_tanh_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_10_gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_sub_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_11_gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_sub_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_12_gradients_lstm_caption_1_rnn_while_grad_gradients_sub_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_13_gradients_lstm_caption_1_rnn_while_grad_gradients_sub_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_14_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_sigmoid_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_15_gradients_lstm_caption_1_rnn_while_grad_placeholder_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_16_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_tanh_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_17_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_sigmoid_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_18_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_concat_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_19_gradients_lstm_caption_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_20_gradients_lstm_caption_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_0_accumulator"
        type: DT_VARIANT
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "lstm_caption_1_rnn_strided_slice"
        type: DT_INT32
      }
      output_arg {
        name: "add"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "basic_lstm_cell_add_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "basic_lstm_cell_mul_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "lstm_caption_1_rnn_minimum"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "basic_lstm_cell_biasadd_lstm_caption_rnn_basic_lstm_cell_bias_read_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "sub_dropout_keep_probability"
        type: DT_FLOAT
      }
      output_arg {
        name: "tensorlistpushback"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_6"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_7"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_8"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_9"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_10"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_11"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_12"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_13"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_14"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_15"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_16"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_17"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_18"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_19"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_20"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\350\003\000\000"
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/concat/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/concat"
      op: "ConcatV2"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "placeholder_3"
      input: "basic_lstm_cell/concat/axis:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/MatMul"
      op: "MatMul"
      input: "basic_lstm_cell/concat:output:0"
      input: "basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/BiasAdd"
      op: "BiasAdd"
      input: "basic_lstm_cell/MatMul:product:0"
      input: "basic_lstm_cell_biasadd_lstm_caption_rnn_basic_lstm_cell_bias_read_identity_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/split"
      op: "Split"
      input: "basic_lstm_cell/Const:output:0"
      input: "basic_lstm_cell/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Add"
      op: "AddV2"
      input: "basic_lstm_cell/split:output:2"
      input: "basic_lstm_cell/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid"
      op: "Sigmoid"
      input: "basic_lstm_cell/Add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul"
      op: "Mul"
      input: "placeholder_2"
      input: "basic_lstm_cell/Sigmoid:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid_1"
      op: "Sigmoid"
      input: "basic_lstm_cell/split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Tanh"
      op: "Tanh"
      input: "basic_lstm_cell/split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul_1"
      op: "Mul"
      input: "basic_lstm_cell/Sigmoid_1:y:0"
      input: "basic_lstm_cell/Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Add_1"
      op: "AddV2"
      input: "basic_lstm_cell/Mul:z:0"
      input: "basic_lstm_cell/Mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Tanh_1"
      op: "Tanh"
      input: "basic_lstm_cell/Add_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid_2"
      op: "Sigmoid"
      input: "basic_lstm_cell/split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul_2"
      op: "Mul"
      input: "basic_lstm_cell/Tanh_1:y:0"
      input: "basic_lstm_cell/Sigmoid_2:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sub/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "sub"
      op: "Sub"
      input: "sub/x:output:0"
      input: "sub_dropout_keep_probability_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "dropout/Sub"
      op: "Sub"
      input: "dropout/Const:output:0"
      input: "sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/RealDiv"
      op: "RealDiv"
      input: "basic_lstm_cell/Mul_2:z:0"
      input: "dropout/Sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "dropout/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dropout/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "dropout/GreaterEqual"
      op: "GreaterEqual"
      input: "dropout/random_uniform/RandomUniform:output:0"
      input: "sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Cast"
      op: "Cast"
      input: "dropout/GreaterEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "dropout/Mul"
      op: "Mul"
      input: "dropout/RealDiv:z:0"
      input: "dropout/Cast:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "placeholder"
      input: "dropout/Mul:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_0"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "lstm_caption_1_rnn_while_loop_counter"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack"
      op: "TensorListPushBack"
      input: "tensorlistpushback_gradients_lstm_caption_1_rnn_while_grad_placeholder_0_accumulator"
      input: "placeholder"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Shape"
      op: "Shape"
      input: "dropout/RealDiv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Shape_1"
      op: "Shape"
      input: "dropout/Cast:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack_1"
      op: "TensorListPushBack"
      input: "tensorlistpushback_1_gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_mul_grad_shape_0_accumulator"
      input: "gradients/dropout/Mul_grad/Shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_2"
      op: "TensorListPushBack"
      input: "tensorlistpushback_2_gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_mul_grad_shape_1_0_accumulator"
      input: "gradients/dropout/Mul_grad/Shape_1:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_3"
      op: "TensorListPushBack"
      input: "tensorlistpushback_3_gradients_lstm_caption_1_rnn_while_grad_dropout_cast_0_accumulator"
      input: "dropout/Cast:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_4"
      op: "TensorListPushBack"
      input: "tensorlistpushback_4_gradients_lstm_caption_1_rnn_while_grad_dropout_realdiv_0_accumulator"
      input: "dropout/RealDiv:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Shape_1"
      op: "Shape"
      input: "dropout/Sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack_5"
      op: "TensorListPushBack"
      input: "tensorlistpushback_5_gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_realdiv_grad_shape_1_0_accumulator"
      input: "gradients/dropout/RealDiv_grad/Shape_1:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_6"
      op: "TensorListPushBack"
      input: "tensorlistpushback_6_gradients_lstm_caption_1_rnn_while_grad_dropout_sub_0_accumulator"
      input: "dropout/Sub:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_7"
      op: "TensorListPushBack"
      input: "tensorlistpushback_7_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_mul_2_0_accumulator"
      input: "basic_lstm_cell/Mul_2:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_8"
      op: "TensorListPushBack"
      input: "tensorlistpushback_8_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_sigmoid_2_0_accumulator"
      input: "basic_lstm_cell/Sigmoid_2:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_9"
      op: "TensorListPushBack"
      input: "tensorlistpushback_9_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_tanh_1_0_accumulator"
      input: "basic_lstm_cell/Tanh_1:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Shape"
      op: "Shape"
      input: "dropout/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Shape_1"
      op: "Shape"
      input: "sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack_10"
      op: "TensorListPushBack"
      input: "tensorlistpushback_10_gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_sub_grad_shape_0_accumulator"
      input: "gradients/dropout/Sub_grad/Shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_11"
      op: "TensorListPushBack"
      input: "tensorlistpushback_11_gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_sub_grad_shape_1_0_accumulator"
      input: "gradients/dropout/Sub_grad/Shape_1:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Shape"
      op: "Shape"
      input: "sub/x:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Shape_1"
      op: "Shape"
      input: "sub_dropout_keep_probability_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack_12"
      op: "TensorListPushBack"
      input: "tensorlistpushback_12_gradients_lstm_caption_1_rnn_while_grad_gradients_sub_grad_shape_0_accumulator"
      input: "gradients/sub_grad/Shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_13"
      op: "TensorListPushBack"
      input: "tensorlistpushback_13_gradients_lstm_caption_1_rnn_while_grad_gradients_sub_grad_shape_1_0_accumulator"
      input: "gradients/sub_grad/Shape_1:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_14"
      op: "TensorListPushBack"
      input: "tensorlistpushback_14_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_sigmoid_0_accumulator"
      input: "basic_lstm_cell/Sigmoid:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_15"
      op: "TensorListPushBack"
      input: "tensorlistpushback_15_gradients_lstm_caption_1_rnn_while_grad_placeholder_2_0_accumulator"
      input: "placeholder_2"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_16"
      op: "TensorListPushBack"
      input: "tensorlistpushback_16_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_tanh_0_accumulator"
      input: "basic_lstm_cell/Tanh:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_17"
      op: "TensorListPushBack"
      input: "tensorlistpushback_17_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_sigmoid_1_0_accumulator"
      input: "basic_lstm_cell/Sigmoid_1:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_18"
      op: "TensorListPushBack"
      input: "tensorlistpushback_18_gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_concat_0_accumulator"
      input: "basic_lstm_cell/concat:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength"
      op: "TensorListLength"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape"
      op: "TensorListElementShape"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack_19"
      op: "TensorListPushBack"
      input: "tensorlistpushback_19_gradients_lstm_caption_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape_0_accumulator"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape:element_shape:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_20"
      op: "TensorListPushBack"
      input: "tensorlistpushback_20_gradients_lstm_caption_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_0_accumulator"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength:length:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    ret {
      key: "add"
      value: "add_0:z:0"
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "basic_lstm_cell_add_1"
      value: "basic_lstm_cell/Add_1:z:0"
    }
    ret {
      key: "basic_lstm_cell_biasadd_lstm_caption_rnn_basic_lstm_cell_bias_read_identity"
      value: "basic_lstm_cell_biasadd_lstm_caption_rnn_basic_lstm_cell_bias_read_identity_0"
    }
    ret {
      key: "basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity"
      value: "basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity_0"
    }
    ret {
      key: "basic_lstm_cell_mul_2"
      value: "basic_lstm_cell/Mul_2:z:0"
    }
    ret {
      key: "lstm_caption_1_rnn_minimum"
      value: "lstm_caption_1_rnn_minimum_0"
    }
    ret {
      key: "lstm_caption_1_rnn_strided_slice"
      value: "lstm_caption_1_rnn_strided_slice_0"
    }
    ret {
      key: "sub_dropout_keep_probability"
      value: "sub_dropout_keep_probability_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    ret {
      key: "tensorlistpushback"
      value: "TensorListPushBack:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_1"
      value: "TensorListPushBack_1:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_10"
      value: "TensorListPushBack_10:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_11"
      value: "TensorListPushBack_11:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_12"
      value: "TensorListPushBack_12:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_13"
      value: "TensorListPushBack_13:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_14"
      value: "TensorListPushBack_14:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_15"
      value: "TensorListPushBack_15:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_16"
      value: "TensorListPushBack_16:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_17"
      value: "TensorListPushBack_17:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_18"
      value: "TensorListPushBack_18:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_19"
      value: "TensorListPushBack_19:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_2"
      value: "TensorListPushBack_2:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_20"
      value: "TensorListPushBack_20:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_3"
      value: "TensorListPushBack_3:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_4"
      value: "TensorListPushBack_4:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_5"
      value: "TensorListPushBack_5:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_6"
      value: "TensorListPushBack_6:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_7"
      value: "TensorListPushBack_7:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_8"
      value: "TensorListPushBack_8:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_9"
      value: "TensorListPushBack_9:output_handle:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1500
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "LSTM_Caption_1_rnn_while_cond_3835"
      input_arg {
        name: "lstm_caption_1_rnn_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_caption_1_rnn_strided_slice"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "less_lstm_caption_1_rnn_minimum"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_caption_1_rnn_while_cond_3835___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_caption_1_rnn_while_cond_3835___redundant_placeholder1"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_caption_1_rnn_while_cond_3835___redundant_placeholder2"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_caption_1_rnn_while_cond_3835___redundant_placeholder3"
        type: DT_FLOAT
      }
      output_arg {
        name: "logicaland"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "less_lstm_caption_1_rnn_minimum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Less_1"
      op: "Less"
      input: "lstm_caption_1_rnn_while_loop_counter"
      input: "lstm_caption_1_rnn_strided_slice"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "LogicalAnd"
      op: "LogicalAnd"
      input: "Less_1:z:0"
      input: "Less:z:0"
    }
    ret {
      key: "logicaland"
      value: "LogicalAnd:z:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "LSTM_Video_1_rnn_while_cond_3647"
      input_arg {
        name: "lstm_video_1_rnn_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_video_1_rnn_strided_slice"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "less_lstm_video_1_rnn_minimum"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_video_1_rnn_while_cond_3647___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_video_1_rnn_while_cond_3647___redundant_placeholder1"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_video_1_rnn_while_cond_3647___redundant_placeholder2"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_video_1_rnn_while_cond_3647___redundant_placeholder3"
        type: DT_FLOAT
      }
      output_arg {
        name: "logicaland"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "less_lstm_video_1_rnn_minimum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Less_1"
      op: "Less"
      input: "lstm_video_1_rnn_while_loop_counter"
      input: "lstm_video_1_rnn_strided_slice"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "LogicalAnd"
      op: "LogicalAnd"
      input: "Less_1:z:0"
      input: "Less:z:0"
    }
    ret {
      key: "logicaland"
      value: "LogicalAnd:z:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "LSTM_Video_1_rnn_while_cond_3647_rewritten"
      input_arg {
        name: "lstm_video_1_rnn_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_video_1_rnn_strided_slice"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "less_lstm_video_1_rnn_minimum"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_video_1_rnn_while_cond_3647___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_video_1_rnn_while_cond_3647___redundant_placeholder1"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_video_1_rnn_while_cond_3647___redundant_placeholder2"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_video_1_rnn_while_cond_3647___redundant_placeholder3"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_placeholder_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_gradients_dropout_mul_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_gradients_dropout_mul_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_dropout_cast_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_dropout_realdiv_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_gradients_dropout_realdiv_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_dropout_sub_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_mul_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_sigmoid_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_tanh_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_gradients_dropout_sub_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_gradients_dropout_sub_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_gradients_sub_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_gradients_sub_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_sigmoid_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_placeholder_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_tanh_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_sigmoid_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_concat_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_video_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_0_accumulator"
        type: DT_VARIANT
      }
      output_arg {
        name: "logicaland"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "less_lstm_video_1_rnn_minimum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Less_1"
      op: "Less"
      input: "lstm_video_1_rnn_while_loop_counter"
      input: "lstm_video_1_rnn_strided_slice"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "LogicalAnd"
      op: "LogicalAnd"
      input: "Less_1:z:0"
      input: "Less:z:0"
    }
    ret {
      key: "logicaland"
      value: "LogicalAnd:z:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "LSTM_Video_1_rnn_while_body_3648_grad_4580"
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_2"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_7"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_8"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_9"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_mul_grad_broadcastgradientargs_gradients_dropout_mul_grad_shape"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_mul_grad_broadcastgradientargs_gradients_dropout_mul_grad_shape_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_mul_grad_mul_dropout_cast"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_mul_grad_mul_1_dropout_realdiv"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_realdiv_grad_broadcastgradientargs_gradients_dropout_realdiv_grad_shape_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_realdiv_grad_realdiv_dropout_sub"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_realdiv_grad_neg_basic_lstm_cell_mul_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_2_grad_mul_basic_lstm_cell_sigmoid_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_2_grad_mul_1_basic_lstm_cell_tanh_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_sub_grad_broadcastgradientargs_gradients_dropout_sub_grad_shape"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_sub_grad_broadcastgradientargs_gradients_dropout_sub_grad_shape_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_sub_grad_broadcastgradientargs_gradients_sub_grad_shape"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_sub_grad_broadcastgradientargs_gradients_sub_grad_shape_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_grad_mul_basic_lstm_cell_sigmoid"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_grad_mul_1_placeholder_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_1_grad_mul_basic_lstm_cell_tanh"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_1_grad_mul_1_basic_lstm_cell_sigmoid_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_matmul_grad_matmul_basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_matmul_grad_matmul_1_basic_lstm_cell_concat"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_INT32
      }
      output_arg {
        name: "identity_1"
        type: DT_INT32
      }
      output_arg {
        name: "identity_2"
        type: DT_INT32
      }
      output_arg {
        name: "identity_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_6"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_7"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_8"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_9"
        type: DT_FLOAT
      }
      output_arg {
        name: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_mul_grad_broadcastgradientargs_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_mul_grad_broadcastgradientargs_tensorlistpopback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_mul_grad_mul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_mul_grad_mul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_realdiv_grad_broadcastgradientargs_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_realdiv_grad_realdiv_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_realdiv_grad_neg_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_2_grad_mul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_2_grad_mul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_sub_grad_broadcastgradientargs_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_sub_grad_broadcastgradientargs_tensorlistpopback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_sub_grad_broadcastgradientargs_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_sub_grad_broadcastgradientargs_tensorlistpopback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_grad_mul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_grad_mul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_1_grad_mul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_1_grad_mul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_matmul_grad_matmul_basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_matmul_grad_matmul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback_1"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "placeholder_3"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "placeholder_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "placeholder_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "placeholder_6"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "placeholder_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "placeholder_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "placeholder_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 500
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_placeholder"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem"
      op: "TensorListSetItem"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:tensor:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListGetItem"
      op: "TensorListGetItem"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:tensor:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/Shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_mul_grad_broadcastgradientargs_gradients_dropout_mul_grad_shape"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1"
      op: "TensorListPopBack"
      input: "gradients_dropout_mul_grad_broadcastgradientargs_gradients_dropout_mul_grad_shape_1"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_mul_grad_mul_dropout_cast"
      input: "gradients/dropout/Mul_grad/Mul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul"
      op: "Mul"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListGetItem:item:0"
      input: "gradients/dropout/Mul_grad/Mul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Sum"
      op: "Sum"
      input: "gradients/dropout/Mul_grad/Mul:z:0"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/dropout/Mul_grad/Sum:output:0"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_mul_grad_mul_1_dropout_realdiv"
      input: "gradients/dropout/Mul_grad/Mul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul_1"
      op: "Mul"
      input: "gradients/dropout/Mul_grad/Mul_1/TensorListPopBack:tensor:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListGetItem:item:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/dropout/Mul_grad/Mul_1:z:0"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/dropout/Mul_grad/Sum_1:output:0"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_realdiv_grad_broadcastgradientargs_gradients_dropout_realdiv_grad_shape_1"
      input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/dropout/RealDiv_grad/Shape:output:0"
      input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_realdiv_grad_realdiv_dropout_sub"
      input: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/RealDiv"
      op: "RealDiv"
      input: "gradients/dropout/Mul_grad/Reshape:output:0"
      input: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Sum"
      op: "Sum"
      input: "gradients/dropout/RealDiv_grad/RealDiv:z:0"
      input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Reshape"
      op: "Reshape"
      input: "gradients/dropout/RealDiv_grad/Sum:output:0"
      input: "gradients/dropout/RealDiv_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Neg/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Neg/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_realdiv_grad_neg_basic_lstm_cell_mul_2"
      input: "gradients/dropout/RealDiv_grad/Neg/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Neg"
      op: "Neg"
      input: "gradients/dropout/RealDiv_grad/Neg/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/RealDiv_1"
      op: "RealDiv"
      input: "gradients/dropout/RealDiv_grad/Neg:y:0"
      input: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/RealDiv_2"
      op: "RealDiv"
      input: "gradients/dropout/RealDiv_grad/RealDiv_1:z:0"
      input: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/mul"
      op: "Mul"
      input: "gradients/dropout/Mul_grad/Reshape:output:0"
      input: "gradients/dropout/RealDiv_grad/RealDiv_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Sum_1"
      op: "Sum"
      input: "gradients/dropout/RealDiv_grad/mul:z:0"
      input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/dropout/RealDiv_grad/Sum_1:output:0"
      input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/grad_ys_2:output:0"
      input: "gradients/dropout/RealDiv_grad/Reshape:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_2"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_2_grad_mul_basic_lstm_cell_sigmoid_2"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/AddN:sum:0"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_2_grad_mul_1_basic_lstm_cell_tanh_1"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/AddN:sum:0"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_sub_grad_broadcastgradientargs_gradients_dropout_sub_grad_shape"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1"
      op: "TensorListPopBack"
      input: "gradients_dropout_sub_grad_broadcastgradientargs_gradients_dropout_sub_grad_shape_1"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Sum"
      op: "Sum"
      input: "gradients/dropout/RealDiv_grad/Reshape_1:output:0"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Reshape"
      op: "Reshape"
      input: "gradients/dropout/Sub_grad/Sum:output:0"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Neg"
      op: "Neg"
      input: "gradients/dropout/RealDiv_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Sum_1"
      op: "Sum"
      input: "gradients/dropout/Sub_grad/Neg:y:0"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/dropout/Sub_grad/Sum_1:output:0"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_sub_grad_broadcastgradientargs_gradients_sub_grad_shape"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1"
      op: "TensorListPopBack"
      input: "gradients_sub_grad_broadcastgradientargs_gradients_sub_grad_shape_1"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Sum"
      op: "Sum"
      input: "gradients/dropout/Sub_grad/Reshape_1:output:0"
      input: "gradients/sub_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Reshape"
      op: "Reshape"
      input: "gradients/sub_grad/Sum:output:0"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Neg"
      op: "Neg"
      input: "gradients/dropout/Sub_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Sum_1"
      op: "Sum"
      input: "gradients/sub_grad/Neg:y:0"
      input: "gradients/sub_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/sub_grad/Sum_1:output:0"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/grad_ys_1:output:0"
      input: "gradients/basic_lstm_cell/Tanh_1_grad/TanhGrad:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_1"
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/grad_ys_6:output:0"
      input: "gradients/sub_grad/Reshape_1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_6"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_grad_mul_basic_lstm_cell_sigmoid"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul"
      op: "Mul"
      input: "gradients/AddN_1:sum:0"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_grad_mul_1_placeholder_2"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul_1"
      op: "Mul"
      input: "gradients/AddN_1:sum:0"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_1_grad_mul_basic_lstm_cell_tanh"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul"
      op: "Mul"
      input: "gradients/AddN_1:sum:0"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_1_grad_mul_1_basic_lstm_cell_sigmoid_1"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1"
      op: "Mul"
      input: "gradients/AddN_1:sum:0"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/BroadcastGradientArgs/s0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/BroadcastGradientArgs/s1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/basic_lstm_cell/Add_grad/BroadcastGradientArgs/s0:output:0"
      input: "gradients/basic_lstm_cell/Add_grad/BroadcastGradientArgs/s1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/Sum"
      op: "Sum"
      input: "gradients/basic_lstm_cell/Sigmoid_grad/SigmoidGrad:z:0"
      input: "gradients/basic_lstm_cell/Add_grad/Sum/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/Reshape/shape_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/Reshape"
      op: "Reshape"
      input: "gradients/basic_lstm_cell/Add_grad/Sum:output:0"
      input: "gradients/basic_lstm_cell/Add_grad/Reshape/shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/split_grad/concat/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad:z:0"
      input: "gradients/basic_lstm_cell/Tanh_grad/TanhGrad:z:0"
      input: "gradients/basic_lstm_cell/Sigmoid_grad/SigmoidGrad:z:0"
      input: "gradients/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad:z:0"
      input: "gradients/basic_lstm_cell/split_grad/concat/Const:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/basic_lstm_cell/split_grad/concat:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/basic_lstm_cell/split_grad/concat:output:0"
      input: "gradients_basic_lstm_cell_matmul_grad_matmul_basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_matmul_grad_matmul_1_basic_lstm_cell_concat"
      input: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/split_grad/concat:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/AddN_3"
      op: "AddN"
      input: "gradients/grad_ys_5:output:0"
      input: "gradients/basic_lstm_cell/BiasAdd_grad/BiasAddGrad:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_5"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/Rank"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/mod/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/mod"
      op: "FloorMod"
      input: "gradients/basic_lstm_cell/concat_grad/mod/Const:output:0"
      input: "gradients/basic_lstm_cell/concat_grad/Rank:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/Shape_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/basic_lstm_cell/concat_grad/mod:z:0"
      input: "gradients/basic_lstm_cell/concat_grad/Shape:output:0"
      input: "gradients/basic_lstm_cell/concat_grad/Shape_1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/Slice"
      op: "Slice"
      input: "gradients/basic_lstm_cell/MatMul_grad/MatMul:product:0"
      input: "gradients/basic_lstm_cell/concat_grad/ConcatOffset:offset:0"
      input: "gradients/basic_lstm_cell/concat_grad/Shape:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/basic_lstm_cell/MatMul_grad/MatMul:product:0"
      input: "gradients/basic_lstm_cell/concat_grad/ConcatOffset:offset:1"
      input: "gradients/basic_lstm_cell/concat_grad/Shape_1:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/AddN_4"
      op: "AddN"
      input: "gradients/grad_ys_4:output:0"
      input: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1:product:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_4"
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve"
      op: "TensorListReserve"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack:tensor:0"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1:tensor:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem"
      op: "TensorListSetItem"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve:handle:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/concat_grad/Slice:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_5"
      op: "AddN"
      input: "gradients/grad_ys_3:output:0"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem:output_handle:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_3"
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "add:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem:output_handle:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "gradients/basic_lstm_cell/concat_grad/Slice_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "gradients/AddN_5:sum:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
    }
    node_def {
      name: "Identity_7"
      op: "Identity"
      input: "gradients/AddN_4:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Identity_8"
      op: "Identity"
      input: "gradients/AddN_3:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Identity_9"
      op: "Identity"
      input: "gradients/AddN_2:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "gradients_basic_lstm_cell_matmul_grad_matmul_1_tensorlistpopback"
      value: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_matmul_grad_matmul_basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity"
      value: "gradients_basic_lstm_cell_matmul_grad_matmul_basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity_0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_1_grad_mul_1_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_1_grad_mul_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_2_grad_mul_1_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_2_grad_mul_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_grad_mul_1_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_grad/Mul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_grad_mul_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_mul_grad_broadcastgradientargs_tensorlistpopback"
      value: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_mul_grad_broadcastgradientargs_tensorlistpopback_1"
      value: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1:output_handle:0"
    }
    ret {
      key: "gradients_dropout_mul_grad_mul_1_tensorlistpopback"
      value: "gradients/dropout/Mul_grad/Mul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_mul_grad_mul_tensorlistpopback"
      value: "gradients/dropout/Mul_grad/Mul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_realdiv_grad_broadcastgradientargs_tensorlistpopback"
      value: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_realdiv_grad_neg_tensorlistpopback"
      value: "gradients/dropout/RealDiv_grad/Neg/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_realdiv_grad_realdiv_tensorlistpopback"
      value: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_sub_grad_broadcastgradientargs_tensorlistpopback"
      value: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_sub_grad_broadcastgradientargs_tensorlistpopback_1"
      value: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1:output_handle:0"
    }
    ret {
      key: "gradients_sub_grad_broadcastgradientargs_tensorlistpopback"
      value: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_sub_grad_broadcastgradientargs_tensorlistpopback_1"
      value: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback"
      value: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback_1"
      value: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_tensorlistpopback"
      value: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    ret {
      key: "identity_7"
      value: "Identity_7:output:0"
    }
    ret {
      key: "identity_8"
      value: "Identity_8:output:0"
    }
    ret {
      key: "identity_9"
      value: "Identity_9:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1000
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1000
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "LSTM_Caption_1_rnn_while_cond_3835_rewritten"
      input_arg {
        name: "lstm_caption_1_rnn_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_caption_1_rnn_strided_slice"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "less_lstm_caption_1_rnn_minimum"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_caption_1_rnn_while_cond_3835___redundant_placeholder0"
        type: DT_VARIANT
      }
      input_arg {
        name: "lstm_caption_1_rnn_while_cond_3835___redundant_placeholder1"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_caption_1_rnn_while_cond_3835___redundant_placeholder2"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_caption_1_rnn_while_cond_3835___redundant_placeholder3"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_placeholder_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_mul_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_mul_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_dropout_cast_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_dropout_realdiv_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_realdiv_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_dropout_sub_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_mul_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_sigmoid_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_tanh_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_sub_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_gradients_dropout_sub_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_gradients_sub_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_gradients_sub_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_sigmoid_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_placeholder_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_tanh_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_sigmoid_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_basic_lstm_cell_concat_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_lstm_caption_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_0_accumulator"
        type: DT_VARIANT
      }
      output_arg {
        name: "logicaland"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "less_lstm_caption_1_rnn_minimum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Less_1"
      op: "Less"
      input: "lstm_caption_1_rnn_while_loop_counter"
      input: "lstm_caption_1_rnn_strided_slice"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "LogicalAnd"
      op: "LogicalAnd"
      input: "Less_1:z:0"
      input: "Less:z:0"
    }
    ret {
      key: "logicaland"
      value: "LogicalAnd:z:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "LSTM_Caption_1_rnn_while_cond_3835_rewritten_grad_4409"
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_2"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_7"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_8"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_9"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_28"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_31"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Less:z:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1500
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1500
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "LSTM_Video_1_rnn_while_body_3648_rewritten"
      input_arg {
        name: "lstm_video_1_rnn_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_video_1_rnn_strided_slice_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_video_1_rnn_minimum_0"
        type: DT_INT32
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "basic_lstm_cell_biasadd_lstm_video_rnn_basic_lstm_cell_bias_read_identity_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "sub_dropout_keep_probability_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "tensorlistpushback_gradients_lstm_video_1_rnn_while_grad_placeholder_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_1_gradients_lstm_video_1_rnn_while_grad_gradients_dropout_mul_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_2_gradients_lstm_video_1_rnn_while_grad_gradients_dropout_mul_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_3_gradients_lstm_video_1_rnn_while_grad_dropout_cast_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_4_gradients_lstm_video_1_rnn_while_grad_dropout_realdiv_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_5_gradients_lstm_video_1_rnn_while_grad_gradients_dropout_realdiv_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_6_gradients_lstm_video_1_rnn_while_grad_dropout_sub_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_7_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_mul_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_8_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_sigmoid_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_9_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_tanh_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_10_gradients_lstm_video_1_rnn_while_grad_gradients_dropout_sub_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_11_gradients_lstm_video_1_rnn_while_grad_gradients_dropout_sub_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_12_gradients_lstm_video_1_rnn_while_grad_gradients_sub_grad_shape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_13_gradients_lstm_video_1_rnn_while_grad_gradients_sub_grad_shape_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_14_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_sigmoid_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_15_gradients_lstm_video_1_rnn_while_grad_placeholder_2_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_16_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_tanh_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_17_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_sigmoid_1_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_18_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_concat_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_19_gradients_lstm_video_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape_0_accumulator"
        type: DT_VARIANT
      }
      input_arg {
        name: "tensorlistpushback_20_gradients_lstm_video_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_0_accumulator"
        type: DT_VARIANT
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "lstm_video_1_rnn_strided_slice"
        type: DT_INT32
      }
      output_arg {
        name: "add"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "basic_lstm_cell_add_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "basic_lstm_cell_mul_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "lstm_video_1_rnn_minimum"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "basic_lstm_cell_biasadd_lstm_video_rnn_basic_lstm_cell_bias_read_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "sub_dropout_keep_probability"
        type: DT_FLOAT
      }
      output_arg {
        name: "tensorlistpushback"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_2"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_4"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_5"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_6"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_7"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_8"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_9"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_10"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_11"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_12"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_13"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_14"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_15"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_16"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_17"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_18"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_19"
        type: DT_VARIANT
      }
      output_arg {
        name: "tensorlistpushback_20"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/concat/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/concat"
      op: "ConcatV2"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "placeholder_3"
      input: "basic_lstm_cell/concat/axis:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/MatMul"
      op: "MatMul"
      input: "basic_lstm_cell/concat:output:0"
      input: "basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/BiasAdd"
      op: "BiasAdd"
      input: "basic_lstm_cell/MatMul:product:0"
      input: "basic_lstm_cell_biasadd_lstm_video_rnn_basic_lstm_cell_bias_read_identity_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/split"
      op: "Split"
      input: "basic_lstm_cell/Const:output:0"
      input: "basic_lstm_cell/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Add"
      op: "AddV2"
      input: "basic_lstm_cell/split:output:2"
      input: "basic_lstm_cell/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid"
      op: "Sigmoid"
      input: "basic_lstm_cell/Add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul"
      op: "Mul"
      input: "placeholder_2"
      input: "basic_lstm_cell/Sigmoid:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid_1"
      op: "Sigmoid"
      input: "basic_lstm_cell/split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Tanh"
      op: "Tanh"
      input: "basic_lstm_cell/split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul_1"
      op: "Mul"
      input: "basic_lstm_cell/Sigmoid_1:y:0"
      input: "basic_lstm_cell/Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Add_1"
      op: "AddV2"
      input: "basic_lstm_cell/Mul:z:0"
      input: "basic_lstm_cell/Mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Tanh_1"
      op: "Tanh"
      input: "basic_lstm_cell/Add_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid_2"
      op: "Sigmoid"
      input: "basic_lstm_cell/split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul_2"
      op: "Mul"
      input: "basic_lstm_cell/Tanh_1:y:0"
      input: "basic_lstm_cell/Sigmoid_2:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sub/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "sub"
      op: "Sub"
      input: "sub/x:output:0"
      input: "sub_dropout_keep_probability_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "dropout/Sub"
      op: "Sub"
      input: "dropout/Const:output:0"
      input: "sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/RealDiv"
      op: "RealDiv"
      input: "basic_lstm_cell/Mul_2:z:0"
      input: "dropout/Sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "dropout/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dropout/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "dropout/GreaterEqual"
      op: "GreaterEqual"
      input: "dropout/random_uniform/RandomUniform:output:0"
      input: "sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Cast"
      op: "Cast"
      input: "dropout/GreaterEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "dropout/Mul"
      op: "Mul"
      input: "dropout/RealDiv:z:0"
      input: "dropout/Cast:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "placeholder"
      input: "dropout/Mul:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_0"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "lstm_video_1_rnn_while_loop_counter"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack"
      op: "TensorListPushBack"
      input: "tensorlistpushback_gradients_lstm_video_1_rnn_while_grad_placeholder_0_accumulator"
      input: "placeholder"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Shape"
      op: "Shape"
      input: "dropout/RealDiv:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Shape_1"
      op: "Shape"
      input: "dropout/Cast:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack_1"
      op: "TensorListPushBack"
      input: "tensorlistpushback_1_gradients_lstm_video_1_rnn_while_grad_gradients_dropout_mul_grad_shape_0_accumulator"
      input: "gradients/dropout/Mul_grad/Shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_2"
      op: "TensorListPushBack"
      input: "tensorlistpushback_2_gradients_lstm_video_1_rnn_while_grad_gradients_dropout_mul_grad_shape_1_0_accumulator"
      input: "gradients/dropout/Mul_grad/Shape_1:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_3"
      op: "TensorListPushBack"
      input: "tensorlistpushback_3_gradients_lstm_video_1_rnn_while_grad_dropout_cast_0_accumulator"
      input: "dropout/Cast:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_4"
      op: "TensorListPushBack"
      input: "tensorlistpushback_4_gradients_lstm_video_1_rnn_while_grad_dropout_realdiv_0_accumulator"
      input: "dropout/RealDiv:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Shape_1"
      op: "Shape"
      input: "dropout/Sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack_5"
      op: "TensorListPushBack"
      input: "tensorlistpushback_5_gradients_lstm_video_1_rnn_while_grad_gradients_dropout_realdiv_grad_shape_1_0_accumulator"
      input: "gradients/dropout/RealDiv_grad/Shape_1:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_6"
      op: "TensorListPushBack"
      input: "tensorlistpushback_6_gradients_lstm_video_1_rnn_while_grad_dropout_sub_0_accumulator"
      input: "dropout/Sub:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_7"
      op: "TensorListPushBack"
      input: "tensorlistpushback_7_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_mul_2_0_accumulator"
      input: "basic_lstm_cell/Mul_2:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_8"
      op: "TensorListPushBack"
      input: "tensorlistpushback_8_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_sigmoid_2_0_accumulator"
      input: "basic_lstm_cell/Sigmoid_2:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_9"
      op: "TensorListPushBack"
      input: "tensorlistpushback_9_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_tanh_1_0_accumulator"
      input: "basic_lstm_cell/Tanh_1:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Shape"
      op: "Shape"
      input: "dropout/Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Shape_1"
      op: "Shape"
      input: "sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack_10"
      op: "TensorListPushBack"
      input: "tensorlistpushback_10_gradients_lstm_video_1_rnn_while_grad_gradients_dropout_sub_grad_shape_0_accumulator"
      input: "gradients/dropout/Sub_grad/Shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_11"
      op: "TensorListPushBack"
      input: "tensorlistpushback_11_gradients_lstm_video_1_rnn_while_grad_gradients_dropout_sub_grad_shape_1_0_accumulator"
      input: "gradients/dropout/Sub_grad/Shape_1:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Shape"
      op: "Shape"
      input: "sub/x:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Shape_1"
      op: "Shape"
      input: "sub_dropout_keep_probability_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack_12"
      op: "TensorListPushBack"
      input: "tensorlistpushback_12_gradients_lstm_video_1_rnn_while_grad_gradients_sub_grad_shape_0_accumulator"
      input: "gradients/sub_grad/Shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_13"
      op: "TensorListPushBack"
      input: "tensorlistpushback_13_gradients_lstm_video_1_rnn_while_grad_gradients_sub_grad_shape_1_0_accumulator"
      input: "gradients/sub_grad/Shape_1:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_14"
      op: "TensorListPushBack"
      input: "tensorlistpushback_14_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_sigmoid_0_accumulator"
      input: "basic_lstm_cell/Sigmoid:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_15"
      op: "TensorListPushBack"
      input: "tensorlistpushback_15_gradients_lstm_video_1_rnn_while_grad_placeholder_2_0_accumulator"
      input: "placeholder_2"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_16"
      op: "TensorListPushBack"
      input: "tensorlistpushback_16_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_tanh_0_accumulator"
      input: "basic_lstm_cell/Tanh:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_17"
      op: "TensorListPushBack"
      input: "tensorlistpushback_17_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_sigmoid_1_0_accumulator"
      input: "basic_lstm_cell/Sigmoid_1:y:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_18"
      op: "TensorListPushBack"
      input: "tensorlistpushback_18_gradients_lstm_video_1_rnn_while_grad_basic_lstm_cell_concat_0_accumulator"
      input: "basic_lstm_cell/concat:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength"
      op: "TensorListLength"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape"
      op: "TensorListElementShape"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorListPushBack_19"
      op: "TensorListPushBack"
      input: "tensorlistpushback_19_gradients_lstm_video_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape_0_accumulator"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListElementShape:element_shape:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    node_def {
      name: "TensorListPushBack_20"
      op: "TensorListPushBack"
      input: "tensorlistpushback_20_gradients_lstm_video_1_rnn_while_grad_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength_0_accumulator"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListLength:length:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_INT32
            }
          }
        }
      }
    }
    ret {
      key: "add"
      value: "add_0:z:0"
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "basic_lstm_cell_add_1"
      value: "basic_lstm_cell/Add_1:z:0"
    }
    ret {
      key: "basic_lstm_cell_biasadd_lstm_video_rnn_basic_lstm_cell_bias_read_identity"
      value: "basic_lstm_cell_biasadd_lstm_video_rnn_basic_lstm_cell_bias_read_identity_0"
    }
    ret {
      key: "basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity"
      value: "basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity_0"
    }
    ret {
      key: "basic_lstm_cell_mul_2"
      value: "basic_lstm_cell/Mul_2:z:0"
    }
    ret {
      key: "lstm_video_1_rnn_minimum"
      value: "lstm_video_1_rnn_minimum_0"
    }
    ret {
      key: "lstm_video_1_rnn_strided_slice"
      value: "lstm_video_1_rnn_strided_slice_0"
    }
    ret {
      key: "sub_dropout_keep_probability"
      value: "sub_dropout_keep_probability_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    ret {
      key: "tensorlistpushback"
      value: "TensorListPushBack:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_1"
      value: "TensorListPushBack_1:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_10"
      value: "TensorListPushBack_10:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_11"
      value: "TensorListPushBack_11:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_12"
      value: "TensorListPushBack_12:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_13"
      value: "TensorListPushBack_13:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_14"
      value: "TensorListPushBack_14:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_15"
      value: "TensorListPushBack_15:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_16"
      value: "TensorListPushBack_16:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_17"
      value: "TensorListPushBack_17:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_18"
      value: "TensorListPushBack_18:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_19"
      value: "TensorListPushBack_19:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_2"
      value: "TensorListPushBack_2:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_20"
      value: "TensorListPushBack_20:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_3"
      value: "TensorListPushBack_3:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_4"
      value: "TensorListPushBack_4:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_5"
      value: "TensorListPushBack_5:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_6"
      value: "TensorListPushBack_6:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_7"
      value: "TensorListPushBack_7:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_8"
      value: "TensorListPushBack_8:output_handle:0"
    }
    ret {
      key: "tensorlistpushback_9"
      value: "TensorListPushBack_9:output_handle:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1000
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "LSTM_Video_1_rnn_while_body_3648"
      input_arg {
        name: "lstm_video_1_rnn_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_video_1_rnn_strided_slice_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_video_1_rnn_minimum_0"
        type: DT_INT32
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "basic_lstm_cell_biasadd_lstm_video_rnn_basic_lstm_cell_bias_read_identity_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "sub_dropout_keep_probability_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "lstm_video_1_rnn_strided_slice"
        type: DT_INT32
      }
      output_arg {
        name: "add"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "basic_lstm_cell_add_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "basic_lstm_cell_mul_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "lstm_video_1_rnn_minimum"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "basic_lstm_cell_biasadd_lstm_video_rnn_basic_lstm_cell_bias_read_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "sub_dropout_keep_probability"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/concat/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/concat"
      op: "ConcatV2"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "placeholder_3"
      input: "basic_lstm_cell/concat/axis:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/MatMul"
      op: "MatMul"
      input: "basic_lstm_cell/concat:output:0"
      input: "basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/BiasAdd"
      op: "BiasAdd"
      input: "basic_lstm_cell/MatMul:product:0"
      input: "basic_lstm_cell_biasadd_lstm_video_rnn_basic_lstm_cell_bias_read_identity_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/split"
      op: "Split"
      input: "basic_lstm_cell/Const:output:0"
      input: "basic_lstm_cell/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Add"
      op: "AddV2"
      input: "basic_lstm_cell/split:output:2"
      input: "basic_lstm_cell/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid"
      op: "Sigmoid"
      input: "basic_lstm_cell/Add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul"
      op: "Mul"
      input: "placeholder_2"
      input: "basic_lstm_cell/Sigmoid:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid_1"
      op: "Sigmoid"
      input: "basic_lstm_cell/split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Tanh"
      op: "Tanh"
      input: "basic_lstm_cell/split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul_1"
      op: "Mul"
      input: "basic_lstm_cell/Sigmoid_1:y:0"
      input: "basic_lstm_cell/Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Add_1"
      op: "AddV2"
      input: "basic_lstm_cell/Mul:z:0"
      input: "basic_lstm_cell/Mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Tanh_1"
      op: "Tanh"
      input: "basic_lstm_cell/Add_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid_2"
      op: "Sigmoid"
      input: "basic_lstm_cell/split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul_2"
      op: "Mul"
      input: "basic_lstm_cell/Tanh_1:y:0"
      input: "basic_lstm_cell/Sigmoid_2:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sub/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "sub"
      op: "Sub"
      input: "sub/x:output:0"
      input: "sub_dropout_keep_probability_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "dropout/Sub"
      op: "Sub"
      input: "dropout/Const:output:0"
      input: "sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/RealDiv"
      op: "RealDiv"
      input: "basic_lstm_cell/Mul_2:z:0"
      input: "dropout/Sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "dropout/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dropout/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "dropout/GreaterEqual"
      op: "GreaterEqual"
      input: "dropout/random_uniform/RandomUniform:output:0"
      input: "sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Cast"
      op: "Cast"
      input: "dropout/GreaterEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "dropout/Mul"
      op: "Mul"
      input: "dropout/RealDiv:z:0"
      input: "dropout/Cast:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "placeholder"
      input: "dropout/Mul:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_0"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "lstm_video_1_rnn_while_loop_counter"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "add"
      value: "add_0:z:0"
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "basic_lstm_cell_add_1"
      value: "basic_lstm_cell/Add_1:z:0"
    }
    ret {
      key: "basic_lstm_cell_biasadd_lstm_video_rnn_basic_lstm_cell_bias_read_identity"
      value: "basic_lstm_cell_biasadd_lstm_video_rnn_basic_lstm_cell_bias_read_identity_0"
    }
    ret {
      key: "basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity"
      value: "basic_lstm_cell_matmul_lstm_video_rnn_basic_lstm_cell_kernel_read_identity_0"
    }
    ret {
      key: "basic_lstm_cell_mul_2"
      value: "basic_lstm_cell/Mul_2:z:0"
    }
    ret {
      key: "lstm_video_1_rnn_minimum"
      value: "lstm_video_1_rnn_minimum_0"
    }
    ret {
      key: "lstm_video_1_rnn_strided_slice"
      value: "lstm_video_1_rnn_strided_slice_0"
    }
    ret {
      key: "sub_dropout_keep_probability"
      value: "sub_dropout_keep_probability_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_lstm_video_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1000
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "LSTM_Caption_1_rnn_while_body_3836"
      input_arg {
        name: "lstm_caption_1_rnn_while_loop_counter"
        type: DT_INT32
      }
      input_arg {
        name: "lstm_caption_1_rnn_strided_slice_0"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_2"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_3"
        type: DT_FLOAT
      }
      input_arg {
        name: "lstm_caption_1_rnn_minimum_0"
        type: DT_INT32
      }
      input_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
        type: DT_VARIANT
      }
      input_arg {
        name: "basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "basic_lstm_cell_biasadd_lstm_caption_rnn_basic_lstm_cell_bias_read_identity_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "sub_dropout_keep_probability_0"
        type: DT_FLOAT
      }
      output_arg {
        name: "add_1"
        type: DT_INT32
      }
      output_arg {
        name: "lstm_caption_1_rnn_strided_slice"
        type: DT_INT32
      }
      output_arg {
        name: "add"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2write_tensorlistsetitem"
        type: DT_VARIANT
      }
      output_arg {
        name: "basic_lstm_cell_add_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "basic_lstm_cell_mul_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "lstm_caption_1_rnn_minimum"
        type: DT_INT32
      }
      output_arg {
        name: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor"
        type: DT_VARIANT
      }
      output_arg {
        name: "basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "basic_lstm_cell_biasadd_lstm_caption_rnn_basic_lstm_cell_bias_read_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "sub_dropout_keep_probability"
        type: DT_FLOAT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\350\003\000\000"
          }
        }
      }
    }
    node_def {
      name: "TensorArrayV2Read/TensorListGetItem"
      op: "TensorListGetItem"
      input: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
      input: "placeholder"
      input: "TensorArrayV2Read/TensorListGetItem/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/concat/axis"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/concat"
      op: "ConcatV2"
      input: "TensorArrayV2Read/TensorListGetItem:item:0"
      input: "placeholder_3"
      input: "basic_lstm_cell/concat/axis:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/MatMul"
      op: "MatMul"
      input: "basic_lstm_cell/concat:output:0"
      input: "basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/BiasAdd"
      op: "BiasAdd"
      input: "basic_lstm_cell/MatMul:product:0"
      input: "basic_lstm_cell_biasadd_lstm_caption_rnn_basic_lstm_cell_bias_read_identity_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/split"
      op: "Split"
      input: "basic_lstm_cell/Const:output:0"
      input: "basic_lstm_cell/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "num_split"
        value {
          i: 4
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Const_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Add"
      op: "AddV2"
      input: "basic_lstm_cell/split:output:2"
      input: "basic_lstm_cell/Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid"
      op: "Sigmoid"
      input: "basic_lstm_cell/Add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul"
      op: "Mul"
      input: "placeholder_2"
      input: "basic_lstm_cell/Sigmoid:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid_1"
      op: "Sigmoid"
      input: "basic_lstm_cell/split:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Tanh"
      op: "Tanh"
      input: "basic_lstm_cell/split:output:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul_1"
      op: "Mul"
      input: "basic_lstm_cell/Sigmoid_1:y:0"
      input: "basic_lstm_cell/Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Add_1"
      op: "AddV2"
      input: "basic_lstm_cell/Mul:z:0"
      input: "basic_lstm_cell/Mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Tanh_1"
      op: "Tanh"
      input: "basic_lstm_cell/Add_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Sigmoid_2"
      op: "Sigmoid"
      input: "basic_lstm_cell/split:output:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "basic_lstm_cell/Mul_2"
      op: "Mul"
      input: "basic_lstm_cell/Tanh_1:y:0"
      input: "basic_lstm_cell/Sigmoid_2:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sub/x"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "sub"
      op: "Sub"
      input: "sub/x:output:0"
      input: "sub_dropout_keep_probability_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "dropout/Sub"
      op: "Sub"
      input: "dropout/Const:output:0"
      input: "sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/RealDiv"
      op: "RealDiv"
      input: "basic_lstm_cell/Mul_2:z:0"
      input: "dropout/Sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "dropout/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dropout/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "dropout/GreaterEqual"
      op: "GreaterEqual"
      input: "dropout/random_uniform/RandomUniform:output:0"
      input: "sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "dropout/Cast"
      op: "Cast"
      input: "dropout/GreaterEqual:z:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "dropout/Mul"
      op: "Mul"
      input: "dropout/RealDiv:z:0"
      input: "dropout/Cast:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "TensorArrayV2Write/TensorListSetItem"
      op: "TensorListSetItem"
      input: "placeholder_1"
      input: "placeholder"
      input: "dropout/Mul:z:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_0"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add_1_0"
      op: "AddV2"
      input: "lstm_caption_1_rnn_while_loop_counter"
      input: "add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    ret {
      key: "add"
      value: "add_0:z:0"
    }
    ret {
      key: "add_1"
      value: "add_1_0:z:0"
    }
    ret {
      key: "basic_lstm_cell_add_1"
      value: "basic_lstm_cell/Add_1:z:0"
    }
    ret {
      key: "basic_lstm_cell_biasadd_lstm_caption_rnn_basic_lstm_cell_bias_read_identity"
      value: "basic_lstm_cell_biasadd_lstm_caption_rnn_basic_lstm_cell_bias_read_identity_0"
    }
    ret {
      key: "basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity"
      value: "basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity_0"
    }
    ret {
      key: "basic_lstm_cell_mul_2"
      value: "basic_lstm_cell/Mul_2:z:0"
    }
    ret {
      key: "lstm_caption_1_rnn_minimum"
      value: "lstm_caption_1_rnn_minimum_0"
    }
    ret {
      key: "lstm_caption_1_rnn_strided_slice"
      value: "lstm_caption_1_rnn_strided_slice_0"
    }
    ret {
      key: "sub_dropout_keep_probability"
      value: "sub_dropout_keep_probability_0"
    }
    ret {
      key: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor"
      value: "tensorarrayv2read_tensorlistgetitem_lstm_caption_1_rnn_tensorarrayunstack_tensorlistfromtensor_0"
    }
    ret {
      key: "tensorarrayv2write_tensorlistsetitem"
      value: "TensorArrayV2Write/TensorListSetItem:output_handle:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1500
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "LSTM_Caption_1_rnn_while_body_3836_grad_4077"
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_2"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_7"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_8"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_9"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_placeholder"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_mul_grad_broadcastgradientargs_gradients_dropout_mul_grad_shape"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_mul_grad_broadcastgradientargs_gradients_dropout_mul_grad_shape_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_mul_grad_mul_dropout_cast"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_mul_grad_mul_1_dropout_realdiv"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_realdiv_grad_broadcastgradientargs_gradients_dropout_realdiv_grad_shape_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_realdiv_grad_realdiv_dropout_sub"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_realdiv_grad_neg_basic_lstm_cell_mul_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_2_grad_mul_basic_lstm_cell_sigmoid_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_2_grad_mul_1_basic_lstm_cell_tanh_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_sub_grad_broadcastgradientargs_gradients_dropout_sub_grad_shape"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_dropout_sub_grad_broadcastgradientargs_gradients_dropout_sub_grad_shape_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_sub_grad_broadcastgradientargs_gradients_sub_grad_shape"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_sub_grad_broadcastgradientargs_gradients_sub_grad_shape_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_grad_mul_basic_lstm_cell_sigmoid"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_grad_mul_1_placeholder_2"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_1_grad_mul_basic_lstm_cell_tanh"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_mul_1_grad_mul_1_basic_lstm_cell_sigmoid_1"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_matmul_grad_matmul_basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity_0"
        type: DT_FLOAT
      }
      input_arg {
        name: "gradients_basic_lstm_cell_matmul_grad_matmul_1_basic_lstm_cell_concat"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape"
        type: DT_VARIANT
      }
      input_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_INT32
      }
      output_arg {
        name: "identity_1"
        type: DT_INT32
      }
      output_arg {
        name: "identity_2"
        type: DT_INT32
      }
      output_arg {
        name: "identity_3"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_4"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_5"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_6"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity_7"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_8"
        type: DT_FLOAT
      }
      output_arg {
        name: "identity_9"
        type: DT_FLOAT
      }
      output_arg {
        name: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_mul_grad_broadcastgradientargs_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_mul_grad_broadcastgradientargs_tensorlistpopback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_mul_grad_mul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_mul_grad_mul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_realdiv_grad_broadcastgradientargs_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_realdiv_grad_realdiv_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_realdiv_grad_neg_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_2_grad_mul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_2_grad_mul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_sub_grad_broadcastgradientargs_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_dropout_sub_grad_broadcastgradientargs_tensorlistpopback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_sub_grad_broadcastgradientargs_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_sub_grad_broadcastgradientargs_tensorlistpopback_1"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_grad_mul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_grad_mul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_1_grad_mul_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_mul_1_grad_mul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_matmul_grad_matmul_basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity"
        type: DT_FLOAT
      }
      output_arg {
        name: "gradients_basic_lstm_cell_matmul_grad_matmul_1_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback"
        type: DT_VARIANT
      }
      output_arg {
        name: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback_1"
        type: DT_VARIANT
      }
    }
    node_def {
      name: "gradients/grad_ys_0"
      op: "Identity"
      input: "placeholder_3"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_1"
      op: "Identity"
      input: "placeholder_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_2"
      op: "Identity"
      input: "placeholder_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_3"
      op: "Identity"
      input: "placeholder_6"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_4"
      op: "Identity"
      input: "placeholder_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_5"
      op: "Identity"
      input: "placeholder_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/grad_ys_6"
      op: "Identity"
      input: "placeholder_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 500
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_placeholder"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem"
      op: "TensorListSetItem"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:tensor:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/zeros_like:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListGetItem"
      op: "TensorListGetItem"
      input: "gradients/grad_ys_0:output:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:tensor:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/Shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_mul_grad_broadcastgradientargs_gradients_dropout_mul_grad_shape"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1"
      op: "TensorListPopBack"
      input: "gradients_dropout_mul_grad_broadcastgradientargs_gradients_dropout_mul_grad_shape_1"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_mul_grad_mul_dropout_cast"
      input: "gradients/dropout/Mul_grad/Mul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul"
      op: "Mul"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListGetItem:item:0"
      input: "gradients/dropout/Mul_grad/Mul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Sum"
      op: "Sum"
      input: "gradients/dropout/Mul_grad/Mul:z:0"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/dropout/Mul_grad/Sum:output:0"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_mul_grad_mul_1_dropout_realdiv"
      input: "gradients/dropout/Mul_grad/Mul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Mul_1"
      op: "Mul"
      input: "gradients/dropout/Mul_grad/Mul_1/TensorListPopBack:tensor:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListGetItem:item:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/dropout/Mul_grad/Mul_1:z:0"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/Mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/dropout/Mul_grad/Sum_1:output:0"
      input: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_realdiv_grad_broadcastgradientargs_gradients_dropout_realdiv_grad_shape_1"
      input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/dropout/RealDiv_grad/Shape:output:0"
      input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_realdiv_grad_realdiv_dropout_sub"
      input: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/RealDiv"
      op: "RealDiv"
      input: "gradients/dropout/Mul_grad/Reshape:output:0"
      input: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Sum"
      op: "Sum"
      input: "gradients/dropout/RealDiv_grad/RealDiv:z:0"
      input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Reshape"
      op: "Reshape"
      input: "gradients/dropout/RealDiv_grad/Sum:output:0"
      input: "gradients/dropout/RealDiv_grad/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Neg/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Neg/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_realdiv_grad_neg_basic_lstm_cell_mul_2"
      input: "gradients/dropout/RealDiv_grad/Neg/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Neg"
      op: "Neg"
      input: "gradients/dropout/RealDiv_grad/Neg/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/RealDiv_1"
      op: "RealDiv"
      input: "gradients/dropout/RealDiv_grad/Neg:y:0"
      input: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/RealDiv_2"
      op: "RealDiv"
      input: "gradients/dropout/RealDiv_grad/RealDiv_1:z:0"
      input: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/mul"
      op: "Mul"
      input: "gradients/dropout/Mul_grad/Reshape:output:0"
      input: "gradients/dropout/RealDiv_grad/RealDiv_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Sum_1"
      op: "Sum"
      input: "gradients/dropout/RealDiv_grad/mul:z:0"
      input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/RealDiv_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/dropout/RealDiv_grad/Sum_1:output:0"
      input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/grad_ys_2:output:0"
      input: "gradients/dropout/RealDiv_grad/Reshape:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_2"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_2_grad_mul_basic_lstm_cell_sigmoid_2"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/AddN:sum:0"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_2_grad_mul_1_basic_lstm_cell_tanh_1"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/AddN:sum:0"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_dropout_sub_grad_broadcastgradientargs_gradients_dropout_sub_grad_shape"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1"
      op: "TensorListPopBack"
      input: "gradients_dropout_sub_grad_broadcastgradientargs_gradients_dropout_sub_grad_shape_1"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Sum"
      op: "Sum"
      input: "gradients/dropout/RealDiv_grad/Reshape_1:output:0"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Reshape"
      op: "Reshape"
      input: "gradients/dropout/Sub_grad/Sum:output:0"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Neg"
      op: "Neg"
      input: "gradients/dropout/RealDiv_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Sum_1"
      op: "Sum"
      input: "gradients/dropout/Sub_grad/Neg:y:0"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/dropout/Sub_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/dropout/Sub_grad/Sum_1:output:0"
      input: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_sub_grad_broadcastgradientargs_gradients_sub_grad_shape"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1"
      op: "TensorListPopBack"
      input: "gradients_sub_grad_broadcastgradientargs_gradients_sub_grad_shape_1"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Sum"
      op: "Sum"
      input: "gradients/dropout/Sub_grad/Reshape_1:output:0"
      input: "gradients/sub_grad/BroadcastGradientArgs:r0:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Reshape"
      op: "Reshape"
      input: "gradients/sub_grad/Sum:output:0"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Neg"
      op: "Neg"
      input: "gradients/dropout/Sub_grad/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Sum_1"
      op: "Sum"
      input: "gradients/sub_grad/Neg:y:0"
      input: "gradients/sub_grad/BroadcastGradientArgs:r1:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/sub_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/sub_grad/Sum_1:output:0"
      input: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/grad_ys_1:output:0"
      input: "gradients/basic_lstm_cell/Tanh_1_grad/TanhGrad:z:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_1"
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/grad_ys_6:output:0"
      input: "gradients/sub_grad/Reshape_1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_6"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_grad_mul_basic_lstm_cell_sigmoid"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul"
      op: "Mul"
      input: "gradients/AddN_1:sum:0"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_grad_mul_1_placeholder_2"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_grad/Mul_1"
      op: "Mul"
      input: "gradients/AddN_1:sum:0"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_1_grad_mul_basic_lstm_cell_tanh"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul"
      op: "Mul"
      input: "gradients/AddN_1:sum:0"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_mul_1_grad_mul_1_basic_lstm_cell_sigmoid_1"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1"
      op: "Mul"
      input: "gradients/AddN_1:sum:0"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack:tensor:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/BroadcastGradientArgs/s0"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/BroadcastGradientArgs/s1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/basic_lstm_cell/Add_grad/BroadcastGradientArgs/s0:output:0"
      input: "gradients/basic_lstm_cell/Add_grad/BroadcastGradientArgs/s1:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/Sum"
      op: "Sum"
      input: "gradients/basic_lstm_cell/Sigmoid_grad/SigmoidGrad:z:0"
      input: "gradients/basic_lstm_cell/Add_grad/Sum/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/Reshape/shape_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/Add_grad/Reshape"
      op: "Reshape"
      input: "gradients/basic_lstm_cell/Add_grad/Sum:output:0"
      input: "gradients/basic_lstm_cell/Add_grad/Reshape/shape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/split_grad/concat/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad:z:0"
      input: "gradients/basic_lstm_cell/Tanh_grad/TanhGrad:z:0"
      input: "gradients/basic_lstm_cell/Sigmoid_grad/SigmoidGrad:z:0"
      input: "gradients/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad:z:0"
      input: "gradients/basic_lstm_cell/split_grad/concat/Const:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "gradients/basic_lstm_cell/split_grad/concat:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/basic_lstm_cell/split_grad/concat:output:0"
      input: "gradients_basic_lstm_cell_matmul_grad_matmul_basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_basic_lstm_cell_matmul_grad_matmul_1_basic_lstm_cell_concat"
      input: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/split_grad/concat:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "gradients/AddN_3"
      op: "AddN"
      input: "gradients/grad_ys_5:output:0"
      input: "gradients/basic_lstm_cell/BiasAdd_grad/BiasAddGrad:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_5"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/Rank"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/mod/Const"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/mod"
      op: "FloorMod"
      input: "gradients/basic_lstm_cell/concat_grad/mod/Const:output:0"
      input: "gradients/basic_lstm_cell/concat_grad/Rank:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/Shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\350\003\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/Shape_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\364\001\000\000"
          }
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/basic_lstm_cell/concat_grad/mod:z:0"
      input: "gradients/basic_lstm_cell/concat_grad/Shape:output:0"
      input: "gradients/basic_lstm_cell/concat_grad/Shape_1:output:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/Slice"
      op: "Slice"
      input: "gradients/basic_lstm_cell/MatMul_grad/MatMul:product:0"
      input: "gradients/basic_lstm_cell/concat_grad/ConcatOffset:offset:0"
      input: "gradients/basic_lstm_cell/concat_grad/Shape:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/basic_lstm_cell/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/basic_lstm_cell/MatMul_grad/MatMul:product:0"
      input: "gradients/basic_lstm_cell/concat_grad/ConcatOffset:offset:1"
      input: "gradients/basic_lstm_cell/concat_grad/Shape_1:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "gradients/AddN_4"
      op: "AddN"
      input: "gradients/grad_ys_4:output:0"
      input: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1:product:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_4"
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistelementshape"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1/element_shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1"
      op: "TensorListPopBack"
      input: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistlength"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1/element_shape:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve"
      op: "TensorListReserve"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack:tensor:0"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1:tensor:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape_type"
        value {
          type: DT_INT32
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem"
      op: "TensorListSetItem"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve:handle:0"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:tensor:0"
      input: "gradients/basic_lstm_cell/concat_grad/Slice:output:0"
      attr {
        key: "element_dtype"
        value {
          type: DT_FLOAT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "gradients/AddN_5"
      op: "AddN"
      input: "gradients/grad_ys_3:output:0"
      input: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListSetItem:output_handle:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/grad_ys_3"
          }
        }
      }
    }
    node_def {
      name: "add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "add"
      op: "AddV2"
      input: "placeholder"
      input: "add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "add:z:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem:output_handle:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
      experimental_type {
        type_id: TFT_PRODUCT
        args {
          type_id: TFT_ARRAY
          args {
            type_id: TFT_TENSOR
            args {
              type_id: TFT_FLOAT
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "gradients/basic_lstm_cell/Mul_grad/Mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "gradients/basic_lstm_cell/concat_grad/Slice_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Identity_6"
      op: "Identity"
      input: "gradients/AddN_5:sum:0"
      attr {
        key: "T"
        value {
          type: DT_VARIANT
        }
      }
    }
    node_def {
      name: "Identity_7"
      op: "Identity"
      input: "gradients/AddN_4:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Identity_8"
      op: "Identity"
      input: "gradients/AddN_3:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Identity_9"
      op: "Identity"
      input: "gradients/AddN_2:sum:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "gradients_basic_lstm_cell_matmul_grad_matmul_1_tensorlistpopback"
      value: "gradients/basic_lstm_cell/MatMul_grad/MatMul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_matmul_grad_matmul_basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity"
      value: "gradients_basic_lstm_cell_matmul_grad_matmul_basic_lstm_cell_matmul_lstm_caption_rnn_basic_lstm_cell_kernel_read_identity_0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_1_grad_mul_1_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_1_grad/Mul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_1_grad_mul_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_1_grad/Mul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_2_grad_mul_1_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_2_grad/Mul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_2_grad_mul_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_2_grad/Mul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_grad_mul_1_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_grad/Mul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_basic_lstm_cell_mul_grad_mul_tensorlistpopback"
      value: "gradients/basic_lstm_cell/Mul_grad/Mul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_mul_grad_broadcastgradientargs_tensorlistpopback"
      value: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_mul_grad_broadcastgradientargs_tensorlistpopback_1"
      value: "gradients/dropout/Mul_grad/BroadcastGradientArgs/TensorListPopBack_1:output_handle:0"
    }
    ret {
      key: "gradients_dropout_mul_grad_mul_1_tensorlistpopback"
      value: "gradients/dropout/Mul_grad/Mul_1/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_mul_grad_mul_tensorlistpopback"
      value: "gradients/dropout/Mul_grad/Mul/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_realdiv_grad_broadcastgradientargs_tensorlistpopback"
      value: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_realdiv_grad_neg_tensorlistpopback"
      value: "gradients/dropout/RealDiv_grad/Neg/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_realdiv_grad_realdiv_tensorlistpopback"
      value: "gradients/dropout/RealDiv_grad/RealDiv/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_sub_grad_broadcastgradientargs_tensorlistpopback"
      value: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_dropout_sub_grad_broadcastgradientargs_tensorlistpopback_1"
      value: "gradients/dropout/Sub_grad/BroadcastGradientArgs/TensorListPopBack_1:output_handle:0"
    }
    ret {
      key: "gradients_sub_grad_broadcastgradientargs_tensorlistpopback"
      value: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_sub_grad_broadcastgradientargs_tensorlistpopback_1"
      value: "gradients/sub_grad/BroadcastGradientArgs/TensorListPopBack_1:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback"
      value: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2read_tensorlistgetitem_grad_tensorlistreserve_tensorlistpopback_1"
      value: "gradients/TensorArrayV2Read/TensorListGetItem_grad/TensorListReserve/TensorListPopBack_1:output_handle:0"
    }
    ret {
      key: "gradients_tensorarrayv2write_tensorlistsetitem_grad_tensorlistsetitem_tensorlistpopback"
      value: "gradients/TensorArrayV2Write/TensorListSetItem_grad/TensorListSetItem/TensorListPopBack:output_handle:0"
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    ret {
      key: "identity_6"
      value: "Identity_6:output:0"
    }
    ret {
      key: "identity_7"
      value: "Identity_7:output:0"
    }
    ret {
      key: "identity_8"
      value: "Identity_8:output:0"
    }
    ret {
      key: "identity_9"
      value: "Identity_9:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1500
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1500
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
  function {
    signature {
      name: "LSTM_Video_1_rnn_while_cond_3647_rewritten_grad_4912"
      input_arg {
        name: "placeholder"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_1"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_2"
        type: DT_INT32
      }
      input_arg {
        name: "placeholder_3"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_4"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_5"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_6"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_7"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_8"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_9"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_10"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_11"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_12"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_13"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_14"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_15"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_16"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_17"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_18"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_19"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_20"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_21"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_22"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_23"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_24"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_25"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_26"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_27"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_28"
        type: DT_FLOAT
      }
      input_arg {
        name: "placeholder_29"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_30"
        type: DT_VARIANT
      }
      input_arg {
        name: "placeholder_31"
        type: DT_VARIANT
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "placeholder"
      input: "placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "Less:z:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    arg_attr {
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1
                }
                dim {
                  size: 500
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1000
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 9
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                unknown_rank: true
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 10
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 11
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 12
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 13
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 14
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 15
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 16
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 17
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 18
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 19
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 20
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 21
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 22
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 23
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 24
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 25
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 26
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 27
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 28
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
                dim {
                  size: 1000
                }
                dim {
                  size: 2000
                }
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 29
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 30
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
    arg_attr {
      key: 31
      value {
        attr {
          key: "_output_shapes"
          value {
            list {
              shape {
              }
            }
          }
        }
      }
    }
  }
}
versions {
  producer: 987
  min_consumer: 12
}
